{"version":3,"sources":["Applications/CocosCreator.app/Contents/Resources/app.asar/node_modules/browser-pack/_prelude.js","scripts/utils/DataProcess.js","project.js","scripts/utils/EventDispatcher.js","scripts/Global.js","scripts/utils/Helpers.js","MainScene/script/MainScene.js","scripts/Widgets/ProgressBar.js","scripts/utils/WSocket2.js","scripts/libs/socket-io.js","scripts/libs/string-format.js.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","DataProcess","module","_classCallCheck","instance","Constructor","TypeError","cc","_RFpush","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","handlers","playerData","loginEvent","data","log","washEvent","wSocket","this","addListener","_RFpop","EventDispatcher","listenersByEvent","onceListenersByEvent","addEventListener","event","listener","listenerContext","push","scope","addOnceEventListener","removeEventListener","c","len","d","splice","removeAllEventListener","dispatchEvent","eventData","oc","olen","od","getListeners","Global","_interopRequireDefault","obj","__esModule","default","_this","_WSocket2","_WSocket22","_DataProcess","_DataProcess2","window","socketConnection","SOCKET_REMOTE_URL","textSpeed","TEXT_SPEED_MID","dataProcess","connect","params","sendCommand","openid","init","WSocket2","Helpers","getRandomInt","min","max","Math","floor","random","saveLocal","sys","localStorage","setItem","loadLocal","getItem","MainScene","_ProgressBar","Class","extends","Component","properties","animLayer","type","Prefab","hungryBar","Node","cleanBar","smartBar","activeBar","energyBar","happyBar","onLoad","getComponent","playAnim","animName","_animLayer","instantiate","animCtrl","Animation","stop","on","removeFromParent","parent","node","play","onFeedPressed","onBathPressed","_this2","petInfoId","onActivityPressed","onSleepPressed","onInjectPressed","onShopPressed","onAboutPressed","ProgressBar","frontLayer","Sprite","progressBar","maxValue","curValue","setValue","fillRange","isNative","io","SocketIO","NOT_CONNECTED","CONNECTING","CONNECTED","url","status","handleList","callBack","static_io","console","cmd","fn","once","handler","toString","parsedObj","parseMsg","handlerObj","iterObj","command","strToSend","JSON","stringify","emit","socket-io","global","define","amd","g","self","1","_dereq_","lookup","uri","opts","undefined","parsed","source","id","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","debug","Manager","socket","parser","managers","protocol","Socket","./manager","./socket","./url","socket.io-parser","2","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","jitter","timeout","readyState","connecting","lastPing","encoding","packetBuffer","encoder","Encoder","decoder","Decoder","autoConnect","open","eio","Emitter","bind","indexOf","has","hasOwnProperty","emitAll","apply","arguments","nsp","updateSocketIds","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","destroy","close","clearTimeout","onping","Date","onpong","ondata","add","ondecoded","packet","onerror","onConnecting","index","encode","encodedPackets","write","options","processPacketQueue","pack","shift","sub","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","./on","backo2","component-bind","component-emitter","engine.io-client","indexof","3","ev","removeListener","4","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","events","connect_error","connect_timeout","error","reconnect_attempt","reconnect_failed","reconnect_error","ping","pong","subEvents","send","args","unshift","parserType","EVENT","BINARY_EVENT","compress","flags","pop","CONNECT","onpacket","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","sent","emitBuffered","has-binary","to-array","5","loc","location","host","charAt","test","parseuri","port","ipv6","href","6","after","count","callback","err_cb","proxy","result","bail","noop","7","arraybuffer","start","end","bytes","byteLength","slice","ArrayBuffer","abv","Uint8Array","ii","buffer","8","ms","factor","pow","rand","deviation","9","chars","charCodeAt","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","10","mapArrayBufferViews","ary","chunk","buf","copy","set","byteOffset","BlobBuilderConstructor","bb","BlobBuilder","append","getBlob","BlobConstructor","Blob","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","size","blobSupportsArrayBufferView","b","blobBuilderSupported","11","concat","12","mixin","_callbacks","off","removeAllListeners","callbacks","cb","listeners","hasListeners","13","constructor","14","useColors","document","documentElement","style","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","color","Array","lastC","replace","Function","save","namespaces","storage","removeItem","load","localstorage","chrome","local","colors","formatters","j","enable","./debug","15","selectColor","prevColor","disabled","enabled","curr","prevTime","prev","coerce","format","formatter","val","logFn","split","skips","substr","names","disable","name","stack","message","16","./lib/","17","engine.io-parser","18","hostname","secure","query","agent","parseqs","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","writeBuffer","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","freeGlobal","extraHeaders","keys","clone","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","sid","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","msg","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","upgrades","onHandshake","setPing","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","pingTimeoutTimer","pingIntervalTimer","sendPacket","prevBufferLen","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","./transport","./transports","19","description","doOpen","doClose","packets","onData","decodePacket","20","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","./polling-jsonp","./polling-xhr","./websocket","xmlhttprequest-ssl","21","empty","JSONPPolling","Polling","___eio","script","inherit","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","doPoll","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","doWrite","complete","initIframe","html","iframeId","area","className","position","top","left","method","setAttribute","action","submit","attachEvent","onreadystatechange","onload","./polling","component-inherit","22","Request","isBinary","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","responseText","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","String","fromCharCode","ui8Arr","dataArray","idx","XDomainRequest","23","hasXHR2","yeast","poll","onPause","total","decodePayload","callbackfn","encodePayload","schema","b64","../transport","24","WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","binary","addEventListeners","onmessage","done","encodePacket","Buffer","25","hasCORS","ActiveXObject","has-cors","26","27","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","map","each","next","eachWithIndex","el","hasBinary","sliceBuffer","base64encoder","utf8","isAndroid","isPhantomJS","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","decodeBase64Packet","Number","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayloadAsBinary","chr","ret","totalLength","reduce","acc","resultArray","bufferIndex","forEach","isString","ab","view","lenStr","binaryIdentifier","lengthAry","bufferTail","buffers","numberTooLong","tailArray","msgLength","./keys","arraybuffer.slice","base64-arraybuffer","28","arr","29","_hasBinary","isBuffer","File","isArray","toJSON","isarray","30","31","32","33","34","runInContext","context","undef","isSupported","serialized","stringifySupported","isExtended","getClass","parse","parseSupported","root","SyntaxError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","object","Properties","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes","92","leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","serialize","whitespace","indentation","date","time","hours","minutes","seconds","milliseconds","element","prefix","filter","Index","Source","Unescapes","47","98","116","110","102","114","lex","begin","isSigned","get","hasMembers","update","walk","isLoader","function","freeExports","nodeType","previousJSON","isRestored","JSON3","noConflict","35","str","exec","parseFloat","y","h","m","short","round","long","plural","ceil","36","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","37","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","38","re","parts","authority","ipv6uri","39","isBuf","deconstructPacket","_deconstructPacket","placeholder","_placeholder","num","newData","packetData","attachments","reconstructPacket","_reconstructPacket","removeBlobs","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","bloblessData","./is-buffer","40","encodeAsString","encodeAsBinary","writeEncoding","deconstruction","reconstructor","decodeString","types","BinaryReconstructor","reconPack","takeBinaryData","finishedReconstruction","binData","./binary","json3","41","42","dup","43","list","array","44","ucs2decode","string","extra","output","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeModule","version","45","alphabet","decoded","now","seed","string-format.js","replacements","formatString"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RFpush(module, '01ae2/6utNI8KosxbSutYdp', 'DataProcess');\n// scripts/utils/DataProcess.js\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar handlers = {};\n\nvar playerData = {};\n\nhandlers.loginEvent = function (data) {\n    for (var i in data) {\n        playerData[i] = data[i];\n    }\n    cc.log(\"global:\" + playerData);\n};\n\nhandlers.washEvent = function (data) {\n    for (var i in data) {\n        playerData[i] = data[i];\n    }\n    cc.log(\"global:\" + playerData);\n};\n\nvar DataProcess = (function () {\n    function DataProcess(wSocket) {\n        _classCallCheck(this, DataProcess);\n\n        this.wSocket = wSocket;\n    }\n\n    _createClass(DataProcess, [{\n        key: \"init\",\n        value: function init() {\n            for (var i in handlers) {\n                cc.log(\"i:\" + i);\n                this.wSocket.addListener(i, this, handlers[i]);\n            }\n            cc.log(\"Data process 初始化完成\");\n        }\n    }]);\n\n    return DataProcess;\n})();\n\nexports[\"default\"] = DataProcess;\nmodule.exports = exports[\"default\"];\n\ncc._RFpop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"DataProcess\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '01ae2/6utNI8KosxbSutYdp', 'DataProcess');\n// scripts/utils/DataProcess.js\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar handlers = {};\n\nvar playerData = {};\n\nhandlers.loginEvent = function (data) {\n    for (var i in data) {\n        playerData[i] = data[i];\n    }\n    cc.log(\"global:\" + playerData);\n};\n\nhandlers.washEvent = function (data) {\n    for (var i in data) {\n        playerData[i] = data[i];\n    }\n    cc.log(\"global:\" + playerData);\n};\n\nvar DataProcess = (function () {\n    function DataProcess(wSocket) {\n        _classCallCheck(this, DataProcess);\n\n        this.wSocket = wSocket;\n    }\n\n    _createClass(DataProcess, [{\n        key: \"init\",\n        value: function init() {\n            for (var i in handlers) {\n                cc.log(\"i:\" + i);\n                this.wSocket.addListener(i, this, handlers[i]);\n            }\n            cc.log(\"Data process 初始化完成\");\n        }\n    }]);\n\n    return DataProcess;\n})();\n\nexports[\"default\"] = DataProcess;\nmodule.exports = exports[\"default\"];\n\ncc._RFpop();\n},{}],\"EventDispatcher\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'f827drJqeVB8oHQCSIt/Ff3', 'EventDispatcher');\n// scripts/utils/EventDispatcher.js\n\n/**\n * Created by apple on 16/8/3.\n */\n\nvar EventDispatcher = function EventDispatcher() {\n    this.listenersByEvent = {};\n    this.onceListenersByEvent = {};\n};\n\n//添加事件侦听器\nEventDispatcher.prototype.addEventListener = function (event, listener, listenerContext) {\n    null == this.listenersByEvent[event] && (this.listenersByEvent[event] = []);\n    this.listenersByEvent[event].push({ listener: listener, scope: listenerContext });\n};\n\n//添加一次性侦听事件\nEventDispatcher.prototype.addOnceEventListener = function (event, listener, listenerContext) {\n    null == this.onceListenersByEvent[event] && (this.onceListenersByEvent[event] = []);\n    this.onceListenersByEvent[event].push({ listener: listener, scope: listenerContext });\n};\n\n//移除事件侦听器\nEventDispatcher.prototype.removeEventListener = function (event, listener) {\n    var c = this.listenersByEvent[event];\n\n    if (null != c) {\n        var len = c.length;\n        for (var d = 0; d < len; d++) if (c[d].listener === listener) {\n            c.splice(d, 1);\n            break;\n        }\n    }\n};\n\n//移除所有监听事件\nEventDispatcher.prototype.removeAllEventListener = function () {\n    this.listenersByEvent = null;\n    this.listenersByEvent = {};\n    this.onceListenersByEvent = null;\n    this.onceListenersByEvent = {};\n};\n\n//派发事件\nEventDispatcher.prototype.dispatchEvent = function (event, eventData) {\n    //持久事件\n    var c = this.listenersByEvent[event];\n    if (c && 0 < c.length) {\n        var len = c.length;\n        for (var d = 0; d < len; d++) {\n            c[d].listener.call(c[d].scope, eventData);\n        }\n    }\n    //一次性事件\n    var oc = this.onceListenersByEvent[event];\n    if (oc && 0 < oc.length) {\n        var olen = oc.length;\n        for (var od = 0; od < olen; od++) {\n            oc[od].listener.call(oc[od].scope, eventData);\n        }\n        oc.splice(0, olen);\n    }\n};\n//监听事件所有监听事件\nEventDispatcher.prototype.getListeners = function (event) {\n    return this.listenersByEvent[event];\n};\n\nmodule.exports = EventDispatcher;\n\ncc._RFpop();\n},{}],\"Global\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'ac038HfqLtPKZUX65Vgabav', 'Global');\n// scripts/Global.js\n\nvar _this = this;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _WSocket2 = require(\"WSocket2\");\n\nvar _WSocket22 = _interopRequireDefault(_WSocket2);\n\nvar _DataProcess = require(\"DataProcess\");\n\nvar _DataProcess2 = _interopRequireDefault(_DataProcess);\n\nwindow.Global = {\n        socketConnection: new _WSocket22[\"default\"](SOCKET_REMOTE_URL), //socket连接\n        // loginConnection:new WSocket(SOCKET_REMOTE_LOGIN), //socket连接\n        textSpeed: TEXT_SPEED_MID, //文本速度\n        // i18n:require('i18n'),           //多语言支持\n        dataProcess: null\n};\n\nGlobal.socketConnection.connect(function () {\n\n        Global.socketConnection.addListener(\"loginEvent\", _this, function (params) {\n                cc.log(\"登陆返回:\" + params);\n        });\n\n        Global.socketConnection.sendCommand(\"loginEvent\", {\n                openid: \"ooF7Hjs-Z1UiguyM4Q-O3vheRoBk\"\n        });\n\n        Global.dataProcess = new _DataProcess2[\"default\"](Global.socketConnection);\n        Global.dataProcess.init();\n});\n\ncc.log(\"Global loaded\");\n\n// Global.i18n.init('zh');// init 的参数就是语言标识，如 'zh', 'en' 等\n\ncc._RFpop();\n},{\"DataProcess\":\"DataProcess\",\"WSocket2\":\"WSocket2\"}],\"Helpers\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'ec5ccXiT0FLN6b4svuC5qn3', 'Helpers');\n// scripts/utils/Helpers.js\n\nif (CC_JSB && cc.runtime) {\n    // fix cocos-creator/fireball#3578\n    cc.LoaderLayer.setUseDefaultSource(false);\n    cc.Dialog.setUseDefaultSource(false);\n}\n\n// Returns a random integer between min (included) and max (excluded)\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction saveLocal(key, value) {\n    return cc.sys.localStorage.setItem(key, value);\n}\n\nfunction loadLocal(key) {\n    return cc.sys.localStorage.getItem(key);\n}\n\nmodule.exports = {\n    getRandomInt: getRandomInt,\n    saveLocal: saveLocal,\n    loadLocal: loadLocal\n};\n\ncc._RFpop();\n},{}],\"MainScene\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '9046bOIQExLpIIFnWL5HF3t', 'MainScene');\n// MainScene/script/MainScene.js\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _ProgressBar = require('ProgressBar');\n\nvar _ProgressBar2 = _interopRequireDefault(_ProgressBar);\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        animLayer: {\n            'default': null,\n            type: cc.Prefab\n        },\n\n        hungryBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        cleanBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        smartBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        activeBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        energyBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        happyBar: {\n            'default': null,\n            type: cc.Node\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.log('进入主页面');\n        this.init();\n\n        // Global.socketConnection.connect(()=>{\n        //     Global.socketConnection.sendCommand(\"loginEvent\",{\n        //         openid:\"ooF7Hjs-Z1UiguyM4Q-O3vheRoBk\"\n        //     })\n        //     cc.log('登陆请求已发送')\n\n        //     Global.socketConnection.addListener(\"loginEvent\",this,(params)=>{\n        //         cc.log(`登陆返回:${params}`)\n        //     })\n\n        // })\n    },\n\n    init: function init() {\n        cc.log(\"inininint\");\n        this.hungryBar.getComponent(\"ProgressBar\").init(1000, 400);\n        this.cleanBar.getComponent(\"ProgressBar\").init(1000, 200);\n        this.smartBar.getComponent(\"ProgressBar\").init(1000, 100);\n        this.activeBar.getComponent(\"ProgressBar\").init(1000, 245);\n        this.energyBar.getComponent(\"ProgressBar\").init(1000, 888);\n        this.happyBar.getComponent(\"ProgressBar\").init(1000, 982);\n        cc.log(\"inininintvvvvv\");\n    },\n\n    playAnim: function playAnim(animName) {\n        var _this = this;\n\n        cc.log('我进来了');\n        if (typeof this._animLayer == \"undefined\") {\n            this._animLayer = cc.instantiate(this.animLayer);\n        }\n        cc.log('动画' + this._animLayer);\n        var animCtrl = this._animLayer.getComponent(cc.Animation);\n        animCtrl.stop();\n        cc.log('动画控制器' + animCtrl);\n\n        animCtrl.on('stop', function () {\n            _this._animLayer.removeFromParent();\n        }, this);\n\n        animCtrl.on('play', function () {\n            cc.log('加载动画');\n            if (_this._animLayer.parent != _this.node) {\n                _this._animLayer.parent = _this.node;\n                cc.log('加载动画上了');\n            }\n        }, this);\n\n        cc.log('播放动画');\n        animCtrl.play(animName);\n    },\n\n    onFeedPressed: function onFeedPressed() {\n        this.playAnim('anim_heart');\n    },\n    onBathPressed: function onBathPressed() {\n        var _this2 = this;\n\n        Global.socketConnection.sendCommand(\"washEvent\", {\n            petInfoId: \"1\"\n        });\n        Global.socketConnection.addListener(\"washEvent\", this, function (data) {\n\n            _this2.playAnim('anim_bath');\n        }, null, true);\n    },\n    onActivityPressed: function onActivityPressed() {},\n    onSleepPressed: function onSleepPressed() {},\n    onInjectPressed: function onInjectPressed() {},\n    onShopPressed: function onShopPressed() {},\n    onAboutPressed: function onAboutPressed() {}\n\n});\n\n// Message Received：{\"code\":1000,\"data\":{\"active\":1000,\"clean\":978,\"createTime\":1472012216000,\"energy\":955,\"happy\":696,\"hunger\":1000,\"id\":1,\"modifyTime\":1472999672000,\"petInfoId\":1,\"smarts\":1000},\"msg\":\"洗澡更新状态值成功\"}\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{\"ProgressBar\":\"ProgressBar\"}],\"ProgressBar\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '867d6EHvQFFcJWFkswONFIs', 'ProgressBar');\n// scripts/Widgets/ProgressBar.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n\n        frontLayer: {\n            'default': null,\n            type: cc.Sprite\n        },\n\n        progressBar: {\n            'default': null,\n            type: cc.Sprite\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.log('创建进度条');\n    },\n\n    init: function init(maxValue, curValue) {\n        this.curValue = curValue ? curValue : 0;\n        this.maxValue = maxValue;\n        this.setValue(this.curValue);\n        cc.log('初始化完成');\n    },\n\n    setValue: function setValue(value) {\n        this.curValue = value;\n        this.progressBar.fillRange = this.curValue / this.maxValue;\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{}],\"WSocket2\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '6af701dlgJOeoRNWvjO3wxA', 'WSocket2');\n// scripts/utils/WSocket2.js\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * 使用socket.io\n */\n\nif (cc.sys.isNative) {\n    window.io = SocketIO;\n} else {\n    require('socket-io');\n}\n\nvar NOT_CONNECTED = 0;\nvar CONNECTING = 1;\nvar CONNECTED = 2;\n\nvar WSocket2 = (function () {\n    function WSocket2() {\n        _classCallCheck(this, WSocket2);\n\n        this.url = SOCKET_REMOTE_URL;\n        this.status = NOT_CONNECTED;\n        this.handleList = {};\n    }\n\n    _createClass(WSocket2, [{\n        key: 'connect',\n        value: function connect(callBack) {\n            var _this = this;\n\n            this.static_io = io.connect(SOCKET_REMOTE_URL);\n            this.static_io.on('connecting', function () {\n                _this.status = CONNECTING;\n                console.log(\"连接中\");\n            });\n            this.static_io.on('connect', function () {\n                _this.status = CONNECTED;\n                console.log(\"连接成功\");\n                callBack();\n            });\n            this.static_io.on('disconnect', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接断开\");\n            });\n            this.static_io.on('connect_failed', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接失败\");\n            });\n            this.static_io.on('error', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接错误\");\n            });\n            this.static_io.on('reconnect_failed', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"重连失败\");\n            });\n            this.static_io.on('reconnect', function () {\n                _this.status = CONNECTED;\n                console.log(\"重连成功\");\n            });\n            this.static_io.on('reconnecting', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"重连接中\");\n            });\n\n            this.static_io.on('msg', function (data) {\n                console.log(data);\n            });\n\n            this.static_io.on('connected', function (data) {\n                console.log(\"欢迎信息:\" + data);\n            });\n        }\n\n        /**\n         * 添加socket消息监听\n         * @cmd socket消息命令号\n         * @obj 监听对象tag\n         * @fn 消息回调函数（第一个参数为msg）\n         * @params 自定义参数\n         * @once 监听一次还是常监听\n         */\n    }, {\n        key: 'addListener',\n        value: function addListener(cmd, obj, fn, params, once) {\n            var _this2 = this;\n\n            if (this.status != CONNECTED) {\n                cc.log(\"未连接socket，不能设置监听\");\n                return;\n            }\n\n            if (typeof this.handleList[cmd] == \"undefined\") {\n                this.handleList[cmd] = {};\n            }\n\n            this.handleList[cmd][obj] = {\n                handler: fn,\n                params: params,\n                once: once\n            };\n\n            this.static_io.on(cmd, function (data) {\n                data = data.toString();\n                cc.log(\"Message Received：\" + data);\n                var parsedObj = parseMsg(data);\n                for (var handlerObj in _this2.handleList[cmd]) {\n                    var iterObj = _this2.handleList[cmd][handlerObj];\n                    iterObj.handler(parsedObj, iterObj.params);\n                    if (iterObj.once) {\n                        delete _this2.handleList[cmd][handlerObj];\n                    }\n                }\n            });\n        }\n\n        /**\n         * command:命令\n         * params:参数json\n         */\n    }, {\n        key: 'sendCommand',\n        value: function sendCommand(command, params) {\n            if (this.status != CONNECTED) {\n                cc.log(\"未连接socket，不能发送消息\");\n                return;\n            }\n            var strToSend = JSON.stringify(params);\n            cc.log(\"send command :\" + command);\n            cc.log(\"send content :\" + strToSend);\n            this.static_io.emit(command, params);\n        }\n    }]);\n\n    return WSocket2;\n})();\n\nexports['default'] = WSocket2;\nmodule.exports = exports['default'];\n\ncc._RFpop();\n},{\"socket-io\":\"socket-io\"}],\"socket-io\":[function(require,module,exports){\n(function (global){\n\"use strict\";\ncc._RFpush(module, 'd1a5bh5ZCtGgoXan5jyXPRz', 'socket-io');\n// scripts/libs/socket-io.js\n\nif (!cc.sys.isNative) {\n  (function (f) {\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = f();\n    } else if (typeof define === \"function\" && define.amd) {\n      define([], f);\n    } else {\n      var g;if (typeof window !== \"undefined\") {\n        g = window;\n      } else if (typeof global !== \"undefined\") {\n        g = global;\n      } else if (typeof self !== \"undefined\") {\n        g = self;\n      } else {\n        g = this;\n      }g.io = f();\n    }\n  })(function () {\n    var define, module, exports;return (function e(t, n, r) {\n      function s(o, u) {\n        if (!n[o]) {\n          if (!t[o]) {\n            var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw (f.code = \"MODULE_NOT_FOUND\", f);\n          }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n            var n = t[o][1][e];return s(n ? n : e);\n          }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n      }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) s(r[o]);return s;\n    })({ 1: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var url = _dereq_('./url');\n        var parser = _dereq_('socket.io-parser');\n        var Manager = _dereq_('./manager');\n        var debug = _dereq_('debug')('socket.io-client');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = lookup;\n\n        /**\n         * Managers cache.\n         */\n\n        var cache = exports.managers = {};\n\n        /**\n         * Looks up an existing `Manager` for multiplexing.\n         * If the user summons:\n         *\n         *   `io('http://localhost/a');`\n         *   `io('http://localhost/b');`\n         *\n         * We reuse the existing instance based on same scheme/port/host,\n         * and we initialize sockets for each namespace.\n         *\n         * @api public\n         */\n\n        function lookup(uri, opts) {\n          if (typeof uri == 'object') {\n            opts = uri;\n            uri = undefined;\n          }\n\n          opts = opts || {};\n\n          var parsed = url(uri);\n          var source = parsed.source;\n          var id = parsed.id;\n          var path = parsed.path;\n          var sameNamespace = cache[id] && path in cache[id].nsps;\n          var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\n          var io;\n\n          if (newConnection) {\n            debug('ignoring socket cache for %s', source);\n            io = Manager(source, opts);\n          } else {\n            if (!cache[id]) {\n              debug('new io instance for %s', source);\n              cache[id] = Manager(source, opts);\n            }\n            io = cache[id];\n          }\n\n          return io.socket(parsed.path);\n        }\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = parser.protocol;\n\n        /**\n         * `connect`.\n         *\n         * @param {String} uri\n         * @api public\n         */\n\n        exports.connect = lookup;\n\n        /**\n         * Expose constructors for standalone build.\n         *\n         * @api public\n         */\n\n        exports.Manager = _dereq_('./manager');\n        exports.Socket = _dereq_('./socket');\n      }, { \"./manager\": 2, \"./socket\": 4, \"./url\": 5, \"debug\": 14, \"socket.io-parser\": 40 }], 2: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var eio = _dereq_('engine.io-client');\n        var Socket = _dereq_('./socket');\n        var Emitter = _dereq_('component-emitter');\n        var parser = _dereq_('socket.io-parser');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:manager');\n        var indexOf = _dereq_('indexof');\n        var Backoff = _dereq_('backo2');\n\n        /**\n         * IE6+ hasOwnProperty\n         */\n\n        var has = Object.prototype.hasOwnProperty;\n\n        /**\n         * Module exports\n         */\n\n        module.exports = Manager;\n\n        /**\n         * `Manager` constructor.\n         *\n         * @param {String} engine instance or engine uri/opts\n         * @param {Object} options\n         * @api public\n         */\n\n        function Manager(uri, opts) {\n          if (!(this instanceof Manager)) return new Manager(uri, opts);\n          if (uri && 'object' == typeof uri) {\n            opts = uri;\n            uri = undefined;\n          }\n          opts = opts || {};\n\n          opts.path = opts.path || '/socket.io';\n          this.nsps = {};\n          this.subs = [];\n          this.opts = opts;\n          this.reconnection(opts.reconnection !== false);\n          this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n          this.reconnectionDelay(opts.reconnectionDelay || 1000);\n          this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n          this.randomizationFactor(opts.randomizationFactor || 0.5);\n          this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n          });\n          this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n          this.readyState = 'closed';\n          this.uri = uri;\n          this.connecting = [];\n          this.lastPing = null;\n          this.encoding = false;\n          this.packetBuffer = [];\n          this.encoder = new parser.Encoder();\n          this.decoder = new parser.Decoder();\n          this.autoConnect = opts.autoConnect !== false;\n          if (this.autoConnect) this.open();\n        }\n\n        /**\n         * Propagate given event to sockets and emit on `this`\n         *\n         * @api private\n         */\n\n        Manager.prototype.emitAll = function () {\n          this.emit.apply(this, arguments);\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n            }\n          }\n        };\n\n        /**\n         * Update `socket.id` of all sockets\n         *\n         * @api private\n         */\n\n        Manager.prototype.updateSocketIds = function () {\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].id = this.engine.id;\n            }\n          }\n        };\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Manager.prototype);\n\n        /**\n         * Sets the `reconnection` config.\n         *\n         * @param {Boolean} true/false if it should automatically reconnect\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnection = function (v) {\n          if (!arguments.length) return this._reconnection;\n          this._reconnection = !!v;\n          return this;\n        };\n\n        /**\n         * Sets the reconnection attempts config.\n         *\n         * @param {Number} max reconnection attempts before giving up\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionAttempts = function (v) {\n          if (!arguments.length) return this._reconnectionAttempts;\n          this._reconnectionAttempts = v;\n          return this;\n        };\n\n        /**\n         * Sets the delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelay = function (v) {\n          if (!arguments.length) return this._reconnectionDelay;\n          this._reconnectionDelay = v;\n          this.backoff && this.backoff.setMin(v);\n          return this;\n        };\n\n        Manager.prototype.randomizationFactor = function (v) {\n          if (!arguments.length) return this._randomizationFactor;\n          this._randomizationFactor = v;\n          this.backoff && this.backoff.setJitter(v);\n          return this;\n        };\n\n        /**\n         * Sets the maximum delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelayMax = function (v) {\n          if (!arguments.length) return this._reconnectionDelayMax;\n          this._reconnectionDelayMax = v;\n          this.backoff && this.backoff.setMax(v);\n          return this;\n        };\n\n        /**\n         * Sets the connection timeout. `false` to disable\n         *\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.timeout = function (v) {\n          if (!arguments.length) return this._timeout;\n          this._timeout = v;\n          return this;\n        };\n\n        /**\n         * Starts trying to reconnect if reconnection is enabled and we have not\n         * started reconnecting yet\n         *\n         * @api private\n         */\n\n        Manager.prototype.maybeReconnectOnOpen = function () {\n          // Only try to reconnect if it's the first time we're connecting\n          if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Sets the current transport `socket`.\n         *\n         * @param {Function} optional, callback\n         * @return {Manager} self\n         * @api public\n         */\n\n        Manager.prototype.open = Manager.prototype.connect = function (fn) {\n          debug('readyState %s', this.readyState);\n          if (~this.readyState.indexOf('open')) return this;\n\n          debug('opening %s', this.uri);\n          this.engine = eio(this.uri, this.opts);\n          var socket = this.engine;\n          var self = this;\n          this.readyState = 'opening';\n          this.skipReconnect = false;\n\n          // emit `open`\n          var openSub = on(socket, 'open', function () {\n            self.onopen();\n            fn && fn();\n          });\n\n          // emit `connect_error`\n          var errorSub = on(socket, 'error', function (data) {\n            debug('connect_error');\n            self.cleanup();\n            self.readyState = 'closed';\n            self.emitAll('connect_error', data);\n            if (fn) {\n              var err = new Error('Connection error');\n              err.data = data;\n              fn(err);\n            } else {\n              // Only do this if there is no fn to handle the error\n              self.maybeReconnectOnOpen();\n            }\n          });\n\n          // emit `connect_timeout`\n          if (false !== this._timeout) {\n            var timeout = this._timeout;\n            debug('connect attempt will timeout after %d', timeout);\n\n            // set timer\n            var timer = setTimeout(function () {\n              debug('connect attempt timed out after %d', timeout);\n              openSub.destroy();\n              socket.close();\n              socket.emit('error', 'timeout');\n              self.emitAll('connect_timeout', timeout);\n            }, timeout);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n\n          this.subs.push(openSub);\n          this.subs.push(errorSub);\n\n          return this;\n        };\n\n        /**\n         * Called upon transport open.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onopen = function () {\n          debug('open');\n\n          // clear old subs\n          this.cleanup();\n\n          // mark as open\n          this.readyState = 'open';\n          this.emit('open');\n\n          // add new subs\n          var socket = this.engine;\n          this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n          this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n          this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n          this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n          this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n          this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n        };\n\n        /**\n         * Called upon a ping.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onping = function () {\n          this.lastPing = new Date();\n          this.emitAll('ping');\n        };\n\n        /**\n         * Called upon a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onpong = function () {\n          this.emitAll('pong', new Date() - this.lastPing);\n        };\n\n        /**\n         * Called with data.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondata = function (data) {\n          this.decoder.add(data);\n        };\n\n        /**\n         * Called when parser fully decodes a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondecoded = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon socket error.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onerror = function (err) {\n          debug('error', err);\n          this.emitAll('error', err);\n        };\n\n        /**\n         * Creates a new socket for the given `nsp`.\n         *\n         * @return {Socket}\n         * @api public\n         */\n\n        Manager.prototype.socket = function (nsp) {\n          var socket = this.nsps[nsp];\n          if (!socket) {\n            socket = new Socket(this, nsp);\n            this.nsps[nsp] = socket;\n            var self = this;\n            socket.on('connecting', onConnecting);\n            socket.on('connect', function () {\n              socket.id = self.engine.id;\n            });\n\n            if (this.autoConnect) {\n              // manually call here since connecting evnet is fired before listening\n              onConnecting();\n            }\n          }\n\n          function onConnecting() {\n            if (! ~indexOf(self.connecting, socket)) {\n              self.connecting.push(socket);\n            }\n          }\n\n          return socket;\n        };\n\n        /**\n         * Called upon a socket close.\n         *\n         * @param {Socket} socket\n         */\n\n        Manager.prototype.destroy = function (socket) {\n          var index = indexOf(this.connecting, socket);\n          if (~index) this.connecting.splice(index, 1);\n          if (this.connecting.length) return;\n\n          this.close();\n        };\n\n        /**\n         * Writes a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Manager.prototype.packet = function (packet) {\n          debug('writing packet %j', packet);\n          var self = this;\n\n          if (!self.encoding) {\n            // encode, then write to engine with result\n            self.encoding = true;\n            this.encoder.encode(packet, function (encodedPackets) {\n              for (var i = 0; i < encodedPackets.length; i++) {\n                self.engine.write(encodedPackets[i], packet.options);\n              }\n              self.encoding = false;\n              self.processPacketQueue();\n            });\n          } else {\n            // add packet to the queue\n            self.packetBuffer.push(packet);\n          }\n        };\n\n        /**\n         * If packet buffer is non-empty, begins encoding the\n         * next packet in line.\n         *\n         * @api private\n         */\n\n        Manager.prototype.processPacketQueue = function () {\n          if (this.packetBuffer.length > 0 && !this.encoding) {\n            var pack = this.packetBuffer.shift();\n            this.packet(pack);\n          }\n        };\n\n        /**\n         * Clean up transport subscriptions and packet buffer.\n         *\n         * @api private\n         */\n\n        Manager.prototype.cleanup = function () {\n          debug('cleanup');\n\n          var sub;\n          while (sub = this.subs.shift()) sub.destroy();\n\n          this.packetBuffer = [];\n          this.encoding = false;\n          this.lastPing = null;\n\n          this.decoder.destroy();\n        };\n\n        /**\n         * Close the current socket.\n         *\n         * @api private\n         */\n\n        Manager.prototype.close = Manager.prototype.disconnect = function () {\n          debug('disconnect');\n          this.skipReconnect = true;\n          this.reconnecting = false;\n          if ('opening' == this.readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n          }\n          this.backoff.reset();\n          this.readyState = 'closed';\n          if (this.engine) this.engine.close();\n        };\n\n        /**\n         * Called upon engine close.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onclose = function (reason) {\n          debug('onclose');\n\n          this.cleanup();\n          this.backoff.reset();\n          this.readyState = 'closed';\n          this.emit('close', reason);\n\n          if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Attempt a reconnection.\n         *\n         * @api private\n         */\n\n        Manager.prototype.reconnect = function () {\n          if (this.reconnecting || this.skipReconnect) return this;\n\n          var self = this;\n\n          if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug('reconnect failed');\n            this.backoff.reset();\n            this.emitAll('reconnect_failed');\n            this.reconnecting = false;\n          } else {\n            var delay = this.backoff.duration();\n            debug('will wait %dms before reconnect attempt', delay);\n\n            this.reconnecting = true;\n            var timer = setTimeout(function () {\n              if (self.skipReconnect) return;\n\n              debug('attempting reconnect');\n              self.emitAll('reconnect_attempt', self.backoff.attempts);\n              self.emitAll('reconnecting', self.backoff.attempts);\n\n              // check again for the case socket closed in above events\n              if (self.skipReconnect) return;\n\n              self.open(function (err) {\n                if (err) {\n                  debug('reconnect attempt error');\n                  self.reconnecting = false;\n                  self.reconnect();\n                  self.emitAll('reconnect_error', err.data);\n                } else {\n                  debug('reconnect success');\n                  self.onreconnect();\n                }\n              });\n            }, delay);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n        };\n\n        /**\n         * Called upon successful reconnect.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onreconnect = function () {\n          var attempt = this.backoff.attempts;\n          this.reconnecting = false;\n          this.backoff.reset();\n          this.updateSocketIds();\n          this.emitAll('reconnect', attempt);\n        };\n      }, { \"./on\": 3, \"./socket\": 4, \"backo2\": 8, \"component-bind\": 11, \"component-emitter\": 12, \"debug\": 14, \"engine.io-client\": 16, \"indexof\": 32, \"socket.io-parser\": 40 }], 3: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = on;\n\n        /**\n         * Helper for subscriptions.\n         *\n         * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n         * @param {String} event name\n         * @param {Function} callback\n         * @api public\n         */\n\n        function on(obj, ev, fn) {\n          obj.on(ev, fn);\n          return {\n            destroy: function destroy() {\n              obj.removeListener(ev, fn);\n            }\n          };\n        }\n      }, {}], 4: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('socket.io-parser');\n        var Emitter = _dereq_('component-emitter');\n        var toArray = _dereq_('to-array');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:socket');\n        var hasBin = _dereq_('has-binary');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = Socket;\n\n        /**\n         * Internal events (blacklisted).\n         * These events can't be emitted by the user.\n         *\n         * @api private\n         */\n\n        var events = {\n          connect: 1,\n          connect_error: 1,\n          connect_timeout: 1,\n          connecting: 1,\n          disconnect: 1,\n          error: 1,\n          reconnect: 1,\n          reconnect_attempt: 1,\n          reconnect_failed: 1,\n          reconnect_error: 1,\n          reconnecting: 1,\n          ping: 1,\n          pong: 1\n        };\n\n        /**\n         * Shortcut to `Emitter#emit`.\n         */\n\n        var emit = Emitter.prototype.emit;\n\n        /**\n         * `Socket` constructor.\n         *\n         * @api public\n         */\n\n        function Socket(io, nsp) {\n          this.io = io;\n          this.nsp = nsp;\n          this.json = this; // compat\n          this.ids = 0;\n          this.acks = {};\n          this.receiveBuffer = [];\n          this.sendBuffer = [];\n          this.connected = false;\n          this.disconnected = true;\n          if (this.io.autoConnect) this.open();\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Socket.prototype);\n\n        /**\n         * Subscribe to open, close and packet events\n         *\n         * @api private\n         */\n\n        Socket.prototype.subEvents = function () {\n          if (this.subs) return;\n\n          var io = this.io;\n          this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n        };\n\n        /**\n         * \"Opens\" the socket.\n         *\n         * @api public\n         */\n\n        Socket.prototype.open = Socket.prototype.connect = function () {\n          if (this.connected) return this;\n\n          this.subEvents();\n          this.io.open(); // ensure open\n          if ('open' == this.io.readyState) this.onopen();\n          this.emit('connecting');\n          return this;\n        };\n\n        /**\n         * Sends a `message` event.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.send = function () {\n          var args = toArray(arguments);\n          args.unshift('message');\n          this.emit.apply(this, args);\n          return this;\n        };\n\n        /**\n         * Override `emit`.\n         * If the event is in `events`, it's emitted normally.\n         *\n         * @param {String} event name\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.emit = function (ev) {\n          if (events.hasOwnProperty(ev)) {\n            emit.apply(this, arguments);\n            return this;\n          }\n\n          var args = toArray(arguments);\n          var parserType = parser.EVENT; // default\n          if (hasBin(args)) {\n            parserType = parser.BINARY_EVENT;\n          } // binary\n          var packet = { type: parserType, data: args };\n\n          packet.options = {};\n          packet.options.compress = !this.flags || false !== this.flags.compress;\n\n          // event ack callback\n          if ('function' == typeof args[args.length - 1]) {\n            debug('emitting packet with ack id %d', this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n          }\n\n          if (this.connected) {\n            this.packet(packet);\n          } else {\n            this.sendBuffer.push(packet);\n          }\n\n          delete this.flags;\n\n          return this;\n        };\n\n        /**\n         * Sends a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.packet = function (packet) {\n          packet.nsp = this.nsp;\n          this.io.packet(packet);\n        };\n\n        /**\n         * Called upon engine `open`.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onopen = function () {\n          debug('transport is open - connecting');\n\n          // write connect packet if necessary\n          if ('/' != this.nsp) {\n            this.packet({ type: parser.CONNECT });\n          }\n        };\n\n        /**\n         * Called upon engine `close`.\n         *\n         * @param {String} reason\n         * @api private\n         */\n\n        Socket.prototype.onclose = function (reason) {\n          debug('close (%s)', reason);\n          this.connected = false;\n          this.disconnected = true;\n          delete this.id;\n          this.emit('disconnect', reason);\n        };\n\n        /**\n         * Called with socket packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onpacket = function (packet) {\n          if (packet.nsp != this.nsp) return;\n\n          switch (packet.type) {\n            case parser.CONNECT:\n              this.onconnect();\n              break;\n\n            case parser.EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.BINARY_EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.ACK:\n              this.onack(packet);\n              break;\n\n            case parser.BINARY_ACK:\n              this.onack(packet);\n              break;\n\n            case parser.DISCONNECT:\n              this.ondisconnect();\n              break;\n\n            case parser.ERROR:\n              this.emit('error', packet.data);\n              break;\n          }\n        };\n\n        /**\n         * Called upon a server event.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onevent = function (packet) {\n          var args = packet.data || [];\n          debug('emitting event %j', args);\n\n          if (null != packet.id) {\n            debug('attaching ack callback to event');\n            args.push(this.ack(packet.id));\n          }\n\n          if (this.connected) {\n            emit.apply(this, args);\n          } else {\n            this.receiveBuffer.push(args);\n          }\n        };\n\n        /**\n         * Produces an ack callback to emit with an event.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ack = function (id) {\n          var self = this;\n          var sent = false;\n          return function () {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            var args = toArray(arguments);\n            debug('sending ack %j', args);\n\n            var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n            self.packet({\n              type: type,\n              id: id,\n              data: args\n            });\n          };\n        };\n\n        /**\n         * Called upon a server acknowlegement.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onack = function (packet) {\n          var ack = this.acks[packet.id];\n          if ('function' == typeof ack) {\n            debug('calling ack %s with %j', packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n          } else {\n            debug('bad ack %s', packet.id);\n          }\n        };\n\n        /**\n         * Called upon server connect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onconnect = function () {\n          this.connected = true;\n          this.disconnected = false;\n          this.emit('connect');\n          this.emitBuffered();\n        };\n\n        /**\n         * Emit buffered events (received and emitted).\n         *\n         * @api private\n         */\n\n        Socket.prototype.emitBuffered = function () {\n          var i;\n          for (i = 0; i < this.receiveBuffer.length; i++) {\n            emit.apply(this, this.receiveBuffer[i]);\n          }\n          this.receiveBuffer = [];\n\n          for (i = 0; i < this.sendBuffer.length; i++) {\n            this.packet(this.sendBuffer[i]);\n          }\n          this.sendBuffer = [];\n        };\n\n        /**\n         * Called upon server disconnect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ondisconnect = function () {\n          debug('server disconnect (%s)', this.nsp);\n          this.destroy();\n          this.onclose('io server disconnect');\n        };\n\n        /**\n         * Called upon forced client/server side disconnections,\n         * this method ensures the manager stops tracking us and\n         * that reconnections don't get triggered for this.\n         *\n         * @api private.\n         */\n\n        Socket.prototype.destroy = function () {\n          if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            for (var i = 0; i < this.subs.length; i++) {\n              this.subs[i].destroy();\n            }\n            this.subs = null;\n          }\n\n          this.io.destroy(this);\n        };\n\n        /**\n         * Disconnects the socket manually.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.close = Socket.prototype.disconnect = function () {\n          if (this.connected) {\n            debug('performing disconnect (%s)', this.nsp);\n            this.packet({ type: parser.DISCONNECT });\n          }\n\n          // remove socket from pool\n          this.destroy();\n\n          if (this.connected) {\n            // fire events\n            this.onclose('io client disconnect');\n          }\n          return this;\n        };\n\n        /**\n         * Sets the compress flag.\n         *\n         * @param {Boolean} if `true`, compresses the sending data\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.compress = function (compress) {\n          this.flags = this.flags || {};\n          this.flags.compress = compress;\n          return this;\n        };\n      }, { \"./on\": 3, \"component-bind\": 11, \"component-emitter\": 12, \"debug\": 14, \"has-binary\": 30, \"socket.io-parser\": 40, \"to-array\": 43 }], 5: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module dependencies.\n           */\n\n          var parseuri = _dereq_('parseuri');\n          var debug = _dereq_('debug')('socket.io-client:url');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = url;\n\n          /**\n           * URL parser.\n           *\n           * @param {String} url\n           * @param {Object} An object meant to mimic window.location.\n           *                 Defaults to window.location.\n           * @api public\n           */\n\n          function url(uri, loc) {\n            var obj = uri;\n\n            // default to window.location\n            var loc = loc || global.location;\n            if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n            // relative path support\n            if ('string' == typeof uri) {\n              if ('/' == uri.charAt(0)) {\n                if ('/' == uri.charAt(1)) {\n                  uri = loc.protocol + uri;\n                } else {\n                  uri = loc.host + uri;\n                }\n              }\n\n              if (!/^(https?|wss?):\\/\\//.test(uri)) {\n                debug('protocol-less url %s', uri);\n                if ('undefined' != typeof loc) {\n                  uri = loc.protocol + '//' + uri;\n                } else {\n                  uri = 'https://' + uri;\n                }\n              }\n\n              // parse\n              debug('parse %s', uri);\n              obj = parseuri(uri);\n            }\n\n            // make sure we treat `localhost:80` and `localhost` equally\n            if (!obj.port) {\n              if (/^(http|ws)$/.test(obj.protocol)) {\n                obj.port = '80';\n              } else if (/^(http|ws)s$/.test(obj.protocol)) {\n                obj.port = '443';\n              }\n            }\n\n            obj.path = obj.path || '/';\n\n            var ipv6 = obj.host.indexOf(':') !== -1;\n            var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n            // define unique id\n            obj.id = obj.protocol + '://' + host + ':' + obj.port;\n            // define href\n            obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);\n\n            return obj;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"debug\": 14, \"parseuri\": 38 }], 6: [function (_dereq_, module, exports) {\n        module.exports = after;\n\n        function after(count, callback, err_cb) {\n          var bail = false;\n          err_cb = err_cb || noop;\n          proxy.count = count;\n\n          return count === 0 ? callback() : proxy;\n\n          function proxy(err, result) {\n            if (proxy.count <= 0) {\n              throw new Error('after called too many times');\n            }\n            --proxy.count;\n\n            // after first error, rest are passed to err_cb\n            if (err) {\n              bail = true;\n              callback(err);\n              // future error callbacks will go to error handler\n              callback = err_cb;\n            } else if (proxy.count === 0 && !bail) {\n              callback(null, result);\n            }\n          }\n        }\n\n        function noop() {}\n      }, {}], 7: [function (_dereq_, module, exports) {\n        /**\n         * An abstraction for slicing an arraybuffer even when\n         * ArrayBuffer.prototype.slice is not supported\n         *\n         * @api public\n         */\n\n        module.exports = function (arraybuffer, start, end) {\n          var bytes = arraybuffer.byteLength;\n          start = start || 0;\n          end = end || bytes;\n\n          if (arraybuffer.slice) {\n            return arraybuffer.slice(start, end);\n          }\n\n          if (start < 0) {\n            start += bytes;\n          }\n          if (end < 0) {\n            end += bytes;\n          }\n          if (end > bytes) {\n            end = bytes;\n          }\n\n          if (start >= bytes || start >= end || bytes === 0) {\n            return new ArrayBuffer(0);\n          }\n\n          var abv = new Uint8Array(arraybuffer);\n          var result = new Uint8Array(end - start);\n          for (var i = start, ii = 0; i < end; i++, ii++) {\n            result[ii] = abv[i];\n          }\n          return result.buffer;\n        };\n      }, {}], 8: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Backoff`.\n         */\n\n        module.exports = Backoff;\n\n        /**\n         * Initialize backoff timer with `opts`.\n         *\n         * - `min` initial timeout in milliseconds [100]\n         * - `max` max timeout [10000]\n         * - `jitter` [0]\n         * - `factor` [2]\n         *\n         * @param {Object} opts\n         * @api public\n         */\n\n        function Backoff(opts) {\n          opts = opts || {};\n          this.ms = opts.min || 100;\n          this.max = opts.max || 10000;\n          this.factor = opts.factor || 2;\n          this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n          this.attempts = 0;\n        }\n\n        /**\n         * Return the backoff duration.\n         *\n         * @return {Number}\n         * @api public\n         */\n\n        Backoff.prototype.duration = function () {\n          var ms = this.ms * Math.pow(this.factor, this.attempts++);\n          if (this.jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this.jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this.max) | 0;\n        };\n\n        /**\n         * Reset the number of attempts.\n         *\n         * @api public\n         */\n\n        Backoff.prototype.reset = function () {\n          this.attempts = 0;\n        };\n\n        /**\n         * Set the minimum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMin = function (min) {\n          this.ms = min;\n        };\n\n        /**\n         * Set the maximum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMax = function (max) {\n          this.max = max;\n        };\n\n        /**\n         * Set the jitter\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setJitter = function (jitter) {\n          this.jitter = jitter;\n        };\n      }, {}], 9: [function (_dereq_, module, exports) {\n        /*\n         * base64-arraybuffer\n         * https://github.com/niklasvh/base64-arraybuffer\n         *\n         * Copyright (c) 2012 Niklas von Hertzen\n         * Licensed under the MIT license.\n         */\n        (function () {\n          \"use strict\";\n\n          var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n          // Use a lookup table to find the index.\n          var lookup = new Uint8Array(256);\n          for (var i = 0; i < chars.length; i++) {\n            lookup[chars.charCodeAt(i)] = i;\n          }\n\n          exports.encode = function (arraybuffer) {\n            var bytes = new Uint8Array(arraybuffer),\n                i,\n                len = bytes.length,\n                base64 = \"\";\n\n            for (i = 0; i < len; i += 3) {\n              base64 += chars[bytes[i] >> 2];\n              base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n              base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n              base64 += chars[bytes[i + 2] & 63];\n            }\n\n            if (len % 3 === 2) {\n              base64 = base64.substring(0, base64.length - 1) + \"=\";\n            } else if (len % 3 === 1) {\n              base64 = base64.substring(0, base64.length - 2) + \"==\";\n            }\n\n            return base64;\n          };\n\n          exports.decode = function (base64) {\n            var bufferLength = base64.length * 0.75,\n                len = base64.length,\n                i,\n                p = 0,\n                encoded1,\n                encoded2,\n                encoded3,\n                encoded4;\n\n            if (base64[base64.length - 1] === \"=\") {\n              bufferLength--;\n              if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n              }\n            }\n\n            var arraybuffer = new ArrayBuffer(bufferLength),\n                bytes = new Uint8Array(arraybuffer);\n\n            for (i = 0; i < len; i += 4) {\n              encoded1 = lookup[base64.charCodeAt(i)];\n              encoded2 = lookup[base64.charCodeAt(i + 1)];\n              encoded3 = lookup[base64.charCodeAt(i + 2)];\n              encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n              bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n              bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n              bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n            }\n\n            return arraybuffer;\n          };\n        })();\n      }, {}], 10: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Create a blob builder even when vendor prefixes exist\n           */\n\n          var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n\n          /**\n           * Check if Blob constructor is supported\n           */\n\n          var blobSupported = (function () {\n            try {\n              var a = new Blob(['hi']);\n              return a.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if Blob constructor supports ArrayBufferViews\n           * Fails in Safari 6, so we need to map to ArrayBuffers there.\n           */\n\n          var blobSupportsArrayBufferView = blobSupported && (function () {\n            try {\n              var b = new Blob([new Uint8Array([1, 2])]);\n              return b.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if BlobBuilder is supported\n           */\n\n          var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n\n          /**\n           * Helper function that maps ArrayBufferViews to ArrayBuffers\n           * Used by BlobBuilder constructor and old browsers that didn't\n           * support it in the Blob constructor.\n           */\n\n          function mapArrayBufferViews(ary) {\n            for (var i = 0; i < ary.length; i++) {\n              var chunk = ary[i];\n              if (chunk.buffer instanceof ArrayBuffer) {\n                var buf = chunk.buffer;\n\n                // if this is a subarray, make a copy so we only\n                // include the subarray region from the underlying buffer\n                if (chunk.byteLength !== buf.byteLength) {\n                  var copy = new Uint8Array(chunk.byteLength);\n                  copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n                  buf = copy.buffer;\n                }\n\n                ary[i] = buf;\n              }\n            }\n          }\n\n          function BlobBuilderConstructor(ary, options) {\n            options = options || {};\n\n            var bb = new BlobBuilder();\n            mapArrayBufferViews(ary);\n\n            for (var i = 0; i < ary.length; i++) {\n              bb.append(ary[i]);\n            }\n\n            return options.type ? bb.getBlob(options.type) : bb.getBlob();\n          };\n\n          function BlobConstructor(ary, options) {\n            mapArrayBufferViews(ary);\n            return new Blob(ary, options || {});\n          };\n\n          module.exports = (function () {\n            if (blobSupported) {\n              return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n            } else if (blobBuilderSupported) {\n              return BlobBuilderConstructor;\n            } else {\n              return undefined;\n            }\n          })();\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 11: [function (_dereq_, module, exports) {\n        /**\n         * Slice reference.\n         */\n\n        var slice = [].slice;\n\n        /**\n         * Bind `obj` to `fn`.\n         *\n         * @param {Object} obj\n         * @param {Function|String} fn or string\n         * @return {Function}\n         * @api public\n         */\n\n        module.exports = function (obj, fn) {\n          if ('string' == typeof fn) fn = obj[fn];\n          if ('function' != typeof fn) throw new Error('bind() requires a function');\n          var args = slice.call(arguments, 2);\n          return function () {\n            return fn.apply(obj, args.concat(slice.call(arguments)));\n          };\n        };\n      }, {}], 12: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          function on() {\n            this.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks['$' + event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks['$' + event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks['$' + event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks['$' + event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 13: [function (_dereq_, module, exports) {\n\n        module.exports = function (a, b) {\n          var fn = function fn() {};\n          fn.prototype = b.prototype;\n          a.prototype = new fn();\n          a.prototype.constructor = a;\n        };\n      }, {}], 14: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the web browser implementation of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = _dereq_('./debug');\n        exports.log = log;\n        exports.formatArgs = formatArgs;\n        exports.save = save;\n        exports.load = load;\n        exports.useColors = useColors;\n        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n        /**\n         * Colors.\n         */\n\n        exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n        /**\n         * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n         * and the Firebug extension (any Firefox version) are known\n         * to support \"%c\" CSS customizations.\n         *\n         * TODO: add a `localStorage` variable to explicitly enable/disable colors\n         */\n\n        function useColors() {\n          // is webkit? http://stackoverflow.com/a/16459606/376773\n          return 'WebkitAppearance' in document.documentElement.style ||\n          // is firebug? http://stackoverflow.com/a/398120/376773\n          window.console && (console.firebug || console.exception && console.table) ||\n          // is firefox >= v31?\n          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n          navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n        }\n\n        /**\n         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n         */\n\n        exports.formatters.j = function (v) {\n          return JSON.stringify(v);\n        };\n\n        /**\n         * Colorize log arguments if enabled.\n         *\n         * @api public\n         */\n\n        function formatArgs() {\n          var args = arguments;\n          var useColors = this.useColors;\n\n          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n\n          if (!useColors) return args;\n\n          var c = 'color: ' + this.color;\n          args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n          // the final \"%c\" is somewhat tricky, because there could be other\n          // arguments passed either before or after the %c, so we need to\n          // figure out the correct index to insert the CSS into\n          var index = 0;\n          var lastC = 0;\n          args[0].replace(/%[a-z%]/g, function (match) {\n            if ('%%' === match) return;\n            index++;\n            if ('%c' === match) {\n              // we only are interested in the *last* %c\n              // (the user may have provided their own)\n              lastC = index;\n            }\n          });\n\n          args.splice(lastC, 0, c);\n          return args;\n        }\n\n        /**\n         * Invokes `console.log()` when available.\n         * No-op when `console.log` is not a \"function\".\n         *\n         * @api public\n         */\n\n        function log() {\n          // this hackery is required for IE8/9, where\n          // the `console.log` function doesn't have 'apply'\n          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n        }\n\n        /**\n         * Save `namespaces`.\n         *\n         * @param {String} namespaces\n         * @api private\n         */\n\n        function save(namespaces) {\n          try {\n            if (null == namespaces) {\n              exports.storage.removeItem('debug');\n            } else {\n              exports.storage.debug = namespaces;\n            }\n          } catch (e) {}\n        }\n\n        /**\n         * Load `namespaces`.\n         *\n         * @return {String} returns the previously persisted debug modes\n         * @api private\n         */\n\n        function load() {\n          var r;\n          try {\n            r = exports.storage.debug;\n          } catch (e) {}\n          return r;\n        }\n\n        /**\n         * Enable namespaces listed in `localStorage.debug` initially.\n         */\n\n        exports.enable(load());\n\n        /**\n         * Localstorage attempts to return the localstorage.\n         *\n         * This is necessary because safari throws\n         * when a user disables cookies/localstorage\n         * and you attempt to access it.\n         *\n         * @return {LocalStorage}\n         * @api private\n         */\n\n        function localstorage() {\n          try {\n            return window.localStorage;\n          } catch (e) {}\n        }\n      }, { \"./debug\": 15 }], 15: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the common logic for both the Node.js and web browser\n         * implementations of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = debug;\n        exports.coerce = coerce;\n        exports.disable = disable;\n        exports.enable = enable;\n        exports.enabled = enabled;\n        exports.humanize = _dereq_('ms');\n\n        /**\n         * The currently active debug mode names, and names to skip.\n         */\n\n        exports.names = [];\n        exports.skips = [];\n\n        /**\n         * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n         *\n         * Valid key names are a single, lowercased letter, i.e. \"n\".\n         */\n\n        exports.formatters = {};\n\n        /**\n         * Previously assigned color.\n         */\n\n        var prevColor = 0;\n\n        /**\n         * Previous log timestamp.\n         */\n\n        var prevTime;\n\n        /**\n         * Select a color.\n         *\n         * @return {Number}\n         * @api private\n         */\n\n        function selectColor() {\n          return exports.colors[prevColor++ % exports.colors.length];\n        }\n\n        /**\n         * Create a debugger with the given `namespace`.\n         *\n         * @param {String} namespace\n         * @return {Function}\n         * @api public\n         */\n\n        function debug(namespace) {\n\n          // define the `disabled` version\n          function disabled() {}\n          disabled.enabled = false;\n\n          // define the `enabled` version\n          function enabled() {\n\n            var self = enabled;\n\n            // set `diff` timestamp\n            var curr = +new Date();\n            var ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n\n            // add the `color` if not set\n            if (null == self.useColors) self.useColors = exports.useColors();\n            if (null == self.color && self.useColors) self.color = selectColor();\n\n            var args = Array.prototype.slice.call(arguments);\n\n            args[0] = exports.coerce(args[0]);\n\n            if ('string' !== typeof args[0]) {\n              // anything else let's inspect with %o\n              args = ['%o'].concat(args);\n            }\n\n            // apply any `formatters` transformations\n            var index = 0;\n            args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n              // if we encounter an escaped % then don't increase the array index\n              if (match === '%%') return match;\n              index++;\n              var formatter = exports.formatters[format];\n              if ('function' === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n              }\n              return match;\n            });\n\n            if ('function' === typeof exports.formatArgs) {\n              args = exports.formatArgs.apply(self, args);\n            }\n            var logFn = enabled.log || exports.log || console.log.bind(console);\n            logFn.apply(self, args);\n          }\n          enabled.enabled = true;\n\n          var fn = exports.enabled(namespace) ? enabled : disabled;\n\n          fn.namespace = namespace;\n\n          return fn;\n        }\n\n        /**\n         * Enables a debug mode by namespaces. This can include modes\n         * separated by a colon and wildcards.\n         *\n         * @param {String} namespaces\n         * @api public\n         */\n\n        function enable(namespaces) {\n          exports.save(namespaces);\n\n          var split = (namespaces || '').split(/[\\s,]+/);\n          var len = split.length;\n\n          for (var i = 0; i < len; i++) {\n            if (!split[i]) continue; // ignore empty strings\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n              exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            } else {\n              exports.names.push(new RegExp('^' + namespaces + '$'));\n            }\n          }\n        }\n\n        /**\n         * Disable debug output.\n         *\n         * @api public\n         */\n\n        function disable() {\n          exports.enable('');\n        }\n\n        /**\n         * Returns true if the given mode name is enabled, false otherwise.\n         *\n         * @param {String} name\n         * @return {Boolean}\n         * @api public\n         */\n\n        function enabled(name) {\n          var i, len;\n          for (i = 0, len = exports.skips.length; i < len; i++) {\n            if (exports.skips[i].test(name)) {\n              return false;\n            }\n          }\n          for (i = 0, len = exports.names.length; i < len; i++) {\n            if (exports.names[i].test(name)) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        /**\n         * Coerce `val`.\n         *\n         * @param {Mixed} val\n         * @return {Mixed}\n         * @api private\n         */\n\n        function coerce(val) {\n          if (val instanceof Error) return val.stack || val.message;\n          return val;\n        }\n      }, { \"ms\": 35 }], 16: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./lib/');\n      }, { \"./lib/\": 17 }], 17: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./socket');\n\n        /**\n         * Exports parser\n         *\n         * @api public\n         *\n         */\n        module.exports.parser = _dereq_('engine.io-parser');\n      }, { \"./socket\": 18, \"engine.io-parser\": 27 }], 18: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var transports = _dereq_('./transports');\n          var Emitter = _dereq_('component-emitter');\n          var debug = _dereq_('debug')('engine.io-client:socket');\n          var index = _dereq_('indexof');\n          var parser = _dereq_('engine.io-parser');\n          var parseuri = _dereq_('parseuri');\n          var parsejson = _dereq_('parsejson');\n          var parseqs = _dereq_('parseqs');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = Socket;\n\n          /**\n           * Noop function.\n           *\n           * @api private\n           */\n\n          function noop() {}\n\n          /**\n           * Socket constructor.\n           *\n           * @param {String|Object} uri or options\n           * @param {Object} options\n           * @api public\n           */\n\n          function Socket(uri, opts) {\n            if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n            opts = opts || {};\n\n            if (uri && 'object' == typeof uri) {\n              opts = uri;\n              uri = null;\n            }\n\n            if (uri) {\n              uri = parseuri(uri);\n              opts.hostname = uri.host;\n              opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n              opts.port = uri.port;\n              if (uri.query) opts.query = uri.query;\n            } else if (opts.host) {\n              opts.hostname = parseuri(opts.host).host;\n            }\n\n            this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;\n\n            if (opts.hostname && !opts.port) {\n              // if no port is specified manually, use the protocol default\n              opts.port = this.secure ? '443' : '80';\n            }\n\n            this.agent = opts.agent || false;\n            this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n            this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n            this.query = opts.query || {};\n            if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n            this.upgrade = false !== opts.upgrade;\n            this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n            this.forceJSONP = !!opts.forceJSONP;\n            this.jsonp = false !== opts.jsonp;\n            this.forceBase64 = !!opts.forceBase64;\n            this.enablesXDR = !!opts.enablesXDR;\n            this.timestampParam = opts.timestampParam || 't';\n            this.timestampRequests = opts.timestampRequests;\n            this.transports = opts.transports || ['polling', 'websocket'];\n            this.readyState = '';\n            this.writeBuffer = [];\n            this.policyPort = opts.policyPort || 843;\n            this.rememberUpgrade = opts.rememberUpgrade || false;\n            this.binaryType = null;\n            this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n            this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n\n            if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n            if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n              this.perMessageDeflate.threshold = 1024;\n            }\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx || null;\n            this.key = opts.key || null;\n            this.passphrase = opts.passphrase || null;\n            this.cert = opts.cert || null;\n            this.ca = opts.ca || null;\n            this.ciphers = opts.ciphers || null;\n            this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal) {\n              if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n                this.extraHeaders = opts.extraHeaders;\n              }\n            }\n\n            this.open();\n          }\n\n          Socket.priorWebsocketSuccess = false;\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Socket.prototype);\n\n          /**\n           * Protocol version.\n           *\n           * @api public\n           */\n\n          Socket.protocol = parser.protocol; // this is an int\n\n          /**\n           * Expose deps for legacy compatibility\n           * and standalone browser access.\n           */\n\n          Socket.Socket = Socket;\n          Socket.Transport = _dereq_('./transport');\n          Socket.transports = _dereq_('./transports');\n          Socket.parser = _dereq_('engine.io-parser');\n\n          /**\n           * Creates transport of the given type.\n           *\n           * @param {String} transport name\n           * @return {Transport}\n           * @api private\n           */\n\n          Socket.prototype.createTransport = function (name) {\n            debug('creating transport \"%s\"', name);\n            var query = clone(this.query);\n\n            // append engine.io protocol identifier\n            query.EIO = parser.protocol;\n\n            // transport name\n            query.transport = name;\n\n            // session id if we already have one\n            if (this.id) query.sid = this.id;\n\n            var transport = new transports[name]({\n              agent: this.agent,\n              hostname: this.hostname,\n              port: this.port,\n              secure: this.secure,\n              path: this.path,\n              query: query,\n              forceJSONP: this.forceJSONP,\n              jsonp: this.jsonp,\n              forceBase64: this.forceBase64,\n              enablesXDR: this.enablesXDR,\n              timestampRequests: this.timestampRequests,\n              timestampParam: this.timestampParam,\n              policyPort: this.policyPort,\n              socket: this,\n              pfx: this.pfx,\n              key: this.key,\n              passphrase: this.passphrase,\n              cert: this.cert,\n              ca: this.ca,\n              ciphers: this.ciphers,\n              rejectUnauthorized: this.rejectUnauthorized,\n              perMessageDeflate: this.perMessageDeflate,\n              extraHeaders: this.extraHeaders\n            });\n\n            return transport;\n          };\n\n          function clone(obj) {\n            var o = {};\n            for (var i in obj) {\n              if (obj.hasOwnProperty(i)) {\n                o[i] = obj[i];\n              }\n            }\n            return o;\n          }\n\n          /**\n           * Initializes transport to use and starts probe.\n           *\n           * @api private\n           */\n          Socket.prototype.open = function () {\n            var transport;\n            if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n              transport = 'websocket';\n            } else if (0 === this.transports.length) {\n              // Emit error on next tick so it can be listened to\n              var self = this;\n              setTimeout(function () {\n                self.emit('error', 'No transports available');\n              }, 0);\n              return;\n            } else {\n              transport = this.transports[0];\n            }\n            this.readyState = 'opening';\n\n            // Retry with the next transport if the transport is disabled (jsonp: false)\n            try {\n              transport = this.createTransport(transport);\n            } catch (e) {\n              this.transports.shift();\n              this.open();\n              return;\n            }\n\n            transport.open();\n            this.setTransport(transport);\n          };\n\n          /**\n           * Sets the current transport. Disables the existing one (if any).\n           *\n           * @api private\n           */\n\n          Socket.prototype.setTransport = function (transport) {\n            debug('setting transport %s', transport.name);\n            var self = this;\n\n            if (this.transport) {\n              debug('clearing existing transport %s', this.transport.name);\n              this.transport.removeAllListeners();\n            }\n\n            // set up transport\n            this.transport = transport;\n\n            // set up transport listeners\n            transport.on('drain', function () {\n              self.onDrain();\n            }).on('packet', function (packet) {\n              self.onPacket(packet);\n            }).on('error', function (e) {\n              self.onError(e);\n            }).on('close', function () {\n              self.onClose('transport close');\n            });\n          };\n\n          /**\n           * Probes a transport.\n           *\n           * @param {String} transport name\n           * @api private\n           */\n\n          Socket.prototype.probe = function (name) {\n            debug('probing transport \"%s\"', name);\n            var transport = this.createTransport(name, { probe: 1 }),\n                failed = false,\n                self = this;\n\n            Socket.priorWebsocketSuccess = false;\n\n            function onTransportOpen() {\n              if (self.onlyBinaryUpgrades) {\n                var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n                failed = failed || upgradeLosesBinary;\n              }\n              if (failed) return;\n\n              debug('probe transport \"%s\" opened', name);\n              transport.send([{ type: 'ping', data: 'probe' }]);\n              transport.once('packet', function (msg) {\n                if (failed) return;\n                if ('pong' == msg.type && 'probe' == msg.data) {\n                  debug('probe transport \"%s\" pong', name);\n                  self.upgrading = true;\n                  self.emit('upgrading', transport);\n                  if (!transport) return;\n                  Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n                  debug('pausing current transport \"%s\"', self.transport.name);\n                  self.transport.pause(function () {\n                    if (failed) return;\n                    if ('closed' == self.readyState) return;\n                    debug('changing transport and sending upgrade packet');\n\n                    cleanup();\n\n                    self.setTransport(transport);\n                    transport.send([{ type: 'upgrade' }]);\n                    self.emit('upgrade', transport);\n                    transport = null;\n                    self.upgrading = false;\n                    self.flush();\n                  });\n                } else {\n                  debug('probe transport \"%s\" failed', name);\n                  var err = new Error('probe error');\n                  err.transport = transport.name;\n                  self.emit('upgradeError', err);\n                }\n              });\n            }\n\n            function freezeTransport() {\n              if (failed) return;\n\n              // Any callback called by transport should be ignored since now\n              failed = true;\n\n              cleanup();\n\n              transport.close();\n              transport = null;\n            }\n\n            //Handle any error that happens while probing\n            function onerror(err) {\n              var error = new Error('probe error: ' + err);\n              error.transport = transport.name;\n\n              freezeTransport();\n\n              debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n              self.emit('upgradeError', error);\n            }\n\n            function onTransportClose() {\n              onerror(\"transport closed\");\n            }\n\n            //When the socket is closed while we're probing\n            function onclose() {\n              onerror(\"socket closed\");\n            }\n\n            //When the socket is upgraded while we're probing\n            function onupgrade(to) {\n              if (transport && to.name != transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n              }\n            }\n\n            //Remove all listeners on the transport and on self\n            function cleanup() {\n              transport.removeListener('open', onTransportOpen);\n              transport.removeListener('error', onerror);\n              transport.removeListener('close', onTransportClose);\n              self.removeListener('close', onclose);\n              self.removeListener('upgrading', onupgrade);\n            }\n\n            transport.once('open', onTransportOpen);\n            transport.once('error', onerror);\n            transport.once('close', onTransportClose);\n\n            this.once('close', onclose);\n            this.once('upgrading', onupgrade);\n\n            transport.open();\n          };\n\n          /**\n           * Called when connection is deemed open.\n           *\n           * @api public\n           */\n\n          Socket.prototype.onOpen = function () {\n            debug('socket open');\n            this.readyState = 'open';\n            Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n            this.emit('open');\n            this.flush();\n\n            // we check for `readyState` in case an `open`\n            // listener already closed the socket\n            if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n              debug('starting upgrade probes');\n              for (var i = 0, l = this.upgrades.length; i < l; i++) {\n                this.probe(this.upgrades[i]);\n              }\n            }\n          };\n\n          /**\n           * Handles a packet.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onPacket = function (packet) {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n              this.emit('packet', packet);\n\n              // Socket is live - any packet counts\n              this.emit('heartbeat');\n\n              switch (packet.type) {\n                case 'open':\n                  this.onHandshake(parsejson(packet.data));\n                  break;\n\n                case 'pong':\n                  this.setPing();\n                  this.emit('pong');\n                  break;\n\n                case 'error':\n                  var err = new Error('server error');\n                  err.code = packet.data;\n                  this.onError(err);\n                  break;\n\n                case 'message':\n                  this.emit('data', packet.data);\n                  this.emit('message', packet.data);\n                  break;\n              }\n            } else {\n              debug('packet received with socket readyState \"%s\"', this.readyState);\n            }\n          };\n\n          /**\n           * Called upon handshake completion.\n           *\n           * @param {Object} handshake obj\n           * @api private\n           */\n\n          Socket.prototype.onHandshake = function (data) {\n            this.emit('handshake', data);\n            this.id = data.sid;\n            this.transport.query.sid = data.sid;\n            this.upgrades = this.filterUpgrades(data.upgrades);\n            this.pingInterval = data.pingInterval;\n            this.pingTimeout = data.pingTimeout;\n            this.onOpen();\n            // In case open handler closes socket\n            if ('closed' == this.readyState) return;\n            this.setPing();\n\n            // Prolong liveness of socket on heartbeat\n            this.removeListener('heartbeat', this.onHeartbeat);\n            this.on('heartbeat', this.onHeartbeat);\n          };\n\n          /**\n           * Resets ping timeout.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onHeartbeat = function (timeout) {\n            clearTimeout(this.pingTimeoutTimer);\n            var self = this;\n            self.pingTimeoutTimer = setTimeout(function () {\n              if ('closed' == self.readyState) return;\n              self.onClose('ping timeout');\n            }, timeout || self.pingInterval + self.pingTimeout);\n          };\n\n          /**\n           * Pings server every `this.pingInterval` and expects response\n           * within `this.pingTimeout` or closes connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.setPing = function () {\n            var self = this;\n            clearTimeout(self.pingIntervalTimer);\n            self.pingIntervalTimer = setTimeout(function () {\n              debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n              self.ping();\n              self.onHeartbeat(self.pingTimeout);\n            }, self.pingInterval);\n          };\n\n          /**\n          * Sends a ping packet.\n          *\n          * @api private\n          */\n\n          Socket.prototype.ping = function () {\n            var self = this;\n            this.sendPacket('ping', function () {\n              self.emit('ping');\n            });\n          };\n\n          /**\n           * Called on `drain` event\n           *\n           * @api private\n           */\n\n          Socket.prototype.onDrain = function () {\n            this.writeBuffer.splice(0, this.prevBufferLen);\n\n            // setting prevBufferLen = 0 is very important\n            // for example, when upgrading, upgrade packet is sent over,\n            // and a nonzero prevBufferLen could cause problems on `drain`\n            this.prevBufferLen = 0;\n\n            if (0 === this.writeBuffer.length) {\n              this.emit('drain');\n            } else {\n              this.flush();\n            }\n          };\n\n          /**\n           * Flush write buffers.\n           *\n           * @api private\n           */\n\n          Socket.prototype.flush = function () {\n            if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n              debug('flushing %d packets in socket', this.writeBuffer.length);\n              this.transport.send(this.writeBuffer);\n              // keep track of current length of writeBuffer\n              // splice writeBuffer and callbackBuffer on `drain`\n              this.prevBufferLen = this.writeBuffer.length;\n              this.emit('flush');\n            }\n          };\n\n          /**\n           * Sends a message.\n           *\n           * @param {String} message.\n           * @param {Function} callback function.\n           * @param {Object} options.\n           * @return {Socket} for chaining.\n           * @api public\n           */\n\n          Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n            this.sendPacket('message', msg, options, fn);\n            return this;\n          };\n\n          /**\n           * Sends a packet.\n           *\n           * @param {String} packet type.\n           * @param {String} data.\n           * @param {Object} options.\n           * @param {Function} callback function.\n           * @api private\n           */\n\n          Socket.prototype.sendPacket = function (type, data, options, fn) {\n            if ('function' == typeof data) {\n              fn = data;\n              data = undefined;\n            }\n\n            if ('function' == typeof options) {\n              fn = options;\n              options = null;\n            }\n\n            if ('closing' == this.readyState || 'closed' == this.readyState) {\n              return;\n            }\n\n            options = options || {};\n            options.compress = false !== options.compress;\n\n            var packet = {\n              type: type,\n              data: data,\n              options: options\n            };\n            this.emit('packetCreate', packet);\n            this.writeBuffer.push(packet);\n            if (fn) this.once('flush', fn);\n            this.flush();\n          };\n\n          /**\n           * Closes the connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.close = function () {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              this.readyState = 'closing';\n\n              var self = this;\n\n              if (this.writeBuffer.length) {\n                this.once('drain', function () {\n                  if (this.upgrading) {\n                    waitForUpgrade();\n                  } else {\n                    close();\n                  }\n                });\n              } else if (this.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            }\n\n            function close() {\n              self.onClose('forced close');\n              debug('socket closing - telling transport to close');\n              self.transport.close();\n            }\n\n            function cleanupAndClose() {\n              self.removeListener('upgrade', cleanupAndClose);\n              self.removeListener('upgradeError', cleanupAndClose);\n              close();\n            }\n\n            function waitForUpgrade() {\n              // wait for upgrade to finish since we can't send packets while pausing a transport\n              self.once('upgrade', cleanupAndClose);\n              self.once('upgradeError', cleanupAndClose);\n            }\n\n            return this;\n          };\n\n          /**\n           * Called upon transport error\n           *\n           * @api private\n           */\n\n          Socket.prototype.onError = function (err) {\n            debug('socket error %j', err);\n            Socket.priorWebsocketSuccess = false;\n            this.emit('error', err);\n            this.onClose('transport error', err);\n          };\n\n          /**\n           * Called upon transport close.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onClose = function (reason, desc) {\n            if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n              debug('socket close with reason: \"%s\"', reason);\n              var self = this;\n\n              // clear timers\n              clearTimeout(this.pingIntervalTimer);\n              clearTimeout(this.pingTimeoutTimer);\n\n              // stop event from firing again for transport\n              this.transport.removeAllListeners('close');\n\n              // ensure transport won't stay open\n              this.transport.close();\n\n              // ignore further transport communication\n              this.transport.removeAllListeners();\n\n              // set ready state\n              this.readyState = 'closed';\n\n              // clear session id\n              this.id = null;\n\n              // emit close event\n              this.emit('close', reason, desc);\n\n              // clean buffers after, so users can still\n              // grab the buffers on `close` event\n              self.writeBuffer = [];\n              self.prevBufferLen = 0;\n            }\n          };\n\n          /**\n           * Filters upgrades, returning only those matching client transports.\n           *\n           * @param {Array} server upgrades\n           * @api private\n           *\n           */\n\n          Socket.prototype.filterUpgrades = function (upgrades) {\n            var filteredUpgrades = [];\n            for (var i = 0, j = upgrades.length; i < j; i++) {\n              if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n            }\n            return filteredUpgrades;\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./transport\": 19, \"./transports\": 20, \"component-emitter\": 26, \"debug\": 14, \"engine.io-parser\": 27, \"indexof\": 32, \"parsejson\": 36, \"parseqs\": 37, \"parseuri\": 38 }], 19: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('engine.io-parser');\n        var Emitter = _dereq_('component-emitter');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Transport;\n\n        /**\n         * Transport abstract constructor.\n         *\n         * @param {Object} options.\n         * @api private\n         */\n\n        function Transport(opts) {\n          this.path = opts.path;\n          this.hostname = opts.hostname;\n          this.port = opts.port;\n          this.secure = opts.secure;\n          this.query = opts.query;\n          this.timestampParam = opts.timestampParam;\n          this.timestampRequests = opts.timestampRequests;\n          this.readyState = '';\n          this.agent = opts.agent || false;\n          this.socket = opts.socket;\n          this.enablesXDR = opts.enablesXDR;\n\n          // SSL options for Node.js client\n          this.pfx = opts.pfx;\n          this.key = opts.key;\n          this.passphrase = opts.passphrase;\n          this.cert = opts.cert;\n          this.ca = opts.ca;\n          this.ciphers = opts.ciphers;\n          this.rejectUnauthorized = opts.rejectUnauthorized;\n\n          // other options for Node.js client\n          this.extraHeaders = opts.extraHeaders;\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Transport.prototype);\n\n        /**\n         * Emits an error.\n         *\n         * @param {String} str\n         * @return {Transport} for chaining\n         * @api public\n         */\n\n        Transport.prototype.onError = function (msg, desc) {\n          var err = new Error(msg);\n          err.type = 'TransportError';\n          err.description = desc;\n          this.emit('error', err);\n          return this;\n        };\n\n        /**\n         * Opens the transport.\n         *\n         * @api public\n         */\n\n        Transport.prototype.open = function () {\n          if ('closed' == this.readyState || '' == this.readyState) {\n            this.readyState = 'opening';\n            this.doOpen();\n          }\n\n          return this;\n        };\n\n        /**\n         * Closes the transport.\n         *\n         * @api private\n         */\n\n        Transport.prototype.close = function () {\n          if ('opening' == this.readyState || 'open' == this.readyState) {\n            this.doClose();\n            this.onClose();\n          }\n\n          return this;\n        };\n\n        /**\n         * Sends multiple packets.\n         *\n         * @param {Array} packets\n         * @api private\n         */\n\n        Transport.prototype.send = function (packets) {\n          if ('open' == this.readyState) {\n            this.write(packets);\n          } else {\n            throw new Error('Transport not open');\n          }\n        };\n\n        /**\n         * Called upon open\n         *\n         * @api private\n         */\n\n        Transport.prototype.onOpen = function () {\n          this.readyState = 'open';\n          this.writable = true;\n          this.emit('open');\n        };\n\n        /**\n         * Called with data.\n         *\n         * @param {String} data\n         * @api private\n         */\n\n        Transport.prototype.onData = function (data) {\n          var packet = parser.decodePacket(data, this.socket.binaryType);\n          this.onPacket(packet);\n        };\n\n        /**\n         * Called with a decoded packet.\n         */\n\n        Transport.prototype.onPacket = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon close.\n         *\n         * @api private\n         */\n\n        Transport.prototype.onClose = function () {\n          this.readyState = 'closed';\n          this.emit('close');\n        };\n      }, { \"component-emitter\": 26, \"engine.io-parser\": 27 }], 20: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var XHR = _dereq_('./polling-xhr');\n          var JSONP = _dereq_('./polling-jsonp');\n          var websocket = _dereq_('./websocket');\n\n          /**\n           * Export transports.\n           */\n\n          exports.polling = polling;\n          exports.websocket = websocket;\n\n          /**\n           * Polling transport polymorphic constructor.\n           * Decides on xhr vs jsonp based on feature detection.\n           *\n           * @api private\n           */\n\n          function polling(opts) {\n            var xhr;\n            var xd = false;\n            var xs = false;\n            var jsonp = false !== opts.jsonp;\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              xd = opts.hostname != location.hostname || port != opts.port;\n              xs = opts.secure != isSSL;\n            }\n\n            opts.xdomain = xd;\n            opts.xscheme = xs;\n            xhr = new XMLHttpRequest(opts);\n\n            if ('open' in xhr && !opts.forceJSONP) {\n              return new XHR(opts);\n            } else {\n              if (!jsonp) throw new Error('JSONP disabled');\n              return new JSONP(opts);\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling-jsonp\": 21, \"./polling-xhr\": 22, \"./websocket\": 24, \"xmlhttprequest-ssl\": 25 }], 21: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module requirements.\n           */\n\n          var Polling = _dereq_('./polling');\n          var inherit = _dereq_('component-inherit');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = JSONPPolling;\n\n          /**\n           * Cached regular expressions.\n           */\n\n          var rNewline = /\\n/g;\n          var rEscapedNewline = /\\\\n/g;\n\n          /**\n           * Global JSONP callbacks.\n           */\n\n          var callbacks;\n\n          /**\n           * Callbacks count.\n           */\n\n          var index = 0;\n\n          /**\n           * Noop.\n           */\n\n          function empty() {}\n\n          /**\n           * JSONP Polling constructor.\n           *\n           * @param {Object} opts.\n           * @api public\n           */\n\n          function JSONPPolling(opts) {\n            Polling.call(this, opts);\n\n            this.query = this.query || {};\n\n            // define global callbacks array if not present\n            // we do this here (lazily) to avoid unneeded global pollution\n            if (!callbacks) {\n              // we need to consider multiple engines in the same page\n              if (!global.___eio) global.___eio = [];\n              callbacks = global.___eio;\n            }\n\n            // callback identifier\n            this.index = callbacks.length;\n\n            // add callback to jsonp global\n            var self = this;\n            callbacks.push(function (msg) {\n              self.onData(msg);\n            });\n\n            // append to query string\n            this.query.j = this.index;\n\n            // prevent spurious errors from being emitted when the window is unloaded\n            if (global.document && global.addEventListener) {\n              global.addEventListener('beforeunload', function () {\n                if (self.script) self.script.onerror = empty;\n              }, false);\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(JSONPPolling, Polling);\n\n          /*\n           * JSONP only supports binary as base64 encoded strings\n           */\n\n          JSONPPolling.prototype.supportsBinary = false;\n\n          /**\n           * Closes the socket.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doClose = function () {\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            if (this.form) {\n              this.form.parentNode.removeChild(this.form);\n              this.form = null;\n              this.iframe = null;\n            }\n\n            Polling.prototype.doClose.call(this);\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doPoll = function () {\n            var self = this;\n            var script = document.createElement('script');\n\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            script.async = true;\n            script.src = this.uri();\n            script.onerror = function (e) {\n              self.onError('jsonp poll error', e);\n            };\n\n            var insertAt = document.getElementsByTagName('script')[0];\n            if (insertAt) {\n              insertAt.parentNode.insertBefore(script, insertAt);\n            } else {\n              (document.head || document.body).appendChild(script);\n            }\n            this.script = script;\n\n            var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\n            if (isUAgecko) {\n              setTimeout(function () {\n                var iframe = document.createElement('iframe');\n                document.body.appendChild(iframe);\n                document.body.removeChild(iframe);\n              }, 100);\n            }\n          };\n\n          /**\n           * Writes with a hidden iframe.\n           *\n           * @param {String} data to send\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          JSONPPolling.prototype.doWrite = function (data, fn) {\n            var self = this;\n\n            if (!this.form) {\n              var form = document.createElement('form');\n              var area = document.createElement('textarea');\n              var id = this.iframeId = 'eio_iframe_' + this.index;\n              var iframe;\n\n              form.className = 'socketio';\n              form.style.position = 'absolute';\n              form.style.top = '-1000px';\n              form.style.left = '-1000px';\n              form.target = id;\n              form.method = 'POST';\n              form.setAttribute('accept-charset', 'utf-8');\n              area.name = 'd';\n              form.appendChild(area);\n              document.body.appendChild(form);\n\n              this.form = form;\n              this.area = area;\n            }\n\n            this.form.action = this.uri();\n\n            function complete() {\n              initIframe();\n              fn();\n            }\n\n            function initIframe() {\n              if (self.iframe) {\n                try {\n                  self.form.removeChild(self.iframe);\n                } catch (e) {\n                  self.onError('jsonp polling iframe removal error', e);\n                }\n              }\n\n              try {\n                // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n                var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n                iframe = document.createElement(html);\n              } catch (e) {\n                iframe = document.createElement('iframe');\n                iframe.name = self.iframeId;\n                iframe.src = 'javascript:0';\n              }\n\n              iframe.id = self.iframeId;\n\n              self.form.appendChild(iframe);\n              self.iframe = iframe;\n            }\n\n            initIframe();\n\n            // escape \\n to prevent it from being converted into \\r\\n by some UAs\n            // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n            data = data.replace(rEscapedNewline, '\\\\\\n');\n            this.area.value = data.replace(rNewline, '\\\\n');\n\n            try {\n              this.form.submit();\n            } catch (e) {}\n\n            if (this.iframe.attachEvent) {\n              this.iframe.onreadystatechange = function () {\n                if (self.iframe.readyState == 'complete') {\n                  complete();\n                }\n              };\n            } else {\n              this.iframe.onload = complete;\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 23, \"component-inherit\": 13 }], 22: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module requirements.\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var Polling = _dereq_('./polling');\n          var Emitter = _dereq_('component-emitter');\n          var inherit = _dereq_('component-inherit');\n          var debug = _dereq_('debug')('engine.io-client:polling-xhr');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = XHR;\n          module.exports.Request = Request;\n\n          /**\n           * Empty function\n           */\n\n          function empty() {}\n\n          /**\n           * XHR Polling constructor.\n           *\n           * @param {Object} opts\n           * @api public\n           */\n\n          function XHR(opts) {\n            Polling.call(this, opts);\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              this.xd = opts.hostname != global.location.hostname || port != opts.port;\n              this.xs = opts.secure != isSSL;\n            } else {\n              this.extraHeaders = opts.extraHeaders;\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(XHR, Polling);\n\n          /**\n           * XHR supports binary\n           */\n\n          XHR.prototype.supportsBinary = true;\n\n          /**\n           * Creates a request.\n           *\n           * @param {String} method\n           * @api private\n           */\n\n          XHR.prototype.request = function (opts) {\n            opts = opts || {};\n            opts.uri = this.uri();\n            opts.xd = this.xd;\n            opts.xs = this.xs;\n            opts.agent = this.agent || false;\n            opts.supportsBinary = this.supportsBinary;\n            opts.enablesXDR = this.enablesXDR;\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            // other options for Node.js client\n            opts.extraHeaders = this.extraHeaders;\n\n            return new Request(opts);\n          };\n\n          /**\n           * Sends data.\n           *\n           * @param {String} data to send.\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          XHR.prototype.doWrite = function (data, fn) {\n            var isBinary = typeof data !== 'string' && data !== undefined;\n            var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n            var self = this;\n            req.on('success', fn);\n            req.on('error', function (err) {\n              self.onError('xhr post error', err);\n            });\n            this.sendXhr = req;\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          XHR.prototype.doPoll = function () {\n            debug('xhr poll');\n            var req = this.request();\n            var self = this;\n            req.on('data', function (data) {\n              self.onData(data);\n            });\n            req.on('error', function (err) {\n              self.onError('xhr poll error', err);\n            });\n            this.pollXhr = req;\n          };\n\n          /**\n           * Request constructor\n           *\n           * @param {Object} options\n           * @api public\n           */\n\n          function Request(opts) {\n            this.method = opts.method || 'GET';\n            this.uri = opts.uri;\n            this.xd = !!opts.xd;\n            this.xs = !!opts.xs;\n            this.async = false !== opts.async;\n            this.data = undefined != opts.data ? opts.data : null;\n            this.agent = opts.agent;\n            this.isBinary = opts.isBinary;\n            this.supportsBinary = opts.supportsBinary;\n            this.enablesXDR = opts.enablesXDR;\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx;\n            this.key = opts.key;\n            this.passphrase = opts.passphrase;\n            this.cert = opts.cert;\n            this.ca = opts.ca;\n            this.ciphers = opts.ciphers;\n            this.rejectUnauthorized = opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            this.extraHeaders = opts.extraHeaders;\n\n            this.create();\n          }\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Request.prototype);\n\n          /**\n           * Creates the XHR object and sends the request.\n           *\n           * @api private\n           */\n\n          Request.prototype.create = function () {\n            var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            var xhr = this.xhr = new XMLHttpRequest(opts);\n            var self = this;\n\n            try {\n              debug('xhr open %s: %s', this.method, this.uri);\n              xhr.open(this.method, this.uri, this.async);\n              try {\n                if (this.extraHeaders) {\n                  xhr.setDisableHeaderCheck(true);\n                  for (var i in this.extraHeaders) {\n                    if (this.extraHeaders.hasOwnProperty(i)) {\n                      xhr.setRequestHeader(i, this.extraHeaders[i]);\n                    }\n                  }\n                }\n              } catch (e) {}\n              if (this.supportsBinary) {\n                // This has to be done after open because Firefox is stupid\n                // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n                xhr.responseType = 'arraybuffer';\n              }\n\n              if ('POST' == this.method) {\n                try {\n                  if (this.isBinary) {\n                    xhr.setRequestHeader('Content-type', 'application/octet-stream');\n                  } else {\n                    xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n                  }\n                } catch (e) {}\n              }\n\n              // ie6 check\n              if ('withCredentials' in xhr) {\n                xhr.withCredentials = true;\n              }\n\n              if (this.hasXDR()) {\n                xhr.onload = function () {\n                  self.onLoad();\n                };\n                xhr.onerror = function () {\n                  self.onError(xhr.responseText);\n                };\n              } else {\n                xhr.onreadystatechange = function () {\n                  if (4 != xhr.readyState) return;\n                  if (200 == xhr.status || 1223 == xhr.status) {\n                    self.onLoad();\n                  } else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    setTimeout(function () {\n                      self.onError(xhr.status);\n                    }, 0);\n                  }\n                };\n              }\n\n              debug('xhr data %s', this.data);\n              xhr.send(this.data);\n            } catch (e) {\n              // Need to defer since .create() is called directly fhrom the constructor\n              // and thus the 'error' event can only be only bound *after* this exception\n              // occurs.  Therefore, also, we cannot throw here at all.\n              setTimeout(function () {\n                self.onError(e);\n              }, 0);\n              return;\n            }\n\n            if (global.document) {\n              this.index = Request.requestsCount++;\n              Request.requests[this.index] = this;\n            }\n          };\n\n          /**\n           * Called upon successful response.\n           *\n           * @api private\n           */\n\n          Request.prototype.onSuccess = function () {\n            this.emit('success');\n            this.cleanup();\n          };\n\n          /**\n           * Called if we have data.\n           *\n           * @api private\n           */\n\n          Request.prototype.onData = function (data) {\n            this.emit('data', data);\n            this.onSuccess();\n          };\n\n          /**\n           * Called upon error.\n           *\n           * @api private\n           */\n\n          Request.prototype.onError = function (err) {\n            this.emit('error', err);\n            this.cleanup(true);\n          };\n\n          /**\n           * Cleans up house.\n           *\n           * @api private\n           */\n\n          Request.prototype.cleanup = function (fromError) {\n            if ('undefined' == typeof this.xhr || null === this.xhr) {\n              return;\n            }\n            // xmlhttprequest\n            if (this.hasXDR()) {\n              this.xhr.onload = this.xhr.onerror = empty;\n            } else {\n              this.xhr.onreadystatechange = empty;\n            }\n\n            if (fromError) {\n              try {\n                this.xhr.abort();\n              } catch (e) {}\n            }\n\n            if (global.document) {\n              delete Request.requests[this.index];\n            }\n\n            this.xhr = null;\n          };\n\n          /**\n           * Called upon load.\n           *\n           * @api private\n           */\n\n          Request.prototype.onLoad = function () {\n            var data;\n            try {\n              var contentType;\n              try {\n                contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n              } catch (e) {}\n              if (contentType === 'application/octet-stream') {\n                data = this.xhr.response;\n              } else {\n                if (!this.supportsBinary) {\n                  data = this.xhr.responseText;\n                } else {\n                  try {\n                    data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n                  } catch (e) {\n                    var ui8Arr = new Uint8Array(this.xhr.response);\n                    var dataArray = [];\n                    for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n                      dataArray.push(ui8Arr[idx]);\n                    }\n\n                    data = String.fromCharCode.apply(null, dataArray);\n                  }\n                }\n              }\n            } catch (e) {\n              this.onError(e);\n            }\n            if (null != data) {\n              this.onData(data);\n            }\n          };\n\n          /**\n           * Check if it has XDomainRequest.\n           *\n           * @api private\n           */\n\n          Request.prototype.hasXDR = function () {\n            return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n          };\n\n          /**\n           * Aborts the request.\n           *\n           * @api public\n           */\n\n          Request.prototype.abort = function () {\n            this.cleanup();\n          };\n\n          /**\n           * Aborts pending requests when unloading the window. This is needed to prevent\n           * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n           * emitted.\n           */\n\n          if (global.document) {\n            Request.requestsCount = 0;\n            Request.requests = {};\n            if (global.attachEvent) {\n              global.attachEvent('onunload', unloadHandler);\n            } else if (global.addEventListener) {\n              global.addEventListener('beforeunload', unloadHandler, false);\n            }\n          }\n\n          function unloadHandler() {\n            for (var i in Request.requests) {\n              if (Request.requests.hasOwnProperty(i)) {\n                Request.requests[i].abort();\n              }\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 23, \"component-emitter\": 26, \"component-inherit\": 13, \"debug\": 14, \"xmlhttprequest-ssl\": 25 }], 23: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var Transport = _dereq_('../transport');\n        var parseqs = _dereq_('parseqs');\n        var parser = _dereq_('engine.io-parser');\n        var inherit = _dereq_('component-inherit');\n        var yeast = _dereq_('yeast');\n        var debug = _dereq_('debug')('engine.io-client:polling');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Polling;\n\n        /**\n         * Is XHR2 supported?\n         */\n\n        var hasXHR2 = (function () {\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var xhr = new XMLHttpRequest({ xdomain: false });\n          return null != xhr.responseType;\n        })();\n\n        /**\n         * Polling interface.\n         *\n         * @param {Object} opts\n         * @api private\n         */\n\n        function Polling(opts) {\n          var forceBase64 = opts && opts.forceBase64;\n          if (!hasXHR2 || forceBase64) {\n            this.supportsBinary = false;\n          }\n          Transport.call(this, opts);\n        }\n\n        /**\n         * Inherits from Transport.\n         */\n\n        inherit(Polling, Transport);\n\n        /**\n         * Transport name.\n         */\n\n        Polling.prototype.name = 'polling';\n\n        /**\n         * Opens the socket (triggers polling). We write a PING message to determine\n         * when the transport is open.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doOpen = function () {\n          this.poll();\n        };\n\n        /**\n         * Pauses polling.\n         *\n         * @param {Function} callback upon buffers are flushed and transport is paused\n         * @api private\n         */\n\n        Polling.prototype.pause = function (onPause) {\n          var pending = 0;\n          var self = this;\n\n          this.readyState = 'pausing';\n\n          function pause() {\n            debug('paused');\n            self.readyState = 'paused';\n            onPause();\n          }\n\n          if (this.polling || !this.writable) {\n            var total = 0;\n\n            if (this.polling) {\n              debug('we are currently polling - waiting to pause');\n              total++;\n              this.once('pollComplete', function () {\n                debug('pre-pause polling complete');\n                --total || pause();\n              });\n            }\n\n            if (!this.writable) {\n              debug('we are currently writing - waiting to pause');\n              total++;\n              this.once('drain', function () {\n                debug('pre-pause writing complete');\n                --total || pause();\n              });\n            }\n          } else {\n            pause();\n          }\n        };\n\n        /**\n         * Starts polling cycle.\n         *\n         * @api public\n         */\n\n        Polling.prototype.poll = function () {\n          debug('polling');\n          this.polling = true;\n          this.doPoll();\n          this.emit('poll');\n        };\n\n        /**\n         * Overloads onData to detect payloads.\n         *\n         * @api private\n         */\n\n        Polling.prototype.onData = function (data) {\n          var self = this;\n          debug('polling got data %s', data);\n          var callback = function callback(packet, index, total) {\n            // if its the first message we consider the transport open\n            if ('opening' == self.readyState) {\n              self.onOpen();\n            }\n\n            // if its a close packet, we close the ongoing requests\n            if ('close' == packet.type) {\n              self.onClose();\n              return false;\n            }\n\n            // otherwise bypass onData and handle the message\n            self.onPacket(packet);\n          };\n\n          // decode payload\n          parser.decodePayload(data, this.socket.binaryType, callback);\n\n          // if an event did not trigger closing\n          if ('closed' != this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit('pollComplete');\n\n            if ('open' == this.readyState) {\n              this.poll();\n            } else {\n              debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n          }\n        };\n\n        /**\n         * For polling, send a close packet.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doClose = function () {\n          var self = this;\n\n          function close() {\n            debug('writing close packet');\n            self.write([{ type: 'close' }]);\n          }\n\n          if ('open' == this.readyState) {\n            debug('transport open - closing');\n            close();\n          } else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug('transport not open - deferring close');\n            this.once('open', close);\n          }\n        };\n\n        /**\n         * Writes a packets payload.\n         *\n         * @param {Array} data packets\n         * @param {Function} drain callback\n         * @api private\n         */\n\n        Polling.prototype.write = function (packets) {\n          var self = this;\n          this.writable = false;\n          var callbackfn = function callbackfn() {\n            self.writable = true;\n            self.emit('drain');\n          };\n\n          var self = this;\n          parser.encodePayload(packets, this.supportsBinary, function (data) {\n            self.doWrite(data, callbackfn);\n          });\n        };\n\n        /**\n         * Generates uri for connection.\n         *\n         * @api private\n         */\n\n        Polling.prototype.uri = function () {\n          var query = this.query || {};\n          var schema = this.secure ? 'https' : 'http';\n          var port = '';\n\n          // cache busting is forced\n          if (false !== this.timestampRequests) {\n            query[this.timestampParam] = yeast();\n          }\n\n          if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n          }\n\n          query = parseqs.encode(query);\n\n          // avoid port if default for schema\n          if (this.port && ('https' == schema && this.port != 443 || 'http' == schema && this.port != 80)) {\n            port = ':' + this.port;\n          }\n\n          // prepend ? to query\n          if (query.length) {\n            query = '?' + query;\n          }\n\n          var ipv6 = this.hostname.indexOf(':') !== -1;\n          return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n        };\n      }, { \"../transport\": 19, \"component-inherit\": 13, \"debug\": 14, \"engine.io-parser\": 27, \"parseqs\": 37, \"xmlhttprequest-ssl\": 25, \"yeast\": 45 }], 24: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var Transport = _dereq_('../transport');\n          var parser = _dereq_('engine.io-parser');\n          var parseqs = _dereq_('parseqs');\n          var inherit = _dereq_('component-inherit');\n          var yeast = _dereq_('yeast');\n          var debug = _dereq_('debug')('engine.io-client:websocket');\n          var BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n          /**\n           * Get either the `WebSocket` or `MozWebSocket` globals\n           * in the browser or try to resolve WebSocket-compatible\n           * interface exposed by `ws` for Node-like environment.\n           */\n\n          var WebSocket = BrowserWebSocket;\n          if (!WebSocket && typeof window === 'undefined') {\n            try {\n              WebSocket = _dereq_('ws');\n            } catch (e) {}\n          }\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = WS;\n\n          /**\n           * WebSocket transport constructor.\n           *\n           * @api {Object} connection options\n           * @api public\n           */\n\n          function WS(opts) {\n            var forceBase64 = opts && opts.forceBase64;\n            if (forceBase64) {\n              this.supportsBinary = false;\n            }\n            this.perMessageDeflate = opts.perMessageDeflate;\n            Transport.call(this, opts);\n          }\n\n          /**\n           * Inherits from Transport.\n           */\n\n          inherit(WS, Transport);\n\n          /**\n           * Transport name.\n           *\n           * @api public\n           */\n\n          WS.prototype.name = 'websocket';\n\n          /*\n           * WebSockets support binary\n           */\n\n          WS.prototype.supportsBinary = true;\n\n          /**\n           * Opens socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doOpen = function () {\n            if (!this.check()) {\n              // let probe timeout\n              return;\n            }\n\n            var self = this;\n            var uri = this.uri();\n            var protocols = void 0;\n            var opts = {\n              agent: this.agent,\n              perMessageDeflate: this.perMessageDeflate\n            };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n            if (this.extraHeaders) {\n              opts.headers = this.extraHeaders;\n            }\n\n            this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n            if (this.ws.binaryType === undefined) {\n              this.supportsBinary = false;\n            }\n\n            if (this.ws.supports && this.ws.supports.binary) {\n              this.supportsBinary = true;\n              this.ws.binaryType = 'buffer';\n            } else {\n              this.ws.binaryType = 'arraybuffer';\n            }\n\n            this.addEventListeners();\n          };\n\n          /**\n           * Adds event listeners to the socket\n           *\n           * @api private\n           */\n\n          WS.prototype.addEventListeners = function () {\n            var self = this;\n\n            this.ws.onopen = function () {\n              self.onOpen();\n            };\n            this.ws.onclose = function () {\n              self.onClose();\n            };\n            this.ws.onmessage = function (ev) {\n              self.onData(ev.data);\n            };\n            this.ws.onerror = function (e) {\n              self.onError('websocket error', e);\n            };\n          };\n\n          /**\n           * Override `onData` to use a timer on iOS.\n           * See: https://gist.github.com/mloughran/2052006\n           *\n           * @api private\n           */\n\n          if ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n            WS.prototype.onData = function (data) {\n              var self = this;\n              setTimeout(function () {\n                Transport.prototype.onData.call(self, data);\n              }, 0);\n            };\n          }\n\n          /**\n           * Writes data to socket.\n           *\n           * @param {Array} array of packets.\n           * @api private\n           */\n\n          WS.prototype.write = function (packets) {\n            var self = this;\n            this.writable = false;\n\n            // encodePacket efficient as it uses WS framing\n            // no need for encodePayload\n            var total = packets.length;\n            for (var i = 0, l = total; i < l; i++) {\n              (function (packet) {\n                parser.encodePacket(packet, self.supportsBinary, function (data) {\n                  if (!BrowserWebSocket) {\n                    // always create a new object (GH-437)\n                    var opts = {};\n                    if (packet.options) {\n                      opts.compress = packet.options.compress;\n                    }\n\n                    if (self.perMessageDeflate) {\n                      var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n                      if (len < self.perMessageDeflate.threshold) {\n                        opts.compress = false;\n                      }\n                    }\n                  }\n\n                  //Sometimes the websocket has already been closed but the browser didn't\n                  //have a chance of informing us about it yet, in that case send will\n                  //throw an error\n                  try {\n                    if (BrowserWebSocket) {\n                      // TypeError is thrown when passing the second argument on Safari\n                      self.ws.send(data);\n                    } else {\n                      self.ws.send(data, opts);\n                    }\n                  } catch (e) {\n                    debug('websocket closed before onclose event');\n                  }\n\n                  --total || done();\n                });\n              })(packets[i]);\n            }\n\n            function done() {\n              self.emit('flush');\n\n              // fake drain\n              // defer to next tick to allow Socket to clear writeBuffer\n              setTimeout(function () {\n                self.writable = true;\n                self.emit('drain');\n              }, 0);\n            }\n          };\n\n          /**\n           * Called upon close\n           *\n           * @api private\n           */\n\n          WS.prototype.onClose = function () {\n            Transport.prototype.onClose.call(this);\n          };\n\n          /**\n           * Closes socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doClose = function () {\n            if (typeof this.ws !== 'undefined') {\n              this.ws.close();\n            }\n          };\n\n          /**\n           * Generates uri for connection.\n           *\n           * @api private\n           */\n\n          WS.prototype.uri = function () {\n            var query = this.query || {};\n            var schema = this.secure ? 'wss' : 'ws';\n            var port = '';\n\n            // avoid port if default for schema\n            if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {\n              port = ':' + this.port;\n            }\n\n            // append timestamp to URI\n            if (this.timestampRequests) {\n              query[this.timestampParam] = yeast();\n            }\n\n            // communicate binary support capabilities\n            if (!this.supportsBinary) {\n              query.b64 = 1;\n            }\n\n            query = parseqs.encode(query);\n\n            // prepend ? to query\n            if (query.length) {\n              query = '?' + query;\n            }\n\n            var ipv6 = this.hostname.indexOf(':') !== -1;\n            return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n          };\n\n          /**\n           * Feature detection for WebSocket.\n           *\n           * @return {Boolean} whether this transport is available.\n           * @api public\n           */\n\n          WS.prototype.check = function () {\n            return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"../transport\": 19, \"component-inherit\": 13, \"debug\": 14, \"engine.io-parser\": 27, \"parseqs\": 37, \"ws\": undefined, \"yeast\": 45 }], 25: [function (_dereq_, module, exports) {\n        // browser shim for xmlhttprequest module\n        var hasCORS = _dereq_('has-cors');\n\n        module.exports = function (opts) {\n          var xdomain = opts.xdomain;\n\n          // scheme must be same when usign XDomainRequest\n          // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n          var xscheme = opts.xscheme;\n\n          // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n          // https://github.com/Automattic/engine.io-client/pull/217\n          var enablesXDR = opts.enablesXDR;\n\n          // XMLHttpRequest can be disabled on IE\n          try {\n            if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n              return new XMLHttpRequest();\n            }\n          } catch (e) {}\n\n          // Use XDomainRequest for IE8 if enablesXDR is true\n          // because loading bar keeps flashing when using jsonp-polling\n          // https://github.com/yujiosaka/socke.io-ie8-loading-example\n          try {\n            if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n              return new XDomainRequest();\n            }\n          } catch (e) {}\n\n          if (!xdomain) {\n            try {\n              return new ActiveXObject('Microsoft.XMLHTTP');\n            } catch (e) {}\n          }\n        };\n      }, { \"has-cors\": 31 }], 26: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          var self = this;\n          this._callbacks = this._callbacks || {};\n\n          function on() {\n            self.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks[event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks[event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 27: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var keys = _dereq_('./keys');\n          var hasBinary = _dereq_('has-binary');\n          var sliceBuffer = _dereq_('arraybuffer.slice');\n          var base64encoder = _dereq_('base64-arraybuffer');\n          var after = _dereq_('after');\n          var utf8 = _dereq_('utf8');\n\n          /**\n           * Check if we are running an android browser. That requires us to use\n           * ArrayBuffer with polling transports...\n           *\n           * http://ghinda.net/jpeg-blob-ajax-android/\n           */\n\n          var isAndroid = navigator.userAgent.match(/Android/i);\n\n          /**\n           * Check if we are running in PhantomJS.\n           * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n           * https://github.com/ariya/phantomjs/issues/11395\n           * @type boolean\n           */\n          var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n          /**\n           * When true, avoids using Blobs to encode payloads.\n           * @type boolean\n           */\n          var dontSendBlobs = isAndroid || isPhantomJS;\n\n          /**\n           * Current protocol version.\n           */\n\n          exports.protocol = 3;\n\n          /**\n           * Packet types.\n           */\n\n          var packets = exports.packets = {\n            open: 0, // non-ws\n            close: 1, // non-ws\n            ping: 2,\n            pong: 3,\n            message: 4,\n            upgrade: 5,\n            noop: 6\n          };\n\n          var packetslist = keys(packets);\n\n          /**\n           * Premade error packet.\n           */\n\n          var err = { type: 'error', data: 'parser error' };\n\n          /**\n           * Create a blob api even for blob builder when vendor prefixes exist\n           */\n\n          var Blob = _dereq_('blob');\n\n          /**\n           * Encodes a packet.\n           *\n           *     <packet type id> [ <data> ]\n           *\n           * Example:\n           *\n           *     5hello world\n           *     3\n           *     4\n           *\n           * Binary is encoded in an identical principle\n           *\n           * @api private\n           */\n\n          exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n            if ('function' == typeof supportsBinary) {\n              callback = supportsBinary;\n              supportsBinary = false;\n            }\n\n            if ('function' == typeof utf8encode) {\n              callback = utf8encode;\n              utf8encode = null;\n            }\n\n            var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n            if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n              return encodeArrayBuffer(packet, supportsBinary, callback);\n            } else if (Blob && data instanceof global.Blob) {\n              return encodeBlob(packet, supportsBinary, callback);\n            }\n\n            // might be an object with { base64: true, data: dataAsBase64String }\n            if (data && data.base64) {\n              return encodeBase64Object(packet, callback);\n            }\n\n            // Sending data as a utf-8 string\n            var encoded = packets[packet.type];\n\n            // data fragment is optional\n            if (undefined !== packet.data) {\n              encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n            }\n\n            return callback('' + encoded);\n          };\n\n          function encodeBase64Object(packet, callback) {\n            // packet data is an object { base64: true, data: dataAsBase64String }\n            var message = 'b' + exports.packets[packet.type] + packet.data.data;\n            return callback(message);\n          }\n\n          /**\n           * Encode packet helpers for binary types\n           */\n\n          function encodeArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var data = packet.data;\n            var contentArray = new Uint8Array(data);\n            var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n            resultBuffer[0] = packets[packet.type];\n            for (var i = 0; i < contentArray.length; i++) {\n              resultBuffer[i + 1] = contentArray[i];\n            }\n\n            return callback(resultBuffer.buffer);\n          }\n\n          function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var fr = new FileReader();\n            fr.onload = function () {\n              packet.data = fr.result;\n              exports.encodePacket(packet, supportsBinary, true, callback);\n            };\n            return fr.readAsArrayBuffer(packet.data);\n          }\n\n          function encodeBlob(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            if (dontSendBlobs) {\n              return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n            }\n\n            var length = new Uint8Array(1);\n            length[0] = packets[packet.type];\n            var blob = new Blob([length.buffer, packet.data]);\n\n            return callback(blob);\n          }\n\n          /**\n           * Encodes a packet with binary data in a base64 string\n           *\n           * @param {Object} packet, has `type` and `data`\n           * @return {String} base64 encoded message\n           */\n\n          exports.encodeBase64Packet = function (packet, callback) {\n            var message = 'b' + exports.packets[packet.type];\n            if (Blob && packet.data instanceof global.Blob) {\n              var fr = new FileReader();\n              fr.onload = function () {\n                var b64 = fr.result.split(',')[1];\n                callback(message + b64);\n              };\n              return fr.readAsDataURL(packet.data);\n            }\n\n            var b64data;\n            try {\n              b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n            } catch (e) {\n              // iPhone Safari doesn't let you apply with typed arrays\n              var typed = new Uint8Array(packet.data);\n              var basic = new Array(typed.length);\n              for (var i = 0; i < typed.length; i++) {\n                basic[i] = typed[i];\n              }\n              b64data = String.fromCharCode.apply(null, basic);\n            }\n            message += global.btoa(b64data);\n            return callback(message);\n          };\n\n          /**\n           * Decodes a packet. Changes format to Blob if requested.\n           *\n           * @return {Object} with `type` and `data` (if any)\n           * @api private\n           */\n\n          exports.decodePacket = function (data, binaryType, utf8decode) {\n            // String data\n            if (typeof data == 'string' || data === undefined) {\n              if (data.charAt(0) == 'b') {\n                return exports.decodeBase64Packet(data.substr(1), binaryType);\n              }\n\n              if (utf8decode) {\n                try {\n                  data = utf8.decode(data);\n                } catch (e) {\n                  return err;\n                }\n              }\n              var type = data.charAt(0);\n\n              if (Number(type) != type || !packetslist[type]) {\n                return err;\n              }\n\n              if (data.length > 1) {\n                return { type: packetslist[type], data: data.substring(1) };\n              } else {\n                return { type: packetslist[type] };\n              }\n            }\n\n            var asArray = new Uint8Array(data);\n            var type = asArray[0];\n            var rest = sliceBuffer(data, 1);\n            if (Blob && binaryType === 'blob') {\n              rest = new Blob([rest]);\n            }\n            return { type: packetslist[type], data: rest };\n          };\n\n          /**\n           * Decodes a packet encoded in a base64 string\n           *\n           * @param {String} base64 encoded message\n           * @return {Object} with `type` and `data` (if any)\n           */\n\n          exports.decodeBase64Packet = function (msg, binaryType) {\n            var type = packetslist[msg.charAt(0)];\n            if (!global.ArrayBuffer) {\n              return { type: type, data: { base64: true, data: msg.substr(1) } };\n            }\n\n            var data = base64encoder.decode(msg.substr(1));\n\n            if (binaryType === 'blob' && Blob) {\n              data = new Blob([data]);\n            }\n\n            return { type: type, data: data };\n          };\n\n          /**\n           * Encodes multiple messages (payload).\n           *\n           *     <length>:data\n           *\n           * Example:\n           *\n           *     11:hello world2:hi\n           *\n           * If any contents are binary, they will be encoded as base64 strings. Base64\n           * encoded strings are marked with a b before the length specifier\n           *\n           * @param {Array} packets\n           * @api private\n           */\n\n          exports.encodePayload = function (packets, supportsBinary, callback) {\n            if (typeof supportsBinary == 'function') {\n              callback = supportsBinary;\n              supportsBinary = null;\n            }\n\n            var isBinary = hasBinary(packets);\n\n            if (supportsBinary && isBinary) {\n              if (Blob && !dontSendBlobs) {\n                return exports.encodePayloadAsBlob(packets, callback);\n              }\n\n              return exports.encodePayloadAsArrayBuffer(packets, callback);\n            }\n\n            if (!packets.length) {\n              return callback('0:');\n            }\n\n            function setLengthHeader(message) {\n              return message.length + ':' + message;\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {\n                doneCallback(null, setLengthHeader(message));\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(results.join(''));\n            });\n          };\n\n          /**\n           * Async array map using after\n           */\n\n          function map(ary, each, done) {\n            var result = new Array(ary.length);\n            var next = after(ary.length, done);\n\n            var eachWithIndex = function eachWithIndex(i, el, cb) {\n              each(el, function (error, msg) {\n                result[i] = msg;\n                cb(error, result);\n              });\n            };\n\n            for (var i = 0; i < ary.length; i++) {\n              eachWithIndex(i, ary[i], next);\n            }\n          }\n\n          /*\n           * Decodes data when a payload is maybe expected. Possible binary contents are\n           * decoded from their base64 representation\n           *\n           * @param {String} data, callback method\n           * @api public\n           */\n\n          exports.decodePayload = function (data, binaryType, callback) {\n            if (typeof data != 'string') {\n              return exports.decodePayloadAsBinary(data, binaryType, callback);\n            }\n\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var packet;\n            if (data == '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n\n            var length = '',\n                n,\n                msg;\n\n            for (var i = 0, l = data.length; i < l; i++) {\n              var chr = data.charAt(i);\n\n              if (':' != chr) {\n                length += chr;\n              } else {\n                if ('' == length || length != (n = Number(length))) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                msg = data.substr(i + 1, n);\n\n                if (length != msg.length) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                if (msg.length) {\n                  packet = exports.decodePacket(msg, binaryType, true);\n\n                  if (err.type == packet.type && err.data == packet.data) {\n                    // parser error in individual packet - ignoring payload\n                    return callback(err, 0, 1);\n                  }\n\n                  var ret = callback(packet, i + n, l);\n                  if (false === ret) return;\n                }\n\n                // advance cursor\n                i += n;\n                length = '';\n              }\n            }\n\n            if (length != '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n          };\n\n          /**\n           * Encodes multiple messages (payload) as binary.\n           *\n           * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n           * 255><data>\n           *\n           * Example:\n           * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n           *\n           * @param {Array} packets\n           * @return {ArrayBuffer} encoded payload\n           * @api private\n           */\n\n          exports.encodePayloadAsArrayBuffer = function (packets, callback) {\n            if (!packets.length) {\n              return callback(new ArrayBuffer(0));\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (data) {\n                return doneCallback(null, data);\n              });\n            }\n\n            map(packets, encodeOne, function (err, encodedPackets) {\n              var totalLength = encodedPackets.reduce(function (acc, p) {\n                var len;\n                if (typeof p === 'string') {\n                  len = p.length;\n                } else {\n                  len = p.byteLength;\n                }\n                return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n              }, 0);\n\n              var resultArray = new Uint8Array(totalLength);\n\n              var bufferIndex = 0;\n              encodedPackets.forEach(function (p) {\n                var isString = typeof p === 'string';\n                var ab = p;\n                if (isString) {\n                  var view = new Uint8Array(p.length);\n                  for (var i = 0; i < p.length; i++) {\n                    view[i] = p.charCodeAt(i);\n                  }\n                  ab = view.buffer;\n                }\n\n                if (isString) {\n                  // not true binary\n                  resultArray[bufferIndex++] = 0;\n                } else {\n                  // true binary\n                  resultArray[bufferIndex++] = 1;\n                }\n\n                var lenStr = ab.byteLength.toString();\n                for (var i = 0; i < lenStr.length; i++) {\n                  resultArray[bufferIndex++] = parseInt(lenStr[i]);\n                }\n                resultArray[bufferIndex++] = 255;\n\n                var view = new Uint8Array(ab);\n                for (var i = 0; i < view.length; i++) {\n                  resultArray[bufferIndex++] = view[i];\n                }\n              });\n\n              return callback(resultArray.buffer);\n            });\n          };\n\n          /**\n           * Encode as Blob\n           */\n\n          exports.encodePayloadAsBlob = function (packets, callback) {\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (encoded) {\n                var binaryIdentifier = new Uint8Array(1);\n                binaryIdentifier[0] = 1;\n                if (typeof encoded === 'string') {\n                  var view = new Uint8Array(encoded.length);\n                  for (var i = 0; i < encoded.length; i++) {\n                    view[i] = encoded.charCodeAt(i);\n                  }\n                  encoded = view.buffer;\n                  binaryIdentifier[0] = 0;\n                }\n\n                var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n\n                var lenStr = len.toString();\n                var lengthAry = new Uint8Array(lenStr.length + 1);\n                for (var i = 0; i < lenStr.length; i++) {\n                  lengthAry[i] = parseInt(lenStr[i]);\n                }\n                lengthAry[lenStr.length] = 255;\n\n                if (Blob) {\n                  var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n                  doneCallback(null, blob);\n                }\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(new Blob(results));\n            });\n          };\n\n          /*\n           * Decodes data when a payload is maybe expected. Strings are decoded by\n           * interpreting each byte as a key code for entries marked to start with 0. See\n           * description of encodePayloadAsBinary\n           *\n           * @param {ArrayBuffer} data, callback method\n           * @api public\n           */\n\n          exports.decodePayloadAsBinary = function (data, binaryType, callback) {\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var bufferTail = data;\n            var buffers = [];\n\n            var numberTooLong = false;\n            while (bufferTail.byteLength > 0) {\n              var tailArray = new Uint8Array(bufferTail);\n              var isString = tailArray[0] === 0;\n              var msgLength = '';\n\n              for (var i = 1;; i++) {\n                if (tailArray[i] == 255) break;\n\n                if (msgLength.length > 310) {\n                  numberTooLong = true;\n                  break;\n                }\n\n                msgLength += tailArray[i];\n              }\n\n              if (numberTooLong) return callback(err, 0, 1);\n\n              bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n              msgLength = parseInt(msgLength);\n\n              var msg = sliceBuffer(bufferTail, 0, msgLength);\n              if (isString) {\n                try {\n                  msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n                } catch (e) {\n                  // iPhone Safari doesn't let you apply to typed arrays\n                  var typed = new Uint8Array(msg);\n                  msg = '';\n                  for (var i = 0; i < typed.length; i++) {\n                    msg += String.fromCharCode(typed[i]);\n                  }\n                }\n              }\n\n              buffers.push(msg);\n              bufferTail = sliceBuffer(bufferTail, msgLength);\n            }\n\n            var total = buffers.length;\n            buffers.forEach(function (buffer, i) {\n              callback(exports.decodePacket(buffer, binaryType, true), i, total);\n            });\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./keys\": 28, \"after\": 6, \"arraybuffer.slice\": 7, \"base64-arraybuffer\": 9, \"blob\": 10, \"has-binary\": 29, \"utf8\": 44 }], 28: [function (_dereq_, module, exports) {\n\n        /**\n         * Gets the keys for an object.\n         *\n         * @return {Array} keys\n         * @api private\n         */\n\n        module.exports = Object.keys || function keys(obj) {\n          var arr = [];\n          var has = Object.prototype.hasOwnProperty;\n\n          for (var i in obj) {\n            if (has.call(obj, i)) {\n              arr.push(i);\n            }\n          }\n          return arr;\n        };\n      }, {}], 29: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                if (obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 33 }], 30: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                // see: https://github.com/Automattic/has-binary/pull/4\n                if (obj.toJSON && 'function' == typeof obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 33 }], 31: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         *\n         * Logic borrowed from Modernizr:\n         *\n         *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n         */\n\n        try {\n          module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n        } catch (err) {\n          // if XMLHttp support is disabled in IE then it will throw\n          // when trying to create\n          module.exports = false;\n        }\n      }, {}], 32: [function (_dereq_, module, exports) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n          if (indexOf) return arr.indexOf(obj);\n          for (var i = 0; i < arr.length; ++i) {\n            if (arr[i] === obj) return i;\n          }\n          return -1;\n        };\n      }, {}], 33: [function (_dereq_, module, exports) {\n        module.exports = Array.isArray || function (arr) {\n          return Object.prototype.toString.call(arr) == '[object Array]';\n        };\n      }, {}], 34: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n          ;(function () {\n            // Detect the `define` function exposed by asynchronous module loaders. The\n            // strict `define` check is necessary for compatibility with `r.js`.\n            var isLoader = typeof define === \"function\" && define.amd;\n\n            // A set of types used to distinguish objects from primitives.\n            var objectTypes = {\n              \"function\": true,\n              \"object\": true\n            };\n\n            // Detect the `exports` object exposed by CommonJS implementations.\n            var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n            // Use the `global` object exposed by Node (including Browserify via\n            // `insert-module-globals`), Narwhal, and Ringo as the default context,\n            // and the `window` object in browsers. Rhino exports a `global` function\n            // instead.\n            var root = objectTypes[typeof window] && window || this,\n                freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n            if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n              root = freeGlobal;\n            }\n\n            // Public: Initializes JSON 3 using the given `context` object, attaching the\n            // `stringify` and `parse` functions to the specified `exports` object.\n            function runInContext(context, exports) {\n              context || (context = root[\"Object\"]());\n              exports || (exports = root[\"Object\"]());\n\n              // Native constructor aliases.\n              var Number = context[\"Number\"] || root[\"Number\"],\n                  String = context[\"String\"] || root[\"String\"],\n                  Object = context[\"Object\"] || root[\"Object\"],\n                  Date = context[\"Date\"] || root[\"Date\"],\n                  SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n                  TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n                  Math = context[\"Math\"] || root[\"Math\"],\n                  nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n              // Delegate to the native `stringify` and `parse` implementations.\n              if (typeof nativeJSON == \"object\" && nativeJSON) {\n                exports.stringify = nativeJSON.stringify;\n                exports.parse = nativeJSON.parse;\n              }\n\n              // Convenience aliases.\n              var objectProto = Object.prototype,\n                  getClass = objectProto.toString,\n                  isProperty,\n                  forEach,\n                  undef;\n\n              // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n              var isExtended = new Date(-3509827334573292);\n              try {\n                // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n                // results for certain dates in Opera >= 10.53.\n                isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n                // Safari < 2.0.2 stores the internal millisecond time value correctly,\n                // but clips the values returned by the date methods to the range of\n                // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n                isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n              } catch (exception) {}\n\n              // Internal: Determines whether the native `JSON.stringify` and `parse`\n              // implementations are spec-compliant. Based on work by Ken Snyder.\n              function has(name) {\n                if (has[name] !== undef) {\n                  // Return cached feature test result.\n                  return has[name];\n                }\n                var isSupported;\n                if (name == \"bug-string-char-index\") {\n                  // IE <= 7 doesn't support accessing string characters using square\n                  // bracket notation. IE 8 only supports this for primitives.\n                  isSupported = \"a\"[0] != \"a\";\n                } else if (name == \"json\") {\n                  // Indicates whether both `JSON.stringify` and `JSON.parse` are\n                  // supported.\n                  isSupported = has(\"json-stringify\") && has(\"json-parse\");\n                } else {\n                  var value,\n                      serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\";\n                  // Test `JSON.stringify`.\n                  if (name == \"json-stringify\") {\n                    var stringify = exports.stringify,\n                        stringifySupported = typeof stringify == \"function\" && isExtended;\n                    if (stringifySupported) {\n                      // A test function object with a custom `toJSON` method.\n                      (value = function () {\n                        return 1;\n                      }).toJSON = value;\n                      try {\n                        stringifySupported =\n                        // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                        // primitives as object literals.\n                        stringify(0) === \"0\" &&\n                        // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                        // literals.\n                        stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' &&\n                        // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                        // does not define a canonical JSON representation (this applies to\n                        // objects with `toJSON` properties as well, *unless* they are nested\n                        // within an object or array).\n                        stringify(getClass) === undef &&\n                        // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                        // FF 3.1b3 pass this test.\n                        stringify(undef) === undef &&\n                        // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                        // respectively, if the value is omitted entirely.\n                        stringify() === undef &&\n                        // FF 3.1b1, 2 throw an error if the given value is not a number,\n                        // string, array, object, Boolean, or `null` literal. This applies to\n                        // objects with custom `toJSON` methods as well, unless they are nested\n                        // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                        // methods entirely.\n                        stringify(value) === \"1\" && stringify([value]) == \"[1]\" &&\n                        // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                        // `\"[null]\"`.\n                        stringify([undef]) == \"[null]\" &&\n                        // YUI 3.0.0b1 fails to serialize `null` literals.\n                        stringify(null) == \"null\" &&\n                        // FF 3.1b1, 2 halts serialization if an array contains a function:\n                        // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                        // elides non-JSON values from objects and arrays, unless they\n                        // define custom `toJSON` methods.\n                        stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                        // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                        // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                        stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                        // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                        stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                        // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                        // serialize extended years.\n                        stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                        // The milliseconds are optional in ES 5, but required in 5.1.\n                        stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                        // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                        // four-digit years instead of six-digit years. Credits: @Yaffle.\n                        stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                        // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                        // values less than 1000. Credits: @Yaffle.\n                        stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n                      } catch (exception) {\n                        stringifySupported = false;\n                      }\n                    }\n                    isSupported = stringifySupported;\n                  }\n                  // Test `JSON.parse`.\n                  if (name == \"json-parse\") {\n                    var parse = exports.parse;\n                    if (typeof parse == \"function\") {\n                      try {\n                        // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n                        // Conforming implementations should also coerce the initial argument to\n                        // a string prior to parsing.\n                        if (parse(\"0\") === 0 && !parse(false)) {\n                          // Simple parsing test.\n                          value = parse(serialized);\n                          var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                          if (parseSupported) {\n                            try {\n                              // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                              parseSupported = !parse('\"\\t\"');\n                            } catch (exception) {}\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                                // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                                // certain octal literals.\n                                parseSupported = parse(\"01\") !== 1;\n                              } catch (exception) {}\n                            }\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                                // points. These environments, along with FF 3.1b1 and 2,\n                                // also allow trailing commas in JSON objects and arrays.\n                                parseSupported = parse(\"1.\") !== 1;\n                              } catch (exception) {}\n                            }\n                          }\n                        }\n                      } catch (exception) {\n                        parseSupported = false;\n                      }\n                    }\n                    isSupported = parseSupported;\n                  }\n                }\n                return has[name] = !!isSupported;\n              }\n\n              if (!has(\"json\")) {\n                // Common `[[Class]]` name aliases.\n                var functionClass = \"[object Function]\",\n                    dateClass = \"[object Date]\",\n                    numberClass = \"[object Number]\",\n                    stringClass = \"[object String]\",\n                    arrayClass = \"[object Array]\",\n                    booleanClass = \"[object Boolean]\";\n\n                // Detect incomplete support for accessing string characters by index.\n                var charIndexBuggy = has(\"bug-string-char-index\");\n\n                // Define additional utility methods if the `Date` methods are buggy.\n                if (!isExtended) {\n                  var floor = Math.floor;\n                  // A mapping between the months of the year and the number of days between\n                  // January 1st and the first of the respective month.\n                  var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n                  // Internal: Calculates the number of days between the Unix epoch and the\n                  // first day of the given month.\n                  var getDay = function getDay(year, month) {\n                    return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n                  };\n                }\n\n                // Internal: Determines if a property is a direct property of the given\n                // object. Delegates to the native `Object#hasOwnProperty` method.\n                if (!(isProperty = objectProto.hasOwnProperty)) {\n                  isProperty = function (property) {\n                    var members = {},\n                        constructor;\n                    if ((members.__proto__ = null, members.__proto__ = {\n                      // The *proto* property cannot be set multiple times in recent\n                      // versions of Firefox and SeaMonkey.\n                      \"toString\": 1\n                    }, members).toString != getClass) {\n                      // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n                      // supports the mutable *proto* property.\n                      isProperty = function (property) {\n                        // Capture and break the object's prototype chain (see section 8.6.2\n                        // of the ES 5.1 spec). The parenthesized expression prevents an\n                        // unsafe transformation by the Closure Compiler.\n                        var original = this.__proto__,\n                            result = (property in (this.__proto__ = null, this));\n                        // Restore the original prototype chain.\n                        this.__proto__ = original;\n                        return result;\n                      };\n                    } else {\n                      // Capture a reference to the top-level `Object` constructor.\n                      constructor = members.constructor;\n                      // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n                      // other environments.\n                      isProperty = function (property) {\n                        var parent = (this.constructor || constructor).prototype;\n                        return property in this && !(property in parent && this[property] === parent[property]);\n                      };\n                    }\n                    members = null;\n                    return isProperty.call(this, property);\n                  };\n                }\n\n                // Internal: Normalizes the `for...in` iteration algorithm across\n                // environments. Each enumerated key is yielded to a `callback` function.\n                forEach = function (object, callback) {\n                  var size = 0,\n                      Properties,\n                      members,\n                      property;\n\n                  // Tests for bugs in the current environment's `for...in` algorithm. The\n                  // `valueOf` property inherits the non-enumerable flag from\n                  // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n                  (Properties = function () {\n                    this.valueOf = 0;\n                  }).prototype.valueOf = 0;\n\n                  // Iterate over a new instance of the `Properties` class.\n                  members = new Properties();\n                  for (property in members) {\n                    // Ignore all properties inherited from `Object.prototype`.\n                    if (isProperty.call(members, property)) {\n                      size++;\n                    }\n                  }\n                  Properties = members = null;\n\n                  // Normalize the iteration algorithm.\n                  if (!size) {\n                    // A list of non-enumerable properties inherited from `Object.prototype`.\n                    members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n                    // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n                    // properties.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          length;\n                      var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n                      for (property in object) {\n                        // Gecko <= 1.0 enumerates the `prototype` property of functions under\n                        // certain conditions; IE does not.\n                        if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for each non-enumerable property.\n                      for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n                    };\n                  } else if (size == 2) {\n                    // Safari <= 2.0.4 enumerates shadowed properties twice.\n                    forEach = function (object, callback) {\n                      // Create a set of iterated properties.\n                      var members = {},\n                          isFunction = getClass.call(object) == functionClass,\n                          property;\n                      for (property in object) {\n                        // Store each property name to prevent double enumeration. The\n                        // `prototype` property of functions is not enumerated due to cross-\n                        // environment inconsistencies.\n                        if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                    };\n                  } else {\n                    // No bugs detected; use the standard `for...in` algorithm.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          isConstructor;\n                      for (property in object) {\n                        if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for the `constructor` property due to\n                      // cross-environment inconsistencies.\n                      if (isConstructor || isProperty.call(object, property = \"constructor\")) {\n                        callback(property);\n                      }\n                    };\n                  }\n                  return forEach(object, callback);\n                };\n\n                // Public: Serializes a JavaScript `value` as a JSON string. The optional\n                // `filter` argument may specify either a function that alters how object and\n                // array members are serialized, or an array of strings and numbers that\n                // indicates which properties should be serialized. The optional `width`\n                // argument may be either a string or number that specifies the indentation\n                // level of the output.\n                if (!has(\"json-stringify\")) {\n                  // Internal: A map of control characters and their escaped equivalents.\n                  var Escapes = {\n                    92: \"\\\\\\\\\",\n                    34: '\\\\\"',\n                    8: \"\\\\b\",\n                    12: \"\\\\f\",\n                    10: \"\\\\n\",\n                    13: \"\\\\r\",\n                    9: \"\\\\t\"\n                  };\n\n                  // Internal: Converts `value` into a zero-padded string such that its\n                  // length is at least equal to `width`. The `width` must be <= 6.\n                  var leadingZeroes = \"000000\";\n                  var toPaddedString = function toPaddedString(width, value) {\n                    // The `|| 0` expression is necessary to work around a bug in\n                    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n                    return (leadingZeroes + (value || 0)).slice(-width);\n                  };\n\n                  // Internal: Double-quotes a string `value`, replacing all ASCII control\n                  // characters (characters with code unit values between 0 and 31) with\n                  // their escaped equivalents. This is an implementation of the\n                  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n                  var unicodePrefix = \"\\\\u00\";\n                  var quote = function quote(value) {\n                    var result = '\"',\n                        index = 0,\n                        length = value.length,\n                        useCharIndex = !charIndexBuggy || length > 10;\n                    var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n                    for (; index < length; index++) {\n                      var charCode = value.charCodeAt(index);\n                      // If the character is a control character, append its Unicode or\n                      // shorthand escape sequence; otherwise, append the character as-is.\n                      switch (charCode) {\n                        case 8:case 9:case 10:case 12:case 13:case 34:case 92:\n                          result += Escapes[charCode];\n                          break;\n                        default:\n                          if (charCode < 32) {\n                            result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                            break;\n                          }\n                          result += useCharIndex ? symbols[index] : value.charAt(index);\n                      }\n                    }\n                    return result + '\"';\n                  };\n\n                  // Internal: Recursively serializes an object. Implements the\n                  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n                  var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n                    var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n                    try {\n                      // Necessary for host object support.\n                      value = object[property];\n                    } catch (exception) {}\n                    if (typeof value == \"object\" && value) {\n                      className = getClass.call(value);\n                      if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n                        if (value > -1 / 0 && value < 1 / 0) {\n                          // Dates are serialized according to the `Date#toJSON` method\n                          // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                          // for the ISO 8601 date time string format.\n                          if (getDay) {\n                            // Manually compute the year, month, date, hours, minutes,\n                            // seconds, and milliseconds if the `getUTC*` methods are\n                            // buggy. Adapted from @Yaffle's `date-shim` project.\n                            date = floor(value / 864e5);\n                            for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                            for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                            date = 1 + date - getDay(year, month);\n                            // The `time` value specifies the time within the day (see ES\n                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                            // to compute `A modulo B`, as the `%` operator does not\n                            // correspond to the `modulo` operation for negative numbers.\n                            time = (value % 864e5 + 864e5) % 864e5;\n                            // The hours, minutes, seconds, and milliseconds are obtained by\n                            // decomposing the time within the day. See section 15.9.1.10.\n                            hours = floor(time / 36e5) % 24;\n                            minutes = floor(time / 6e4) % 60;\n                            seconds = floor(time / 1e3) % 60;\n                            milliseconds = time % 1e3;\n                          } else {\n                            year = value.getUTCFullYear();\n                            month = value.getUTCMonth();\n                            date = value.getUTCDate();\n                            hours = value.getUTCHours();\n                            minutes = value.getUTCMinutes();\n                            seconds = value.getUTCSeconds();\n                            milliseconds = value.getUTCMilliseconds();\n                          }\n                          // Serialize extended years correctly.\n                          value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                          // Months, dates, hours, minutes, and seconds should have two\n                          // digits; milliseconds should have three.\n                          \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                          // Milliseconds are optional in ES 5.0, but required in 5.1.\n                          \".\" + toPaddedString(3, milliseconds) + \"Z\";\n                        } else {\n                          value = null;\n                        }\n                      } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || isProperty.call(value, \"toJSON\"))) {\n                        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n                        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n                        // ignores all `toJSON` methods on these objects unless they are\n                        // defined directly on an instance.\n                        value = value.toJSON(property);\n                      }\n                    }\n                    if (callback) {\n                      // If a replacement function was provided, call it to obtain the value\n                      // for serialization.\n                      value = callback.call(object, property, value);\n                    }\n                    if (value === null) {\n                      return \"null\";\n                    }\n                    className = getClass.call(value);\n                    if (className == booleanClass) {\n                      // Booleans are represented literally.\n                      return \"\" + value;\n                    } else if (className == numberClass) {\n                      // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n                      // `\"null\"`.\n                      return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n                    } else if (className == stringClass) {\n                      // Strings are double-quoted and escaped.\n                      return quote(\"\" + value);\n                    }\n                    // Recursively serialize objects and arrays.\n                    if (typeof value == \"object\") {\n                      // Check for cyclic structures. This is a linear search; performance\n                      // is inversely proportional to the number of unique nested objects.\n                      for (length = stack.length; length--;) {\n                        if (stack[length] === value) {\n                          // Cyclic structures cannot be serialized by `JSON.stringify`.\n                          throw TypeError();\n                        }\n                      }\n                      // Add the object to the stack of traversed objects.\n                      stack.push(value);\n                      results = [];\n                      // Save the current indentation level and indent one additional level.\n                      prefix = indentation;\n                      indentation += whitespace;\n                      if (className == arrayClass) {\n                        // Recursively serialize array elements.\n                        for (index = 0, length = value.length; index < length; index++) {\n                          element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                          results.push(element === undef ? \"null\" : element);\n                        }\n                        result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n                      } else {\n                        // Recursively serialize object members. Members are selected from\n                        // either a user-specified list of property names, or the object\n                        // itself.\n                        forEach(properties || value, function (property) {\n                          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                          if (element !== undef) {\n                            // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                            // is not the empty string, let `member` {quote(property) + \":\"}\n                            // be the concatenation of `member` and the `space` character.\"\n                            // The \"`space` character\" refers to the literal space\n                            // character, not the `space` {width} argument provided to\n                            // `JSON.stringify`.\n                            results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                          }\n                        });\n                        result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n                      }\n                      // Remove the object from the traversed object stack.\n                      stack.pop();\n                      return result;\n                    }\n                  };\n\n                  // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n                  exports.stringify = function (source, filter, width) {\n                    var whitespace, callback, properties, className;\n                    if (objectTypes[typeof filter] && filter) {\n                      if ((className = getClass.call(filter)) == functionClass) {\n                        callback = filter;\n                      } else if (className == arrayClass) {\n                        // Convert the property names array into a makeshift set.\n                        properties = {};\n                        for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1));\n                      }\n                    }\n                    if (width) {\n                      if ((className = getClass.call(width)) == numberClass) {\n                        // Convert the `width` to an integer and create a string containing\n                        // `width` number of space characters.\n                        if ((width -= width % 1) > 0) {\n                          for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n                        }\n                      } else if (className == stringClass) {\n                        whitespace = width.length <= 10 ? width : width.slice(0, 10);\n                      }\n                    }\n                    // Opera <= 7.54u2 discards the values associated with empty string keys\n                    // (`\"\"`) only if they are used directly within an object member list\n                    // (e.g., `!(\"\" in { \"\": 1})`).\n                    return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n                  };\n                }\n\n                // Public: Parses a JSON source string.\n                if (!has(\"json-parse\")) {\n                  var fromCharCode = String.fromCharCode;\n\n                  // Internal: A map of escaped control characters and their unescaped\n                  // equivalents.\n                  var Unescapes = {\n                    92: \"\\\\\",\n                    34: '\"',\n                    47: \"/\",\n                    98: \"\\b\",\n                    116: \"\\t\",\n                    110: \"\\n\",\n                    102: \"\\f\",\n                    114: \"\\r\"\n                  };\n\n                  // Internal: Stores the parser state.\n                  var Index, Source;\n\n                  // Internal: Resets the parser state and throws a `SyntaxError`.\n                  var abort = function abort() {\n                    Index = Source = null;\n                    throw SyntaxError();\n                  };\n\n                  // Internal: Returns the next token, or `\"$\"` if the parser has reached\n                  // the end of the source string. A token may be a string, number, `null`\n                  // literal, or Boolean literal.\n                  var lex = function lex() {\n                    var source = Source,\n                        length = source.length,\n                        value,\n                        begin,\n                        position,\n                        isSigned,\n                        charCode;\n                    while (Index < length) {\n                      charCode = source.charCodeAt(Index);\n                      switch (charCode) {\n                        case 9:case 10:case 13:case 32:\n                          // Skip whitespace tokens, including tabs, carriage returns, line\n                          // feeds, and space characters.\n                          Index++;\n                          break;\n                        case 123:case 125:case 91:case 93:case 58:case 44:\n                          // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                          // the current position.\n                          value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                          Index++;\n                          return value;\n                        case 34:\n                          // `\"` delimits a JSON string; advance to the next character and\n                          // begin parsing the string. String tokens are prefixed with the\n                          // sentinel `@` character to distinguish them from punctuators and\n                          // end-of-string tokens.\n                          for (value = \"@\", Index++; Index < length;) {\n                            charCode = source.charCodeAt(Index);\n                            if (charCode < 32) {\n                              // Unescaped ASCII control characters (those with a code unit\n                              // less than the space character) are not permitted.\n                              abort();\n                            } else if (charCode == 92) {\n                              // A reverse solidus (`\\`) marks the beginning of an escaped\n                              // control character (including `\"`, `\\`, and `/`) or Unicode\n                              // escape sequence.\n                              charCode = source.charCodeAt(++Index);\n                              switch (charCode) {\n                                case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\n                                  // Revive escaped control characters.\n                                  value += Unescapes[charCode];\n                                  Index++;\n                                  break;\n                                case 117:\n                                  // `\\u` marks the beginning of a Unicode escape sequence.\n                                  // Advance to the first character and validate the\n                                  // four-digit code point.\n                                  begin = ++Index;\n                                  for (position = Index + 4; Index < position; Index++) {\n                                    charCode = source.charCodeAt(Index);\n                                    // A valid sequence comprises four hexdigits (case-\n                                    // insensitive) that form a single hexadecimal value.\n                                    if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                                      // Invalid Unicode escape sequence.\n                                      abort();\n                                    }\n                                  }\n                                  // Revive the escaped character.\n                                  value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                                  break;\n                                default:\n                                  // Invalid escape sequence.\n                                  abort();\n                              }\n                            } else {\n                              if (charCode == 34) {\n                                // An unescaped double-quote character marks the end of the\n                                // string.\n                                break;\n                              }\n                              charCode = source.charCodeAt(Index);\n                              begin = Index;\n                              // Optimize for the common case where a string is valid.\n                              while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                                charCode = source.charCodeAt(++Index);\n                              }\n                              // Append the string as-is.\n                              value += source.slice(begin, Index);\n                            }\n                          }\n                          if (source.charCodeAt(Index) == 34) {\n                            // Advance to the next character and return the revived string.\n                            Index++;\n                            return value;\n                          }\n                          // Unterminated string.\n                          abort();\n                        default:\n                          // Parse numbers and literals.\n                          begin = Index;\n                          // Advance past the negative sign, if one is specified.\n                          if (charCode == 45) {\n                            isSigned = true;\n                            charCode = source.charCodeAt(++Index);\n                          }\n                          // Parse an integer or floating-point value.\n                          if (charCode >= 48 && charCode <= 57) {\n                            // Leading zeroes are interpreted as octal literals.\n                            if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                              // Illegal octal literal.\n                              abort();\n                            }\n                            isSigned = false;\n                            // Parse the integer component.\n                            for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++);\n                            // Floats cannot contain a leading decimal point; however, this\n                            // case is already accounted for by the parser.\n                            if (source.charCodeAt(Index) == 46) {\n                              position = ++Index;\n                              // Parse the decimal component.\n                              for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal trailing decimal.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Parse exponents. The `e` denoting the exponent is\n                            // case-insensitive.\n                            charCode = source.charCodeAt(Index);\n                            if (charCode == 101 || charCode == 69) {\n                              charCode = source.charCodeAt(++Index);\n                              // Skip past the sign following the exponent, if one is\n                              // specified.\n                              if (charCode == 43 || charCode == 45) {\n                                Index++;\n                              }\n                              // Parse the exponential component.\n                              for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal empty exponent.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Coerce the parsed value to a JavaScript number.\n                            return +source.slice(begin, Index);\n                          }\n                          // A negative sign may only precede numbers.\n                          if (isSigned) {\n                            abort();\n                          }\n                          // `true`, `false`, and `null` literals.\n                          if (source.slice(Index, Index + 4) == \"true\") {\n                            Index += 4;\n                            return true;\n                          } else if (source.slice(Index, Index + 5) == \"false\") {\n                            Index += 5;\n                            return false;\n                          } else if (source.slice(Index, Index + 4) == \"null\") {\n                            Index += 4;\n                            return null;\n                          }\n                          // Unrecognized token.\n                          abort();\n                      }\n                    }\n                    // Return the sentinel `$` character if the parser has reached the end\n                    // of the source string.\n                    return \"$\";\n                  };\n\n                  // Internal: Parses a JSON `value` token.\n                  var get = function get(value) {\n                    var results, hasMembers;\n                    if (value == \"$\") {\n                      // Unexpected end of input.\n                      abort();\n                    }\n                    if (typeof value == \"string\") {\n                      if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n                        // Remove the sentinel `@` character.\n                        return value.slice(1);\n                      }\n                      // Parse object and array literals.\n                      if (value == \"[\") {\n                        // Parses a JSON array, returning a new JavaScript array.\n                        results = [];\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing square bracket marks the end of the array literal.\n                          if (value == \"]\") {\n                            break;\n                          }\n                          // If the array literal contains elements, the current token\n                          // should be a comma separating the previous element from the\n                          // next.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"]\") {\n                                // Unexpected trailing `,` in array literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each array element.\n                              abort();\n                            }\n                          }\n                          // Elisions and leading commas are not permitted.\n                          if (value == \",\") {\n                            abort();\n                          }\n                          results.push(get(value));\n                        }\n                        return results;\n                      } else if (value == \"{\") {\n                        // Parses a JSON object, returning a new JavaScript object.\n                        results = {};\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing curly brace marks the end of the object literal.\n                          if (value == \"}\") {\n                            break;\n                          }\n                          // If the object literal contains members, the current token\n                          // should be a comma separator.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"}\") {\n                                // Unexpected trailing `,` in object literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each object member.\n                              abort();\n                            }\n                          }\n                          // Leading commas are not permitted, object property names must be\n                          // double-quoted strings, and a `:` must separate each property\n                          // name and value.\n                          if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                            abort();\n                          }\n                          results[value.slice(1)] = get(lex());\n                        }\n                        return results;\n                      }\n                      // Unexpected token encountered.\n                      abort();\n                    }\n                    return value;\n                  };\n\n                  // Internal: Updates a traversed object member.\n                  var update = function update(source, property, callback) {\n                    var element = walk(source, property, callback);\n                    if (element === undef) {\n                      delete source[property];\n                    } else {\n                      source[property] = element;\n                    }\n                  };\n\n                  // Internal: Recursively traverses a parsed JSON object, invoking the\n                  // `callback` function for each value. This is an implementation of the\n                  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n                  var walk = function walk(source, property, callback) {\n                    var value = source[property],\n                        length;\n                    if (typeof value == \"object\" && value) {\n                      // `forEach` can't be used to traverse an array in Opera <= 8.54\n                      // because its `Object#hasOwnProperty` implementation returns `false`\n                      // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n                      if (getClass.call(value) == arrayClass) {\n                        for (length = value.length; length--;) {\n                          update(value, length, callback);\n                        }\n                      } else {\n                        forEach(value, function (property) {\n                          update(value, property, callback);\n                        });\n                      }\n                    }\n                    return callback.call(source, property, value);\n                  };\n\n                  // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n                  exports.parse = function (source, callback) {\n                    var result, value;\n                    Index = 0;\n                    Source = \"\" + source;\n                    result = get(lex());\n                    // If a JSON string contains multiple tokens, it is invalid.\n                    if (lex() != \"$\") {\n                      abort();\n                    }\n                    // Reset the parser state.\n                    Index = Source = null;\n                    return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n                  };\n                }\n              }\n\n              exports[\"runInContext\"] = runInContext;\n              return exports;\n            }\n\n            if (freeExports && !isLoader) {\n              // Export for CommonJS environments.\n              runInContext(root, freeExports);\n            } else {\n              // Export for web browsers and JavaScript engines.\n              var nativeJSON = root.JSON,\n                  previousJSON = root[\"JSON3\"],\n                  isRestored = false;\n\n              var JSON3 = runInContext(root, root[\"JSON3\"] = {\n                // Public: Restores the original value of the global `JSON` object and\n                // returns a reference to the `JSON3` object.\n                \"noConflict\": function noConflict() {\n                  if (!isRestored) {\n                    isRestored = true;\n                    root.JSON = nativeJSON;\n                    root[\"JSON3\"] = previousJSON;\n                    nativeJSON = previousJSON = null;\n                  }\n                  return JSON3;\n                }\n              });\n\n              root.JSON = {\n                \"parse\": JSON3.parse,\n                \"stringify\": JSON3.stringify\n              };\n            }\n\n            // Export for asynchronous module loaders.\n            if (isLoader) {\n              define(function () {\n                return JSON3;\n              });\n            }\n          }).call(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 35: [function (_dereq_, module, exports) {\n        /**\n         * Helpers.\n         */\n\n        var s = 1000;\n        var m = s * 60;\n        var h = m * 60;\n        var d = h * 24;\n        var y = d * 365.25;\n\n        /**\n         * Parse or format the given `val`.\n         *\n         * Options:\n         *\n         *  - `long` verbose formatting [false]\n         *\n         * @param {String|Number} val\n         * @param {Object} options\n         * @return {String|Number}\n         * @api public\n         */\n\n        module.exports = function (val, options) {\n          options = options || {};\n          if ('string' == typeof val) return parse(val);\n          return options.long ? long(val) : short(val);\n        };\n\n        /**\n         * Parse the given `str` and return milliseconds.\n         *\n         * @param {String} str\n         * @return {Number}\n         * @api private\n         */\n\n        function parse(str) {\n          str = '' + str;\n          if (str.length > 10000) return;\n          var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n          if (!match) return;\n          var n = parseFloat(match[1]);\n          var type = (match[2] || 'ms').toLowerCase();\n          switch (type) {\n            case 'years':\n            case 'year':\n            case 'yrs':\n            case 'yr':\n            case 'y':\n              return n * y;\n            case 'days':\n            case 'day':\n            case 'd':\n              return n * d;\n            case 'hours':\n            case 'hour':\n            case 'hrs':\n            case 'hr':\n            case 'h':\n              return n * h;\n            case 'minutes':\n            case 'minute':\n            case 'mins':\n            case 'min':\n            case 'm':\n              return n * m;\n            case 'seconds':\n            case 'second':\n            case 'secs':\n            case 'sec':\n            case 's':\n              return n * s;\n            case 'milliseconds':\n            case 'millisecond':\n            case 'msecs':\n            case 'msec':\n            case 'ms':\n              return n;\n          }\n        }\n\n        /**\n         * Short format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function short(ms) {\n          if (ms >= d) return Math.round(ms / d) + 'd';\n          if (ms >= h) return Math.round(ms / h) + 'h';\n          if (ms >= m) return Math.round(ms / m) + 'm';\n          if (ms >= s) return Math.round(ms / s) + 's';\n          return ms + 'ms';\n        }\n\n        /**\n         * Long format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function long(ms) {\n          return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n        }\n\n        /**\n         * Pluralization helper.\n         */\n\n        function plural(ms, n, name) {\n          if (ms < n) return;\n          if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n          return Math.ceil(ms / n) + ' ' + name + 's';\n        }\n      }, {}], 36: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * JSON parse.\n           *\n           * @see Based on jQuery#parseJSON (MIT) and JSON2\n           * @api private\n           */\n\n          var rvalidchars = /^[\\],:{}\\s]*$/;\n          var rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n          var rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n          var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n          var rtrimLeft = /^\\s+/;\n          var rtrimRight = /\\s+$/;\n\n          module.exports = function parsejson(data) {\n            if ('string' != typeof data || !data) {\n              return null;\n            }\n\n            data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n            // Attempt to parse using the native JSON parser first\n            if (global.JSON && JSON.parse) {\n              return JSON.parse(data);\n            }\n\n            if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n              return new Function('return ' + data)();\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 37: [function (_dereq_, module, exports) {\n        /**\n         * Compiles a querystring\n         * Returns string representation of the object\n         *\n         * @param {Object}\n         * @api private\n         */\n\n        exports.encode = function (obj) {\n          var str = '';\n\n          for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n              if (str.length) str += '&';\n              str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n            }\n          }\n\n          return str;\n        };\n\n        /**\n         * Parses a simple querystring into an object\n         *\n         * @param {String} qs\n         * @api private\n         */\n\n        exports.decode = function (qs) {\n          var qry = {};\n          var pairs = qs.split('&');\n          for (var i = 0, l = pairs.length; i < l; i++) {\n            var pair = pairs[i].split('=');\n            qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n          }\n          return qry;\n        };\n      }, {}], 38: [function (_dereq_, module, exports) {\n        /**\n         * Parses an URI\n         *\n         * @author Steven Levithan <stevenlevithan.com> (MIT license)\n         * @api private\n         */\n\n        var re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n        var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\n        module.exports = function parseuri(str) {\n          var src = str,\n              b = str.indexOf('['),\n              e = str.indexOf(']');\n\n          if (b != -1 && e != -1) {\n            str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n          }\n\n          var m = re.exec(str || ''),\n              uri = {},\n              i = 14;\n\n          while (i--) {\n            uri[parts[i]] = m[i] || '';\n          }\n\n          if (b != -1 && e != -1) {\n            uri.source = src;\n            uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n            uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n            uri.ipv6uri = true;\n          }\n\n          return uri;\n        };\n      }, {}], 39: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*global Blob,File*/\n\n          /**\n           * Module requirements\n           */\n\n          var isArray = _dereq_('isarray');\n          var isBuf = _dereq_('./is-buffer');\n\n          /**\n           * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n           * Anything with blobs or files should be fed through removeBlobs before coming\n           * here.\n           *\n           * @param {Object} packet - socket.io event packet\n           * @return {Object} with deconstructed packet and list of buffers\n           * @api public\n           */\n\n          exports.deconstructPacket = function (packet) {\n            var buffers = [];\n            var packetData = packet.data;\n\n            function _deconstructPacket(data) {\n              if (!data) return data;\n\n              if (isBuf(data)) {\n                var placeholder = { _placeholder: true, num: buffers.length };\n                buffers.push(data);\n                return placeholder;\n              } else if (isArray(data)) {\n                var newData = new Array(data.length);\n                for (var i = 0; i < data.length; i++) {\n                  newData[i] = _deconstructPacket(data[i]);\n                }\n                return newData;\n              } else if ('object' == typeof data && !(data instanceof Date)) {\n                var newData = {};\n                for (var key in data) {\n                  newData[key] = _deconstructPacket(data[key]);\n                }\n                return newData;\n              }\n              return data;\n            }\n\n            var pack = packet;\n            pack.data = _deconstructPacket(packetData);\n            pack.attachments = buffers.length; // number of binary 'attachments'\n            return { packet: pack, buffers: buffers };\n          };\n\n          /**\n           * Reconstructs a binary packet from its placeholder packet and buffers\n           *\n           * @param {Object} packet - event packet with placeholders\n           * @param {Array} buffers - binary buffers to put in placeholder positions\n           * @return {Object} reconstructed packet\n           * @api public\n           */\n\n          exports.reconstructPacket = function (packet, buffers) {\n            var curPlaceHolder = 0;\n\n            function _reconstructPacket(data) {\n              if (data && data._placeholder) {\n                var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n                return buf;\n              } else if (isArray(data)) {\n                for (var i = 0; i < data.length; i++) {\n                  data[i] = _reconstructPacket(data[i]);\n                }\n                return data;\n              } else if (data && 'object' == typeof data) {\n                for (var key in data) {\n                  data[key] = _reconstructPacket(data[key]);\n                }\n                return data;\n              }\n              return data;\n            }\n\n            packet.data = _reconstructPacket(packet.data);\n            packet.attachments = undefined; // no longer useful\n            return packet;\n          };\n\n          /**\n           * Asynchronously removes Blobs or Files from data via\n           * FileReader's readAsArrayBuffer method. Used before encoding\n           * data as msgpack. Calls callback with the blobless data.\n           *\n           * @param {Object} data\n           * @param {Function} callback\n           * @api private\n           */\n\n          exports.removeBlobs = function (data, callback) {\n            function _removeBlobs(obj, curKey, containingObject) {\n              if (!obj) return obj;\n\n              // convert any blob\n              if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                pendingBlobs++;\n\n                // async filereader\n                var fileReader = new FileReader();\n                fileReader.onload = function () {\n                  // this.result == arraybuffer\n                  if (containingObject) {\n                    containingObject[curKey] = this.result;\n                  } else {\n                    bloblessData = this.result;\n                  }\n\n                  // if nothing pending its callback time\n                  if (! --pendingBlobs) {\n                    callback(bloblessData);\n                  }\n                };\n\n                fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n              } else if (isArray(obj)) {\n                  // handle array\n                  for (var i = 0; i < obj.length; i++) {\n                    _removeBlobs(obj[i], i, obj);\n                  }\n                } else if (obj && 'object' == typeof obj && !isBuf(obj)) {\n                  // and object\n                  for (var key in obj) {\n                    _removeBlobs(obj[key], key, obj);\n                  }\n                }\n            }\n\n            var pendingBlobs = 0;\n            var bloblessData = data;\n            _removeBlobs(bloblessData);\n            if (!pendingBlobs) {\n              callback(bloblessData);\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./is-buffer\": 41, \"isarray\": 33 }], 40: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var debug = _dereq_('debug')('socket.io-parser');\n        var json = _dereq_('json3');\n        var isArray = _dereq_('isarray');\n        var Emitter = _dereq_('component-emitter');\n        var binary = _dereq_('./binary');\n        var isBuf = _dereq_('./is-buffer');\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = 4;\n\n        /**\n         * Packet types.\n         *\n         * @api public\n         */\n\n        exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n\n        /**\n         * Packet type `connect`.\n         *\n         * @api public\n         */\n\n        exports.CONNECT = 0;\n\n        /**\n         * Packet type `disconnect`.\n         *\n         * @api public\n         */\n\n        exports.DISCONNECT = 1;\n\n        /**\n         * Packet type `event`.\n         *\n         * @api public\n         */\n\n        exports.EVENT = 2;\n\n        /**\n         * Packet type `ack`.\n         *\n         * @api public\n         */\n\n        exports.ACK = 3;\n\n        /**\n         * Packet type `error`.\n         *\n         * @api public\n         */\n\n        exports.ERROR = 4;\n\n        /**\n         * Packet type 'binary event'\n         *\n         * @api public\n         */\n\n        exports.BINARY_EVENT = 5;\n\n        /**\n         * Packet type `binary ack`. For acks with binary arguments.\n         *\n         * @api public\n         */\n\n        exports.BINARY_ACK = 6;\n\n        /**\n         * Encoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Encoder = Encoder;\n\n        /**\n         * Decoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Decoder = Decoder;\n\n        /**\n         * A socket.io Encoder instance\n         *\n         * @api public\n         */\n\n        function Encoder() {}\n\n        /**\n         * Encode a packet as a single string if non-binary, or as a\n         * buffer sequence, depending on packet type.\n         *\n         * @param {Object} obj - packet object\n         * @param {Function} callback - function to handle encodings (likely engine.write)\n         * @return Calls callback with Array of encodings\n         * @api public\n         */\n\n        Encoder.prototype.encode = function (obj, callback) {\n          debug('encoding packet %j', obj);\n\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            encodeAsBinary(obj, callback);\n          } else {\n            var encoding = encodeAsString(obj);\n            callback([encoding]);\n          }\n        };\n\n        /**\n         * Encode packet as string.\n         *\n         * @param {Object} packet\n         * @return {String} encoded\n         * @api private\n         */\n\n        function encodeAsString(obj) {\n          var str = '';\n          var nsp = false;\n\n          // first is type\n          str += obj.type;\n\n          // attachments if we have them\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            str += obj.attachments;\n            str += '-';\n          }\n\n          // if we have a namespace other than `/`\n          // we append it followed by a comma `,`\n          if (obj.nsp && '/' != obj.nsp) {\n            nsp = true;\n            str += obj.nsp;\n          }\n\n          // immediately followed by the id\n          if (null != obj.id) {\n            if (nsp) {\n              str += ',';\n              nsp = false;\n            }\n            str += obj.id;\n          }\n\n          // json data\n          if (null != obj.data) {\n            if (nsp) str += ',';\n            str += json.stringify(obj.data);\n          }\n\n          debug('encoded %j as %s', obj, str);\n          return str;\n        }\n\n        /**\n         * Encode packet as 'buffer sequence' by removing blobs, and\n         * deconstructing packet into object with placeholders and\n         * a list of buffers.\n         *\n         * @param {Object} packet\n         * @return {Buffer} encoded\n         * @api private\n         */\n\n        function encodeAsBinary(obj, callback) {\n\n          function writeEncoding(bloblessData) {\n            var deconstruction = binary.deconstructPacket(bloblessData);\n            var pack = encodeAsString(deconstruction.packet);\n            var buffers = deconstruction.buffers;\n\n            buffers.unshift(pack); // add packet info to beginning of data list\n            callback(buffers); // write all the buffers\n          }\n\n          binary.removeBlobs(obj, writeEncoding);\n        }\n\n        /**\n         * A socket.io Decoder instance\n         *\n         * @return {Object} decoder\n         * @api public\n         */\n\n        function Decoder() {\n          this.reconstructor = null;\n        }\n\n        /**\n         * Mix in `Emitter` with Decoder.\n         */\n\n        Emitter(Decoder.prototype);\n\n        /**\n         * Decodes an ecoded packet string into packet JSON.\n         *\n         * @param {String} obj - encoded packet\n         * @return {Object} packet\n         * @api public\n         */\n\n        Decoder.prototype.add = function (obj) {\n          var packet;\n          if ('string' == typeof obj) {\n            packet = decodeString(obj);\n            if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {\n              // binary packet's json\n              this.reconstructor = new BinaryReconstructor(packet);\n\n              // no attachments, labeled binary but no binary data to follow\n              if (this.reconstructor.reconPack.attachments === 0) {\n                this.emit('decoded', packet);\n              }\n            } else {\n              // non-binary full packet\n              this.emit('decoded', packet);\n            }\n          } else if (isBuf(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n              throw new Error('got binary data when not reconstructing a packet');\n            } else {\n              packet = this.reconstructor.takeBinaryData(obj);\n              if (packet) {\n                // received final buffer\n                this.reconstructor = null;\n                this.emit('decoded', packet);\n              }\n            }\n          } else {\n            throw new Error('Unknown type: ' + obj);\n          }\n        };\n\n        /**\n         * Decode a packet String (JSON data)\n         *\n         * @param {String} str\n         * @return {Object} packet\n         * @api private\n         */\n\n        function decodeString(str) {\n          var p = {};\n          var i = 0;\n\n          // look up type\n          p.type = Number(str.charAt(0));\n          if (null == exports.types[p.type]) return error();\n\n          // look up attachments if type binary\n          if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n            var buf = '';\n            while (str.charAt(++i) != '-') {\n              buf += str.charAt(i);\n              if (i == str.length) break;\n            }\n            if (buf != Number(buf) || str.charAt(i) != '-') {\n              throw new Error('Illegal attachments');\n            }\n            p.attachments = Number(buf);\n          }\n\n          // look up namespace (if any)\n          if ('/' == str.charAt(i + 1)) {\n            p.nsp = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (',' == c) break;\n              p.nsp += c;\n              if (i == str.length) break;\n            }\n          } else {\n            p.nsp = '/';\n          }\n\n          // look up id\n          var next = str.charAt(i + 1);\n          if ('' !== next && Number(next) == next) {\n            p.id = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (null == c || Number(c) != c) {\n                --i;\n                break;\n              }\n              p.id += str.charAt(i);\n              if (i == str.length) break;\n            }\n            p.id = Number(p.id);\n          }\n\n          // look up json data\n          if (str.charAt(++i)) {\n            try {\n              p.data = json.parse(str.substr(i));\n            } catch (e) {\n              return error();\n            }\n          }\n\n          debug('decoded %s as %j', str, p);\n          return p;\n        }\n\n        /**\n         * Deallocates a parser's resources\n         *\n         * @api public\n         */\n\n        Decoder.prototype.destroy = function () {\n          if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n          }\n        };\n\n        /**\n         * A manager of a binary event's 'buffer sequence'. Should\n         * be constructed whenever a packet of type BINARY_EVENT is\n         * decoded.\n         *\n         * @param {Object} packet\n         * @return {BinaryReconstructor} initialized reconstructor\n         * @api private\n         */\n\n        function BinaryReconstructor(packet) {\n          this.reconPack = packet;\n          this.buffers = [];\n        }\n\n        /**\n         * Method to be called when binary data received from connection\n         * after a BINARY_EVENT packet.\n         *\n         * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n         * @return {null | Object} returns null if more binary data is expected or\n         *   a reconstructed packet object if all buffers have been received.\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.takeBinaryData = function (binData) {\n          this.buffers.push(binData);\n          if (this.buffers.length == this.reconPack.attachments) {\n            // done with buffer list\n            var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n          }\n          return null;\n        };\n\n        /**\n         * Cleans up binary packet reconstruction variables.\n         *\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.finishedReconstruction = function () {\n          this.reconPack = null;\n          this.buffers = [];\n        };\n\n        function error(data) {\n          return {\n            type: exports.ERROR,\n            data: 'parser error'\n          };\n        }\n      }, { \"./binary\": 39, \"./is-buffer\": 41, \"component-emitter\": 42, \"debug\": 14, \"isarray\": 33, \"json3\": 34 }], 41: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          module.exports = isBuf;\n\n          /**\n           * Returns true if obj is a buffer or an arraybuffer.\n           *\n           * @api private\n           */\n\n          function isBuf(obj) {\n            return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 42: [function (_dereq_, module, exports) {\n        arguments[4][26][0].apply(exports, arguments);\n      }, { \"dup\": 26 }], 43: [function (_dereq_, module, exports) {\n        module.exports = toArray;\n\n        function toArray(list, index) {\n          var array = [];\n\n          index = index || 0;\n\n          for (var i = index || 0; i < list.length; i++) {\n            array[i - index] = list[i];\n          }\n\n          return array;\n        }\n      }, {}], 44: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! https://mths.be/utf8js v2.0.0 by @mathias */\n          ;(function (root) {\n\n            // Detect free variables `exports`\n            var freeExports = typeof exports == 'object' && exports;\n\n            // Detect free variable `module`\n            var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n            // Detect free variable `global`, from Node.js or Browserified code,\n            // and use it as `root`\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n              root = freeGlobal;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var stringFromCharCode = String.fromCharCode;\n\n            // Taken from https://mths.be/punycode\n            function ucs2decode(string) {\n              var output = [];\n              var counter = 0;\n              var length = string.length;\n              var value;\n              var extra;\n              while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                  // high surrogate, and there is a next character\n                  extra = string.charCodeAt(counter++);\n                  if ((extra & 0xFC00) == 0xDC00) {\n                    // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                  } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                  }\n                } else {\n                  output.push(value);\n                }\n              }\n              return output;\n            }\n\n            // Taken from https://mths.be/punycode\n            function ucs2encode(array) {\n              var length = array.length;\n              var index = -1;\n              var value;\n              var output = '';\n              while (++index < length) {\n                value = array[index];\n                if (value > 0xFFFF) {\n                  value -= 0x10000;\n                  output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                  value = 0xDC00 | value & 0x3FF;\n                }\n                output += stringFromCharCode(value);\n              }\n              return output;\n            }\n\n            function checkScalarValue(codePoint) {\n              if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n                throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n              }\n            }\n            /*--------------------------------------------------------------------------*/\n\n            function createByte(codePoint, shift) {\n              return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n            }\n\n            function encodeCodePoint(codePoint) {\n              if ((codePoint & 0xFFFFFF80) == 0) {\n                // 1-byte sequence\n                return stringFromCharCode(codePoint);\n              }\n              var symbol = '';\n              if ((codePoint & 0xFFFFF800) == 0) {\n                // 2-byte sequence\n                symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n              } else if ((codePoint & 0xFFFF0000) == 0) {\n                // 3-byte sequence\n                checkScalarValue(codePoint);\n                symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n                symbol += createByte(codePoint, 6);\n              } else if ((codePoint & 0xFFE00000) == 0) {\n                // 4-byte sequence\n                symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n                symbol += createByte(codePoint, 12);\n                symbol += createByte(codePoint, 6);\n              }\n              symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n              return symbol;\n            }\n\n            function utf8encode(string) {\n              var codePoints = ucs2decode(string);\n              var length = codePoints.length;\n              var index = -1;\n              var codePoint;\n              var byteString = '';\n              while (++index < length) {\n                codePoint = codePoints[index];\n                byteString += encodeCodePoint(codePoint);\n              }\n              return byteString;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            function readContinuationByte() {\n              if (byteIndex >= byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              var continuationByte = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              if ((continuationByte & 0xC0) == 0x80) {\n                return continuationByte & 0x3F;\n              }\n\n              // If we end up here, it’s not a continuation byte\n              throw Error('Invalid continuation byte');\n            }\n\n            function decodeSymbol() {\n              var byte1;\n              var byte2;\n              var byte3;\n              var byte4;\n              var codePoint;\n\n              if (byteIndex > byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              if (byteIndex == byteCount) {\n                return false;\n              }\n\n              // Read first byte\n              byte1 = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              // 1-byte sequence (no continuation bytes)\n              if ((byte1 & 0x80) == 0) {\n                return byte1;\n              }\n\n              // 2-byte sequence\n              if ((byte1 & 0xE0) == 0xC0) {\n                var byte2 = readContinuationByte();\n                codePoint = (byte1 & 0x1F) << 6 | byte2;\n                if (codePoint >= 0x80) {\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 3-byte sequence (may include unpaired surrogates)\n              if ((byte1 & 0xF0) == 0xE0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n                if (codePoint >= 0x0800) {\n                  checkScalarValue(codePoint);\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 4-byte sequence\n              if ((byte1 & 0xF8) == 0xF0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                byte4 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n                if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n                  return codePoint;\n                }\n              }\n\n              throw Error('Invalid UTF-8 detected');\n            }\n\n            var byteArray;\n            var byteCount;\n            var byteIndex;\n            function utf8decode(byteString) {\n              byteArray = ucs2decode(byteString);\n              byteCount = byteArray.length;\n              byteIndex = 0;\n              var codePoints = [];\n              var tmp;\n              while ((tmp = decodeSymbol()) !== false) {\n                codePoints.push(tmp);\n              }\n              return ucs2encode(codePoints);\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var utf8 = {\n              'version': '2.0.0',\n              'encode': utf8encode,\n              'decode': utf8decode\n            };\n\n            // Some AMD build optimizers, like r.js, check for specific condition patterns\n            // like the following:\n            if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n              define(function () {\n                return utf8;\n              });\n            } else if (freeExports && !freeExports.nodeType) {\n              if (freeModule) {\n                // in Node.js or RingoJS v0.8.0+\n                freeModule.exports = utf8;\n              } else {\n                // in Narwhal or RingoJS v0.7.0-\n                var object = {};\n                var hasOwnProperty = object.hasOwnProperty;\n                for (var key in utf8) {\n                  hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n                }\n              }\n            } else {\n              // in Rhino or a web browser\n              root.utf8 = utf8;\n            }\n          })(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 45: [function (_dereq_, module, exports) {\n        'use strict';\n\n        var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n            length = 64,\n            map = {},\n            seed = 0,\n            i = 0,\n            prev;\n\n        /**\n         * Return a string representing the specified number.\n         *\n         * @param {Number} num The number to convert.\n         * @returns {String} The string representation of the number.\n         * @api public\n         */\n        function encode(num) {\n          var encoded = '';\n\n          do {\n            encoded = alphabet[num % length] + encoded;\n            num = Math.floor(num / length);\n          } while (num > 0);\n\n          return encoded;\n        }\n\n        /**\n         * Return the integer value specified by the given string.\n         *\n         * @param {String} str The string to convert.\n         * @returns {Number} The integer value represented by the string.\n         * @api public\n         */\n        function decode(str) {\n          var decoded = 0;\n\n          for (i = 0; i < str.length; i++) {\n            decoded = decoded * length + map[str.charAt(i)];\n          }\n\n          return decoded;\n        }\n\n        /**\n         * Yeast: A tiny growing id generator.\n         *\n         * @returns {String} A unique id.\n         * @api public\n         */\n        function yeast() {\n          var now = encode(+new Date());\n\n          if (now !== prev) return seed = 0, prev = now;\n          return now + '.' + encode(seed++);\n        }\n\n        //\n        // Map each character to its index.\n        //\n        for (; i < length; i++) map[alphabet[i]] = i;\n\n        //\n        // Expose the `yeast`, `encode` and `decode` functions.\n        //\n        yeast.encode = encode;\n        yeast.decode = decode;\n        module.exports = yeast;\n      }, {}] }, {}, [1])(1);\n  });\n}\n\ncc._RFpop();\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],\"string-format.js\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '708e5HzkuhMPpWIbCOFS54R', 'string-format.js');\n// scripts/libs/string-format.js.js\n\n/**\n * 扩展了 String 类型，给其添加格式化的功能，替换字符串中 {placeholder} 或者 {0}, {1} 等模式部分为参数中传入的字符串\n * 使用方法:\n *     'I can speak {language} since I was {age}'.format({language: 'Javascript', age: 10})\n *     'I can speak {0} since I was {1}'.format('Javascript', 10)\n * 输出都为:\n *     I can speak Javascript since I was 10\n *\n * @param replacements 用来替换 placeholder 的 JSON 对象或者数组\n */\nString.prototype.format = function (replacements) {\n    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 0);\n    return formatString(this, replacements);\n};\n\n/**\n * 替换字符串中 {placeholder} 或者 {0}, {1} 等模式部分为参数中传入的字符串\n * 使用方法:\n *     formatString('I can speak {language} since I was {age}', {language: 'Javascript', age: 10})\n *     formatString('I can speak {0} since I was {1}', 'Javascript', 10)\n * 输出都为:\n *     I can speak Javascript since I was 10\n *\n * @param str 带有 placeholder 的字符串\n * @param replacements 用来替换 placeholder 的 JSON 对象或者数组\n */\nvar formatString = function formatString(str, replacements) {\n    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 1);\n\n    return str.replace(/\\{\\{|\\}\\}|\\{(\\w+)\\}/g, function (m, n) {\n        if (m == '{{') {\n            return '{';\n        }\n        if (m == '}}') {\n            return '}';\n        }\n        return replacements[n];\n    });\n};\n\ncc._RFpop();\n},{}]},{},[\"DataProcess\",\"WSocket2\",\"string-format.js\",\"ProgressBar\",\"MainScene\",\"Global\",\"socket-io\",\"Helpers\",\"EventDispatcher\"])\n\n","\"use strict\";\ncc._RFpush(module, 'f827drJqeVB8oHQCSIt/Ff3', 'EventDispatcher');\n// scripts/utils/EventDispatcher.js\n\n/**\n * Created by apple on 16/8/3.\n */\n\nvar EventDispatcher = function EventDispatcher() {\n    this.listenersByEvent = {};\n    this.onceListenersByEvent = {};\n};\n\n//添加事件侦听器\nEventDispatcher.prototype.addEventListener = function (event, listener, listenerContext) {\n    null == this.listenersByEvent[event] && (this.listenersByEvent[event] = []);\n    this.listenersByEvent[event].push({ listener: listener, scope: listenerContext });\n};\n\n//添加一次性侦听事件\nEventDispatcher.prototype.addOnceEventListener = function (event, listener, listenerContext) {\n    null == this.onceListenersByEvent[event] && (this.onceListenersByEvent[event] = []);\n    this.onceListenersByEvent[event].push({ listener: listener, scope: listenerContext });\n};\n\n//移除事件侦听器\nEventDispatcher.prototype.removeEventListener = function (event, listener) {\n    var c = this.listenersByEvent[event];\n\n    if (null != c) {\n        var len = c.length;\n        for (var d = 0; d < len; d++) if (c[d].listener === listener) {\n            c.splice(d, 1);\n            break;\n        }\n    }\n};\n\n//移除所有监听事件\nEventDispatcher.prototype.removeAllEventListener = function () {\n    this.listenersByEvent = null;\n    this.listenersByEvent = {};\n    this.onceListenersByEvent = null;\n    this.onceListenersByEvent = {};\n};\n\n//派发事件\nEventDispatcher.prototype.dispatchEvent = function (event, eventData) {\n    //持久事件\n    var c = this.listenersByEvent[event];\n    if (c && 0 < c.length) {\n        var len = c.length;\n        for (var d = 0; d < len; d++) {\n            c[d].listener.call(c[d].scope, eventData);\n        }\n    }\n    //一次性事件\n    var oc = this.onceListenersByEvent[event];\n    if (oc && 0 < oc.length) {\n        var olen = oc.length;\n        for (var od = 0; od < olen; od++) {\n            oc[od].listener.call(oc[od].scope, eventData);\n        }\n        oc.splice(0, olen);\n    }\n};\n//监听事件所有监听事件\nEventDispatcher.prototype.getListeners = function (event) {\n    return this.listenersByEvent[event];\n};\n\nmodule.exports = EventDispatcher;\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'ac038HfqLtPKZUX65Vgabav', 'Global');\n// scripts/Global.js\n\nvar _this = this;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _WSocket2 = require(\"WSocket2\");\n\nvar _WSocket22 = _interopRequireDefault(_WSocket2);\n\nvar _DataProcess = require(\"DataProcess\");\n\nvar _DataProcess2 = _interopRequireDefault(_DataProcess);\n\nwindow.Global = {\n        socketConnection: new _WSocket22[\"default\"](SOCKET_REMOTE_URL), //socket连接\n        // loginConnection:new WSocket(SOCKET_REMOTE_LOGIN), //socket连接\n        textSpeed: TEXT_SPEED_MID, //文本速度\n        // i18n:require('i18n'),           //多语言支持\n        dataProcess: null\n};\n\nGlobal.socketConnection.connect(function () {\n\n        Global.socketConnection.addListener(\"loginEvent\", _this, function (params) {\n                cc.log(\"登陆返回:\" + params);\n        });\n\n        Global.socketConnection.sendCommand(\"loginEvent\", {\n                openid: \"ooF7Hjs-Z1UiguyM4Q-O3vheRoBk\"\n        });\n\n        Global.dataProcess = new _DataProcess2[\"default\"](Global.socketConnection);\n        Global.dataProcess.init();\n});\n\ncc.log(\"Global loaded\");\n\n// Global.i18n.init('zh');// init 的参数就是语言标识，如 'zh', 'en' 等\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'ec5ccXiT0FLN6b4svuC5qn3', 'Helpers');\n// scripts/utils/Helpers.js\n\nif (CC_JSB && cc.runtime) {\n    // fix cocos-creator/fireball#3578\n    cc.LoaderLayer.setUseDefaultSource(false);\n    cc.Dialog.setUseDefaultSource(false);\n}\n\n// Returns a random integer between min (included) and max (excluded)\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction saveLocal(key, value) {\n    return cc.sys.localStorage.setItem(key, value);\n}\n\nfunction loadLocal(key) {\n    return cc.sys.localStorage.getItem(key);\n}\n\nmodule.exports = {\n    getRandomInt: getRandomInt,\n    saveLocal: saveLocal,\n    loadLocal: loadLocal\n};\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '9046bOIQExLpIIFnWL5HF3t', 'MainScene');\n// MainScene/script/MainScene.js\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _ProgressBar = require('ProgressBar');\n\nvar _ProgressBar2 = _interopRequireDefault(_ProgressBar);\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        animLayer: {\n            'default': null,\n            type: cc.Prefab\n        },\n\n        hungryBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        cleanBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        smartBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        activeBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        energyBar: {\n            'default': null,\n            type: cc.Node\n        },\n\n        happyBar: {\n            'default': null,\n            type: cc.Node\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.log('进入主页面');\n        this.init();\n\n        // Global.socketConnection.connect(()=>{\n        //     Global.socketConnection.sendCommand(\"loginEvent\",{\n        //         openid:\"ooF7Hjs-Z1UiguyM4Q-O3vheRoBk\"\n        //     })\n        //     cc.log('登陆请求已发送')\n\n        //     Global.socketConnection.addListener(\"loginEvent\",this,(params)=>{\n        //         cc.log(`登陆返回:${params}`)\n        //     })\n\n        // })\n    },\n\n    init: function init() {\n        cc.log(\"inininint\");\n        this.hungryBar.getComponent(\"ProgressBar\").init(1000, 400);\n        this.cleanBar.getComponent(\"ProgressBar\").init(1000, 200);\n        this.smartBar.getComponent(\"ProgressBar\").init(1000, 100);\n        this.activeBar.getComponent(\"ProgressBar\").init(1000, 245);\n        this.energyBar.getComponent(\"ProgressBar\").init(1000, 888);\n        this.happyBar.getComponent(\"ProgressBar\").init(1000, 982);\n        cc.log(\"inininintvvvvv\");\n    },\n\n    playAnim: function playAnim(animName) {\n        var _this = this;\n\n        cc.log('我进来了');\n        if (typeof this._animLayer == \"undefined\") {\n            this._animLayer = cc.instantiate(this.animLayer);\n        }\n        cc.log('动画' + this._animLayer);\n        var animCtrl = this._animLayer.getComponent(cc.Animation);\n        animCtrl.stop();\n        cc.log('动画控制器' + animCtrl);\n\n        animCtrl.on('stop', function () {\n            _this._animLayer.removeFromParent();\n        }, this);\n\n        animCtrl.on('play', function () {\n            cc.log('加载动画');\n            if (_this._animLayer.parent != _this.node) {\n                _this._animLayer.parent = _this.node;\n                cc.log('加载动画上了');\n            }\n        }, this);\n\n        cc.log('播放动画');\n        animCtrl.play(animName);\n    },\n\n    onFeedPressed: function onFeedPressed() {\n        this.playAnim('anim_heart');\n    },\n    onBathPressed: function onBathPressed() {\n        var _this2 = this;\n\n        Global.socketConnection.sendCommand(\"washEvent\", {\n            petInfoId: \"1\"\n        });\n        Global.socketConnection.addListener(\"washEvent\", this, function (data) {\n\n            _this2.playAnim('anim_bath');\n        }, null, true);\n    },\n    onActivityPressed: function onActivityPressed() {},\n    onSleepPressed: function onSleepPressed() {},\n    onInjectPressed: function onInjectPressed() {},\n    onShopPressed: function onShopPressed() {},\n    onAboutPressed: function onAboutPressed() {}\n\n});\n\n// Message Received：{\"code\":1000,\"data\":{\"active\":1000,\"clean\":978,\"createTime\":1472012216000,\"energy\":955,\"happy\":696,\"hunger\":1000,\"id\":1,\"modifyTime\":1472999672000,\"petInfoId\":1,\"smarts\":1000},\"msg\":\"洗澡更新状态值成功\"}\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '867d6EHvQFFcJWFkswONFIs', 'ProgressBar');\n// scripts/Widgets/ProgressBar.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n\n        frontLayer: {\n            'default': null,\n            type: cc.Sprite\n        },\n\n        progressBar: {\n            'default': null,\n            type: cc.Sprite\n        }\n\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        cc.log('创建进度条');\n    },\n\n    init: function init(maxValue, curValue) {\n        this.curValue = curValue ? curValue : 0;\n        this.maxValue = maxValue;\n        this.setValue(this.curValue);\n        cc.log('初始化完成');\n    },\n\n    setValue: function setValue(value) {\n        this.curValue = value;\n        this.progressBar.fillRange = this.curValue / this.maxValue;\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '6af701dlgJOeoRNWvjO3wxA', 'WSocket2');\n// scripts/utils/WSocket2.js\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n/**\n * 使用socket.io\n */\n\nif (cc.sys.isNative) {\n    window.io = SocketIO;\n} else {\n    require('socket-io');\n}\n\nvar NOT_CONNECTED = 0;\nvar CONNECTING = 1;\nvar CONNECTED = 2;\n\nvar WSocket2 = (function () {\n    function WSocket2() {\n        _classCallCheck(this, WSocket2);\n\n        this.url = SOCKET_REMOTE_URL;\n        this.status = NOT_CONNECTED;\n        this.handleList = {};\n    }\n\n    _createClass(WSocket2, [{\n        key: 'connect',\n        value: function connect(callBack) {\n            var _this = this;\n\n            this.static_io = io.connect(SOCKET_REMOTE_URL);\n            this.static_io.on('connecting', function () {\n                _this.status = CONNECTING;\n                console.log(\"连接中\");\n            });\n            this.static_io.on('connect', function () {\n                _this.status = CONNECTED;\n                console.log(\"连接成功\");\n                callBack();\n            });\n            this.static_io.on('disconnect', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接断开\");\n            });\n            this.static_io.on('connect_failed', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接失败\");\n            });\n            this.static_io.on('error', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"连接错误\");\n            });\n            this.static_io.on('reconnect_failed', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"重连失败\");\n            });\n            this.static_io.on('reconnect', function () {\n                _this.status = CONNECTED;\n                console.log(\"重连成功\");\n            });\n            this.static_io.on('reconnecting', function () {\n                _this.status = NOT_CONNECTED;\n                console.log(\"重连接中\");\n            });\n\n            this.static_io.on('msg', function (data) {\n                console.log(data);\n            });\n\n            this.static_io.on('connected', function (data) {\n                console.log(\"欢迎信息:\" + data);\n            });\n        }\n\n        /**\n         * 添加socket消息监听\n         * @cmd socket消息命令号\n         * @obj 监听对象tag\n         * @fn 消息回调函数（第一个参数为msg）\n         * @params 自定义参数\n         * @once 监听一次还是常监听\n         */\n    }, {\n        key: 'addListener',\n        value: function addListener(cmd, obj, fn, params, once) {\n            var _this2 = this;\n\n            if (this.status != CONNECTED) {\n                cc.log(\"未连接socket，不能设置监听\");\n                return;\n            }\n\n            if (typeof this.handleList[cmd] == \"undefined\") {\n                this.handleList[cmd] = {};\n            }\n\n            this.handleList[cmd][obj] = {\n                handler: fn,\n                params: params,\n                once: once\n            };\n\n            this.static_io.on(cmd, function (data) {\n                data = data.toString();\n                cc.log(\"Message Received：\" + data);\n                var parsedObj = parseMsg(data);\n                for (var handlerObj in _this2.handleList[cmd]) {\n                    var iterObj = _this2.handleList[cmd][handlerObj];\n                    iterObj.handler(parsedObj, iterObj.params);\n                    if (iterObj.once) {\n                        delete _this2.handleList[cmd][handlerObj];\n                    }\n                }\n            });\n        }\n\n        /**\n         * command:命令\n         * params:参数json\n         */\n    }, {\n        key: 'sendCommand',\n        value: function sendCommand(command, params) {\n            if (this.status != CONNECTED) {\n                cc.log(\"未连接socket，不能发送消息\");\n                return;\n            }\n            var strToSend = JSON.stringify(params);\n            cc.log(\"send command :\" + command);\n            cc.log(\"send content :\" + strToSend);\n            this.static_io.emit(command, params);\n        }\n    }]);\n\n    return WSocket2;\n})();\n\nexports['default'] = WSocket2;\nmodule.exports = exports['default'];\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'd1a5bh5ZCtGgoXan5jyXPRz', 'socket-io');\n// scripts/libs/socket-io.js\n\nif (!cc.sys.isNative) {\n  (function (f) {\n    if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n      module.exports = f();\n    } else if (typeof define === \"function\" && define.amd) {\n      define([], f);\n    } else {\n      var g;if (typeof window !== \"undefined\") {\n        g = window;\n      } else if (typeof global !== \"undefined\") {\n        g = global;\n      } else if (typeof self !== \"undefined\") {\n        g = self;\n      } else {\n        g = this;\n      }g.io = f();\n    }\n  })(function () {\n    var define, module, exports;return (function e(t, n, r) {\n      function s(o, u) {\n        if (!n[o]) {\n          if (!t[o]) {\n            var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw (f.code = \"MODULE_NOT_FOUND\", f);\n          }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n            var n = t[o][1][e];return s(n ? n : e);\n          }, l, l.exports, e, t, n, r);\n        }return n[o].exports;\n      }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) s(r[o]);return s;\n    })({ 1: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var url = _dereq_('./url');\n        var parser = _dereq_('socket.io-parser');\n        var Manager = _dereq_('./manager');\n        var debug = _dereq_('debug')('socket.io-client');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = lookup;\n\n        /**\n         * Managers cache.\n         */\n\n        var cache = exports.managers = {};\n\n        /**\n         * Looks up an existing `Manager` for multiplexing.\n         * If the user summons:\n         *\n         *   `io('http://localhost/a');`\n         *   `io('http://localhost/b');`\n         *\n         * We reuse the existing instance based on same scheme/port/host,\n         * and we initialize sockets for each namespace.\n         *\n         * @api public\n         */\n\n        function lookup(uri, opts) {\n          if (typeof uri == 'object') {\n            opts = uri;\n            uri = undefined;\n          }\n\n          opts = opts || {};\n\n          var parsed = url(uri);\n          var source = parsed.source;\n          var id = parsed.id;\n          var path = parsed.path;\n          var sameNamespace = cache[id] && path in cache[id].nsps;\n          var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\n          var io;\n\n          if (newConnection) {\n            debug('ignoring socket cache for %s', source);\n            io = Manager(source, opts);\n          } else {\n            if (!cache[id]) {\n              debug('new io instance for %s', source);\n              cache[id] = Manager(source, opts);\n            }\n            io = cache[id];\n          }\n\n          return io.socket(parsed.path);\n        }\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = parser.protocol;\n\n        /**\n         * `connect`.\n         *\n         * @param {String} uri\n         * @api public\n         */\n\n        exports.connect = lookup;\n\n        /**\n         * Expose constructors for standalone build.\n         *\n         * @api public\n         */\n\n        exports.Manager = _dereq_('./manager');\n        exports.Socket = _dereq_('./socket');\n      }, { \"./manager\": 2, \"./socket\": 4, \"./url\": 5, \"debug\": 14, \"socket.io-parser\": 40 }], 2: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var eio = _dereq_('engine.io-client');\n        var Socket = _dereq_('./socket');\n        var Emitter = _dereq_('component-emitter');\n        var parser = _dereq_('socket.io-parser');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:manager');\n        var indexOf = _dereq_('indexof');\n        var Backoff = _dereq_('backo2');\n\n        /**\n         * IE6+ hasOwnProperty\n         */\n\n        var has = Object.prototype.hasOwnProperty;\n\n        /**\n         * Module exports\n         */\n\n        module.exports = Manager;\n\n        /**\n         * `Manager` constructor.\n         *\n         * @param {String} engine instance or engine uri/opts\n         * @param {Object} options\n         * @api public\n         */\n\n        function Manager(uri, opts) {\n          if (!(this instanceof Manager)) return new Manager(uri, opts);\n          if (uri && 'object' == typeof uri) {\n            opts = uri;\n            uri = undefined;\n          }\n          opts = opts || {};\n\n          opts.path = opts.path || '/socket.io';\n          this.nsps = {};\n          this.subs = [];\n          this.opts = opts;\n          this.reconnection(opts.reconnection !== false);\n          this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n          this.reconnectionDelay(opts.reconnectionDelay || 1000);\n          this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n          this.randomizationFactor(opts.randomizationFactor || 0.5);\n          this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n          });\n          this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n          this.readyState = 'closed';\n          this.uri = uri;\n          this.connecting = [];\n          this.lastPing = null;\n          this.encoding = false;\n          this.packetBuffer = [];\n          this.encoder = new parser.Encoder();\n          this.decoder = new parser.Decoder();\n          this.autoConnect = opts.autoConnect !== false;\n          if (this.autoConnect) this.open();\n        }\n\n        /**\n         * Propagate given event to sockets and emit on `this`\n         *\n         * @api private\n         */\n\n        Manager.prototype.emitAll = function () {\n          this.emit.apply(this, arguments);\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n            }\n          }\n        };\n\n        /**\n         * Update `socket.id` of all sockets\n         *\n         * @api private\n         */\n\n        Manager.prototype.updateSocketIds = function () {\n          for (var nsp in this.nsps) {\n            if (has.call(this.nsps, nsp)) {\n              this.nsps[nsp].id = this.engine.id;\n            }\n          }\n        };\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Manager.prototype);\n\n        /**\n         * Sets the `reconnection` config.\n         *\n         * @param {Boolean} true/false if it should automatically reconnect\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnection = function (v) {\n          if (!arguments.length) return this._reconnection;\n          this._reconnection = !!v;\n          return this;\n        };\n\n        /**\n         * Sets the reconnection attempts config.\n         *\n         * @param {Number} max reconnection attempts before giving up\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionAttempts = function (v) {\n          if (!arguments.length) return this._reconnectionAttempts;\n          this._reconnectionAttempts = v;\n          return this;\n        };\n\n        /**\n         * Sets the delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelay = function (v) {\n          if (!arguments.length) return this._reconnectionDelay;\n          this._reconnectionDelay = v;\n          this.backoff && this.backoff.setMin(v);\n          return this;\n        };\n\n        Manager.prototype.randomizationFactor = function (v) {\n          if (!arguments.length) return this._randomizationFactor;\n          this._randomizationFactor = v;\n          this.backoff && this.backoff.setJitter(v);\n          return this;\n        };\n\n        /**\n         * Sets the maximum delay between reconnections.\n         *\n         * @param {Number} delay\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.reconnectionDelayMax = function (v) {\n          if (!arguments.length) return this._reconnectionDelayMax;\n          this._reconnectionDelayMax = v;\n          this.backoff && this.backoff.setMax(v);\n          return this;\n        };\n\n        /**\n         * Sets the connection timeout. `false` to disable\n         *\n         * @return {Manager} self or value\n         * @api public\n         */\n\n        Manager.prototype.timeout = function (v) {\n          if (!arguments.length) return this._timeout;\n          this._timeout = v;\n          return this;\n        };\n\n        /**\n         * Starts trying to reconnect if reconnection is enabled and we have not\n         * started reconnecting yet\n         *\n         * @api private\n         */\n\n        Manager.prototype.maybeReconnectOnOpen = function () {\n          // Only try to reconnect if it's the first time we're connecting\n          if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Sets the current transport `socket`.\n         *\n         * @param {Function} optional, callback\n         * @return {Manager} self\n         * @api public\n         */\n\n        Manager.prototype.open = Manager.prototype.connect = function (fn) {\n          debug('readyState %s', this.readyState);\n          if (~this.readyState.indexOf('open')) return this;\n\n          debug('opening %s', this.uri);\n          this.engine = eio(this.uri, this.opts);\n          var socket = this.engine;\n          var self = this;\n          this.readyState = 'opening';\n          this.skipReconnect = false;\n\n          // emit `open`\n          var openSub = on(socket, 'open', function () {\n            self.onopen();\n            fn && fn();\n          });\n\n          // emit `connect_error`\n          var errorSub = on(socket, 'error', function (data) {\n            debug('connect_error');\n            self.cleanup();\n            self.readyState = 'closed';\n            self.emitAll('connect_error', data);\n            if (fn) {\n              var err = new Error('Connection error');\n              err.data = data;\n              fn(err);\n            } else {\n              // Only do this if there is no fn to handle the error\n              self.maybeReconnectOnOpen();\n            }\n          });\n\n          // emit `connect_timeout`\n          if (false !== this._timeout) {\n            var timeout = this._timeout;\n            debug('connect attempt will timeout after %d', timeout);\n\n            // set timer\n            var timer = setTimeout(function () {\n              debug('connect attempt timed out after %d', timeout);\n              openSub.destroy();\n              socket.close();\n              socket.emit('error', 'timeout');\n              self.emitAll('connect_timeout', timeout);\n            }, timeout);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n\n          this.subs.push(openSub);\n          this.subs.push(errorSub);\n\n          return this;\n        };\n\n        /**\n         * Called upon transport open.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onopen = function () {\n          debug('open');\n\n          // clear old subs\n          this.cleanup();\n\n          // mark as open\n          this.readyState = 'open';\n          this.emit('open');\n\n          // add new subs\n          var socket = this.engine;\n          this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n          this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n          this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n          this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n          this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n          this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n        };\n\n        /**\n         * Called upon a ping.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onping = function () {\n          this.lastPing = new Date();\n          this.emitAll('ping');\n        };\n\n        /**\n         * Called upon a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onpong = function () {\n          this.emitAll('pong', new Date() - this.lastPing);\n        };\n\n        /**\n         * Called with data.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondata = function (data) {\n          this.decoder.add(data);\n        };\n\n        /**\n         * Called when parser fully decodes a packet.\n         *\n         * @api private\n         */\n\n        Manager.prototype.ondecoded = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon socket error.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onerror = function (err) {\n          debug('error', err);\n          this.emitAll('error', err);\n        };\n\n        /**\n         * Creates a new socket for the given `nsp`.\n         *\n         * @return {Socket}\n         * @api public\n         */\n\n        Manager.prototype.socket = function (nsp) {\n          var socket = this.nsps[nsp];\n          if (!socket) {\n            socket = new Socket(this, nsp);\n            this.nsps[nsp] = socket;\n            var self = this;\n            socket.on('connecting', onConnecting);\n            socket.on('connect', function () {\n              socket.id = self.engine.id;\n            });\n\n            if (this.autoConnect) {\n              // manually call here since connecting evnet is fired before listening\n              onConnecting();\n            }\n          }\n\n          function onConnecting() {\n            if (! ~indexOf(self.connecting, socket)) {\n              self.connecting.push(socket);\n            }\n          }\n\n          return socket;\n        };\n\n        /**\n         * Called upon a socket close.\n         *\n         * @param {Socket} socket\n         */\n\n        Manager.prototype.destroy = function (socket) {\n          var index = indexOf(this.connecting, socket);\n          if (~index) this.connecting.splice(index, 1);\n          if (this.connecting.length) return;\n\n          this.close();\n        };\n\n        /**\n         * Writes a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Manager.prototype.packet = function (packet) {\n          debug('writing packet %j', packet);\n          var self = this;\n\n          if (!self.encoding) {\n            // encode, then write to engine with result\n            self.encoding = true;\n            this.encoder.encode(packet, function (encodedPackets) {\n              for (var i = 0; i < encodedPackets.length; i++) {\n                self.engine.write(encodedPackets[i], packet.options);\n              }\n              self.encoding = false;\n              self.processPacketQueue();\n            });\n          } else {\n            // add packet to the queue\n            self.packetBuffer.push(packet);\n          }\n        };\n\n        /**\n         * If packet buffer is non-empty, begins encoding the\n         * next packet in line.\n         *\n         * @api private\n         */\n\n        Manager.prototype.processPacketQueue = function () {\n          if (this.packetBuffer.length > 0 && !this.encoding) {\n            var pack = this.packetBuffer.shift();\n            this.packet(pack);\n          }\n        };\n\n        /**\n         * Clean up transport subscriptions and packet buffer.\n         *\n         * @api private\n         */\n\n        Manager.prototype.cleanup = function () {\n          debug('cleanup');\n\n          var sub;\n          while (sub = this.subs.shift()) sub.destroy();\n\n          this.packetBuffer = [];\n          this.encoding = false;\n          this.lastPing = null;\n\n          this.decoder.destroy();\n        };\n\n        /**\n         * Close the current socket.\n         *\n         * @api private\n         */\n\n        Manager.prototype.close = Manager.prototype.disconnect = function () {\n          debug('disconnect');\n          this.skipReconnect = true;\n          this.reconnecting = false;\n          if ('opening' == this.readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n          }\n          this.backoff.reset();\n          this.readyState = 'closed';\n          if (this.engine) this.engine.close();\n        };\n\n        /**\n         * Called upon engine close.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onclose = function (reason) {\n          debug('onclose');\n\n          this.cleanup();\n          this.backoff.reset();\n          this.readyState = 'closed';\n          this.emit('close', reason);\n\n          if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n          }\n        };\n\n        /**\n         * Attempt a reconnection.\n         *\n         * @api private\n         */\n\n        Manager.prototype.reconnect = function () {\n          if (this.reconnecting || this.skipReconnect) return this;\n\n          var self = this;\n\n          if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug('reconnect failed');\n            this.backoff.reset();\n            this.emitAll('reconnect_failed');\n            this.reconnecting = false;\n          } else {\n            var delay = this.backoff.duration();\n            debug('will wait %dms before reconnect attempt', delay);\n\n            this.reconnecting = true;\n            var timer = setTimeout(function () {\n              if (self.skipReconnect) return;\n\n              debug('attempting reconnect');\n              self.emitAll('reconnect_attempt', self.backoff.attempts);\n              self.emitAll('reconnecting', self.backoff.attempts);\n\n              // check again for the case socket closed in above events\n              if (self.skipReconnect) return;\n\n              self.open(function (err) {\n                if (err) {\n                  debug('reconnect attempt error');\n                  self.reconnecting = false;\n                  self.reconnect();\n                  self.emitAll('reconnect_error', err.data);\n                } else {\n                  debug('reconnect success');\n                  self.onreconnect();\n                }\n              });\n            }, delay);\n\n            this.subs.push({\n              destroy: function destroy() {\n                clearTimeout(timer);\n              }\n            });\n          }\n        };\n\n        /**\n         * Called upon successful reconnect.\n         *\n         * @api private\n         */\n\n        Manager.prototype.onreconnect = function () {\n          var attempt = this.backoff.attempts;\n          this.reconnecting = false;\n          this.backoff.reset();\n          this.updateSocketIds();\n          this.emitAll('reconnect', attempt);\n        };\n      }, { \"./on\": 3, \"./socket\": 4, \"backo2\": 8, \"component-bind\": 11, \"component-emitter\": 12, \"debug\": 14, \"engine.io-client\": 16, \"indexof\": 32, \"socket.io-parser\": 40 }], 3: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = on;\n\n        /**\n         * Helper for subscriptions.\n         *\n         * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n         * @param {String} event name\n         * @param {Function} callback\n         * @api public\n         */\n\n        function on(obj, ev, fn) {\n          obj.on(ev, fn);\n          return {\n            destroy: function destroy() {\n              obj.removeListener(ev, fn);\n            }\n          };\n        }\n      }, {}], 4: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('socket.io-parser');\n        var Emitter = _dereq_('component-emitter');\n        var toArray = _dereq_('to-array');\n        var on = _dereq_('./on');\n        var bind = _dereq_('component-bind');\n        var debug = _dereq_('debug')('socket.io-client:socket');\n        var hasBin = _dereq_('has-binary');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = exports = Socket;\n\n        /**\n         * Internal events (blacklisted).\n         * These events can't be emitted by the user.\n         *\n         * @api private\n         */\n\n        var events = {\n          connect: 1,\n          connect_error: 1,\n          connect_timeout: 1,\n          connecting: 1,\n          disconnect: 1,\n          error: 1,\n          reconnect: 1,\n          reconnect_attempt: 1,\n          reconnect_failed: 1,\n          reconnect_error: 1,\n          reconnecting: 1,\n          ping: 1,\n          pong: 1\n        };\n\n        /**\n         * Shortcut to `Emitter#emit`.\n         */\n\n        var emit = Emitter.prototype.emit;\n\n        /**\n         * `Socket` constructor.\n         *\n         * @api public\n         */\n\n        function Socket(io, nsp) {\n          this.io = io;\n          this.nsp = nsp;\n          this.json = this; // compat\n          this.ids = 0;\n          this.acks = {};\n          this.receiveBuffer = [];\n          this.sendBuffer = [];\n          this.connected = false;\n          this.disconnected = true;\n          if (this.io.autoConnect) this.open();\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Socket.prototype);\n\n        /**\n         * Subscribe to open, close and packet events\n         *\n         * @api private\n         */\n\n        Socket.prototype.subEvents = function () {\n          if (this.subs) return;\n\n          var io = this.io;\n          this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n        };\n\n        /**\n         * \"Opens\" the socket.\n         *\n         * @api public\n         */\n\n        Socket.prototype.open = Socket.prototype.connect = function () {\n          if (this.connected) return this;\n\n          this.subEvents();\n          this.io.open(); // ensure open\n          if ('open' == this.io.readyState) this.onopen();\n          this.emit('connecting');\n          return this;\n        };\n\n        /**\n         * Sends a `message` event.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.send = function () {\n          var args = toArray(arguments);\n          args.unshift('message');\n          this.emit.apply(this, args);\n          return this;\n        };\n\n        /**\n         * Override `emit`.\n         * If the event is in `events`, it's emitted normally.\n         *\n         * @param {String} event name\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.emit = function (ev) {\n          if (events.hasOwnProperty(ev)) {\n            emit.apply(this, arguments);\n            return this;\n          }\n\n          var args = toArray(arguments);\n          var parserType = parser.EVENT; // default\n          if (hasBin(args)) {\n            parserType = parser.BINARY_EVENT;\n          } // binary\n          var packet = { type: parserType, data: args };\n\n          packet.options = {};\n          packet.options.compress = !this.flags || false !== this.flags.compress;\n\n          // event ack callback\n          if ('function' == typeof args[args.length - 1]) {\n            debug('emitting packet with ack id %d', this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n          }\n\n          if (this.connected) {\n            this.packet(packet);\n          } else {\n            this.sendBuffer.push(packet);\n          }\n\n          delete this.flags;\n\n          return this;\n        };\n\n        /**\n         * Sends a packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.packet = function (packet) {\n          packet.nsp = this.nsp;\n          this.io.packet(packet);\n        };\n\n        /**\n         * Called upon engine `open`.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onopen = function () {\n          debug('transport is open - connecting');\n\n          // write connect packet if necessary\n          if ('/' != this.nsp) {\n            this.packet({ type: parser.CONNECT });\n          }\n        };\n\n        /**\n         * Called upon engine `close`.\n         *\n         * @param {String} reason\n         * @api private\n         */\n\n        Socket.prototype.onclose = function (reason) {\n          debug('close (%s)', reason);\n          this.connected = false;\n          this.disconnected = true;\n          delete this.id;\n          this.emit('disconnect', reason);\n        };\n\n        /**\n         * Called with socket packet.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onpacket = function (packet) {\n          if (packet.nsp != this.nsp) return;\n\n          switch (packet.type) {\n            case parser.CONNECT:\n              this.onconnect();\n              break;\n\n            case parser.EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.BINARY_EVENT:\n              this.onevent(packet);\n              break;\n\n            case parser.ACK:\n              this.onack(packet);\n              break;\n\n            case parser.BINARY_ACK:\n              this.onack(packet);\n              break;\n\n            case parser.DISCONNECT:\n              this.ondisconnect();\n              break;\n\n            case parser.ERROR:\n              this.emit('error', packet.data);\n              break;\n          }\n        };\n\n        /**\n         * Called upon a server event.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onevent = function (packet) {\n          var args = packet.data || [];\n          debug('emitting event %j', args);\n\n          if (null != packet.id) {\n            debug('attaching ack callback to event');\n            args.push(this.ack(packet.id));\n          }\n\n          if (this.connected) {\n            emit.apply(this, args);\n          } else {\n            this.receiveBuffer.push(args);\n          }\n        };\n\n        /**\n         * Produces an ack callback to emit with an event.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ack = function (id) {\n          var self = this;\n          var sent = false;\n          return function () {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            var args = toArray(arguments);\n            debug('sending ack %j', args);\n\n            var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n            self.packet({\n              type: type,\n              id: id,\n              data: args\n            });\n          };\n        };\n\n        /**\n         * Called upon a server acknowlegement.\n         *\n         * @param {Object} packet\n         * @api private\n         */\n\n        Socket.prototype.onack = function (packet) {\n          var ack = this.acks[packet.id];\n          if ('function' == typeof ack) {\n            debug('calling ack %s with %j', packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n          } else {\n            debug('bad ack %s', packet.id);\n          }\n        };\n\n        /**\n         * Called upon server connect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.onconnect = function () {\n          this.connected = true;\n          this.disconnected = false;\n          this.emit('connect');\n          this.emitBuffered();\n        };\n\n        /**\n         * Emit buffered events (received and emitted).\n         *\n         * @api private\n         */\n\n        Socket.prototype.emitBuffered = function () {\n          var i;\n          for (i = 0; i < this.receiveBuffer.length; i++) {\n            emit.apply(this, this.receiveBuffer[i]);\n          }\n          this.receiveBuffer = [];\n\n          for (i = 0; i < this.sendBuffer.length; i++) {\n            this.packet(this.sendBuffer[i]);\n          }\n          this.sendBuffer = [];\n        };\n\n        /**\n         * Called upon server disconnect.\n         *\n         * @api private\n         */\n\n        Socket.prototype.ondisconnect = function () {\n          debug('server disconnect (%s)', this.nsp);\n          this.destroy();\n          this.onclose('io server disconnect');\n        };\n\n        /**\n         * Called upon forced client/server side disconnections,\n         * this method ensures the manager stops tracking us and\n         * that reconnections don't get triggered for this.\n         *\n         * @api private.\n         */\n\n        Socket.prototype.destroy = function () {\n          if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            for (var i = 0; i < this.subs.length; i++) {\n              this.subs[i].destroy();\n            }\n            this.subs = null;\n          }\n\n          this.io.destroy(this);\n        };\n\n        /**\n         * Disconnects the socket manually.\n         *\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.close = Socket.prototype.disconnect = function () {\n          if (this.connected) {\n            debug('performing disconnect (%s)', this.nsp);\n            this.packet({ type: parser.DISCONNECT });\n          }\n\n          // remove socket from pool\n          this.destroy();\n\n          if (this.connected) {\n            // fire events\n            this.onclose('io client disconnect');\n          }\n          return this;\n        };\n\n        /**\n         * Sets the compress flag.\n         *\n         * @param {Boolean} if `true`, compresses the sending data\n         * @return {Socket} self\n         * @api public\n         */\n\n        Socket.prototype.compress = function (compress) {\n          this.flags = this.flags || {};\n          this.flags.compress = compress;\n          return this;\n        };\n      }, { \"./on\": 3, \"component-bind\": 11, \"component-emitter\": 12, \"debug\": 14, \"has-binary\": 30, \"socket.io-parser\": 40, \"to-array\": 43 }], 5: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module dependencies.\n           */\n\n          var parseuri = _dereq_('parseuri');\n          var debug = _dereq_('debug')('socket.io-client:url');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = url;\n\n          /**\n           * URL parser.\n           *\n           * @param {String} url\n           * @param {Object} An object meant to mimic window.location.\n           *                 Defaults to window.location.\n           * @api public\n           */\n\n          function url(uri, loc) {\n            var obj = uri;\n\n            // default to window.location\n            var loc = loc || global.location;\n            if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n            // relative path support\n            if ('string' == typeof uri) {\n              if ('/' == uri.charAt(0)) {\n                if ('/' == uri.charAt(1)) {\n                  uri = loc.protocol + uri;\n                } else {\n                  uri = loc.host + uri;\n                }\n              }\n\n              if (!/^(https?|wss?):\\/\\//.test(uri)) {\n                debug('protocol-less url %s', uri);\n                if ('undefined' != typeof loc) {\n                  uri = loc.protocol + '//' + uri;\n                } else {\n                  uri = 'https://' + uri;\n                }\n              }\n\n              // parse\n              debug('parse %s', uri);\n              obj = parseuri(uri);\n            }\n\n            // make sure we treat `localhost:80` and `localhost` equally\n            if (!obj.port) {\n              if (/^(http|ws)$/.test(obj.protocol)) {\n                obj.port = '80';\n              } else if (/^(http|ws)s$/.test(obj.protocol)) {\n                obj.port = '443';\n              }\n            }\n\n            obj.path = obj.path || '/';\n\n            var ipv6 = obj.host.indexOf(':') !== -1;\n            var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n            // define unique id\n            obj.id = obj.protocol + '://' + host + ':' + obj.port;\n            // define href\n            obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);\n\n            return obj;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"debug\": 14, \"parseuri\": 38 }], 6: [function (_dereq_, module, exports) {\n        module.exports = after;\n\n        function after(count, callback, err_cb) {\n          var bail = false;\n          err_cb = err_cb || noop;\n          proxy.count = count;\n\n          return count === 0 ? callback() : proxy;\n\n          function proxy(err, result) {\n            if (proxy.count <= 0) {\n              throw new Error('after called too many times');\n            }\n            --proxy.count;\n\n            // after first error, rest are passed to err_cb\n            if (err) {\n              bail = true;\n              callback(err);\n              // future error callbacks will go to error handler\n              callback = err_cb;\n            } else if (proxy.count === 0 && !bail) {\n              callback(null, result);\n            }\n          }\n        }\n\n        function noop() {}\n      }, {}], 7: [function (_dereq_, module, exports) {\n        /**\n         * An abstraction for slicing an arraybuffer even when\n         * ArrayBuffer.prototype.slice is not supported\n         *\n         * @api public\n         */\n\n        module.exports = function (arraybuffer, start, end) {\n          var bytes = arraybuffer.byteLength;\n          start = start || 0;\n          end = end || bytes;\n\n          if (arraybuffer.slice) {\n            return arraybuffer.slice(start, end);\n          }\n\n          if (start < 0) {\n            start += bytes;\n          }\n          if (end < 0) {\n            end += bytes;\n          }\n          if (end > bytes) {\n            end = bytes;\n          }\n\n          if (start >= bytes || start >= end || bytes === 0) {\n            return new ArrayBuffer(0);\n          }\n\n          var abv = new Uint8Array(arraybuffer);\n          var result = new Uint8Array(end - start);\n          for (var i = start, ii = 0; i < end; i++, ii++) {\n            result[ii] = abv[i];\n          }\n          return result.buffer;\n        };\n      }, {}], 8: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Backoff`.\n         */\n\n        module.exports = Backoff;\n\n        /**\n         * Initialize backoff timer with `opts`.\n         *\n         * - `min` initial timeout in milliseconds [100]\n         * - `max` max timeout [10000]\n         * - `jitter` [0]\n         * - `factor` [2]\n         *\n         * @param {Object} opts\n         * @api public\n         */\n\n        function Backoff(opts) {\n          opts = opts || {};\n          this.ms = opts.min || 100;\n          this.max = opts.max || 10000;\n          this.factor = opts.factor || 2;\n          this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n          this.attempts = 0;\n        }\n\n        /**\n         * Return the backoff duration.\n         *\n         * @return {Number}\n         * @api public\n         */\n\n        Backoff.prototype.duration = function () {\n          var ms = this.ms * Math.pow(this.factor, this.attempts++);\n          if (this.jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this.jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this.max) | 0;\n        };\n\n        /**\n         * Reset the number of attempts.\n         *\n         * @api public\n         */\n\n        Backoff.prototype.reset = function () {\n          this.attempts = 0;\n        };\n\n        /**\n         * Set the minimum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMin = function (min) {\n          this.ms = min;\n        };\n\n        /**\n         * Set the maximum duration\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setMax = function (max) {\n          this.max = max;\n        };\n\n        /**\n         * Set the jitter\n         *\n         * @api public\n         */\n\n        Backoff.prototype.setJitter = function (jitter) {\n          this.jitter = jitter;\n        };\n      }, {}], 9: [function (_dereq_, module, exports) {\n        /*\n         * base64-arraybuffer\n         * https://github.com/niklasvh/base64-arraybuffer\n         *\n         * Copyright (c) 2012 Niklas von Hertzen\n         * Licensed under the MIT license.\n         */\n        (function () {\n          \"use strict\";\n\n          var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n          // Use a lookup table to find the index.\n          var lookup = new Uint8Array(256);\n          for (var i = 0; i < chars.length; i++) {\n            lookup[chars.charCodeAt(i)] = i;\n          }\n\n          exports.encode = function (arraybuffer) {\n            var bytes = new Uint8Array(arraybuffer),\n                i,\n                len = bytes.length,\n                base64 = \"\";\n\n            for (i = 0; i < len; i += 3) {\n              base64 += chars[bytes[i] >> 2];\n              base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n              base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n              base64 += chars[bytes[i + 2] & 63];\n            }\n\n            if (len % 3 === 2) {\n              base64 = base64.substring(0, base64.length - 1) + \"=\";\n            } else if (len % 3 === 1) {\n              base64 = base64.substring(0, base64.length - 2) + \"==\";\n            }\n\n            return base64;\n          };\n\n          exports.decode = function (base64) {\n            var bufferLength = base64.length * 0.75,\n                len = base64.length,\n                i,\n                p = 0,\n                encoded1,\n                encoded2,\n                encoded3,\n                encoded4;\n\n            if (base64[base64.length - 1] === \"=\") {\n              bufferLength--;\n              if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n              }\n            }\n\n            var arraybuffer = new ArrayBuffer(bufferLength),\n                bytes = new Uint8Array(arraybuffer);\n\n            for (i = 0; i < len; i += 4) {\n              encoded1 = lookup[base64.charCodeAt(i)];\n              encoded2 = lookup[base64.charCodeAt(i + 1)];\n              encoded3 = lookup[base64.charCodeAt(i + 2)];\n              encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n              bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n              bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n              bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n            }\n\n            return arraybuffer;\n          };\n        })();\n      }, {}], 10: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Create a blob builder even when vendor prefixes exist\n           */\n\n          var BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MSBlobBuilder || global.MozBlobBuilder;\n\n          /**\n           * Check if Blob constructor is supported\n           */\n\n          var blobSupported = (function () {\n            try {\n              var a = new Blob(['hi']);\n              return a.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if Blob constructor supports ArrayBufferViews\n           * Fails in Safari 6, so we need to map to ArrayBuffers there.\n           */\n\n          var blobSupportsArrayBufferView = blobSupported && (function () {\n            try {\n              var b = new Blob([new Uint8Array([1, 2])]);\n              return b.size === 2;\n            } catch (e) {\n              return false;\n            }\n          })();\n\n          /**\n           * Check if BlobBuilder is supported\n           */\n\n          var blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n\n          /**\n           * Helper function that maps ArrayBufferViews to ArrayBuffers\n           * Used by BlobBuilder constructor and old browsers that didn't\n           * support it in the Blob constructor.\n           */\n\n          function mapArrayBufferViews(ary) {\n            for (var i = 0; i < ary.length; i++) {\n              var chunk = ary[i];\n              if (chunk.buffer instanceof ArrayBuffer) {\n                var buf = chunk.buffer;\n\n                // if this is a subarray, make a copy so we only\n                // include the subarray region from the underlying buffer\n                if (chunk.byteLength !== buf.byteLength) {\n                  var copy = new Uint8Array(chunk.byteLength);\n                  copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n                  buf = copy.buffer;\n                }\n\n                ary[i] = buf;\n              }\n            }\n          }\n\n          function BlobBuilderConstructor(ary, options) {\n            options = options || {};\n\n            var bb = new BlobBuilder();\n            mapArrayBufferViews(ary);\n\n            for (var i = 0; i < ary.length; i++) {\n              bb.append(ary[i]);\n            }\n\n            return options.type ? bb.getBlob(options.type) : bb.getBlob();\n          };\n\n          function BlobConstructor(ary, options) {\n            mapArrayBufferViews(ary);\n            return new Blob(ary, options || {});\n          };\n\n          module.exports = (function () {\n            if (blobSupported) {\n              return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n            } else if (blobBuilderSupported) {\n              return BlobBuilderConstructor;\n            } else {\n              return undefined;\n            }\n          })();\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 11: [function (_dereq_, module, exports) {\n        /**\n         * Slice reference.\n         */\n\n        var slice = [].slice;\n\n        /**\n         * Bind `obj` to `fn`.\n         *\n         * @param {Object} obj\n         * @param {Function|String} fn or string\n         * @return {Function}\n         * @api public\n         */\n\n        module.exports = function (obj, fn) {\n          if ('string' == typeof fn) fn = obj[fn];\n          if ('function' != typeof fn) throw new Error('bind() requires a function');\n          var args = slice.call(arguments, 2);\n          return function () {\n            return fn.apply(obj, args.concat(slice.call(arguments)));\n          };\n        };\n      }, {}], 12: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          function on() {\n            this.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks['$' + event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks['$' + event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks['$' + event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks['$' + event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 13: [function (_dereq_, module, exports) {\n\n        module.exports = function (a, b) {\n          var fn = function fn() {};\n          fn.prototype = b.prototype;\n          a.prototype = new fn();\n          a.prototype.constructor = a;\n        };\n      }, {}], 14: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the web browser implementation of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = _dereq_('./debug');\n        exports.log = log;\n        exports.formatArgs = formatArgs;\n        exports.save = save;\n        exports.load = load;\n        exports.useColors = useColors;\n        exports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n\n        /**\n         * Colors.\n         */\n\n        exports.colors = ['lightseagreen', 'forestgreen', 'goldenrod', 'dodgerblue', 'darkorchid', 'crimson'];\n\n        /**\n         * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n         * and the Firebug extension (any Firefox version) are known\n         * to support \"%c\" CSS customizations.\n         *\n         * TODO: add a `localStorage` variable to explicitly enable/disable colors\n         */\n\n        function useColors() {\n          // is webkit? http://stackoverflow.com/a/16459606/376773\n          return 'WebkitAppearance' in document.documentElement.style ||\n          // is firebug? http://stackoverflow.com/a/398120/376773\n          window.console && (console.firebug || console.exception && console.table) ||\n          // is firefox >= v31?\n          // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n          navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31;\n        }\n\n        /**\n         * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n         */\n\n        exports.formatters.j = function (v) {\n          return JSON.stringify(v);\n        };\n\n        /**\n         * Colorize log arguments if enabled.\n         *\n         * @api public\n         */\n\n        function formatArgs() {\n          var args = arguments;\n          var useColors = this.useColors;\n\n          args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n\n          if (!useColors) return args;\n\n          var c = 'color: ' + this.color;\n          args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n          // the final \"%c\" is somewhat tricky, because there could be other\n          // arguments passed either before or after the %c, so we need to\n          // figure out the correct index to insert the CSS into\n          var index = 0;\n          var lastC = 0;\n          args[0].replace(/%[a-z%]/g, function (match) {\n            if ('%%' === match) return;\n            index++;\n            if ('%c' === match) {\n              // we only are interested in the *last* %c\n              // (the user may have provided their own)\n              lastC = index;\n            }\n          });\n\n          args.splice(lastC, 0, c);\n          return args;\n        }\n\n        /**\n         * Invokes `console.log()` when available.\n         * No-op when `console.log` is not a \"function\".\n         *\n         * @api public\n         */\n\n        function log() {\n          // this hackery is required for IE8/9, where\n          // the `console.log` function doesn't have 'apply'\n          return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n        }\n\n        /**\n         * Save `namespaces`.\n         *\n         * @param {String} namespaces\n         * @api private\n         */\n\n        function save(namespaces) {\n          try {\n            if (null == namespaces) {\n              exports.storage.removeItem('debug');\n            } else {\n              exports.storage.debug = namespaces;\n            }\n          } catch (e) {}\n        }\n\n        /**\n         * Load `namespaces`.\n         *\n         * @return {String} returns the previously persisted debug modes\n         * @api private\n         */\n\n        function load() {\n          var r;\n          try {\n            r = exports.storage.debug;\n          } catch (e) {}\n          return r;\n        }\n\n        /**\n         * Enable namespaces listed in `localStorage.debug` initially.\n         */\n\n        exports.enable(load());\n\n        /**\n         * Localstorage attempts to return the localstorage.\n         *\n         * This is necessary because safari throws\n         * when a user disables cookies/localstorage\n         * and you attempt to access it.\n         *\n         * @return {LocalStorage}\n         * @api private\n         */\n\n        function localstorage() {\n          try {\n            return window.localStorage;\n          } catch (e) {}\n        }\n      }, { \"./debug\": 15 }], 15: [function (_dereq_, module, exports) {\n\n        /**\n         * This is the common logic for both the Node.js and web browser\n         * implementations of `debug()`.\n         *\n         * Expose `debug()` as the module.\n         */\n\n        exports = module.exports = debug;\n        exports.coerce = coerce;\n        exports.disable = disable;\n        exports.enable = enable;\n        exports.enabled = enabled;\n        exports.humanize = _dereq_('ms');\n\n        /**\n         * The currently active debug mode names, and names to skip.\n         */\n\n        exports.names = [];\n        exports.skips = [];\n\n        /**\n         * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n         *\n         * Valid key names are a single, lowercased letter, i.e. \"n\".\n         */\n\n        exports.formatters = {};\n\n        /**\n         * Previously assigned color.\n         */\n\n        var prevColor = 0;\n\n        /**\n         * Previous log timestamp.\n         */\n\n        var prevTime;\n\n        /**\n         * Select a color.\n         *\n         * @return {Number}\n         * @api private\n         */\n\n        function selectColor() {\n          return exports.colors[prevColor++ % exports.colors.length];\n        }\n\n        /**\n         * Create a debugger with the given `namespace`.\n         *\n         * @param {String} namespace\n         * @return {Function}\n         * @api public\n         */\n\n        function debug(namespace) {\n\n          // define the `disabled` version\n          function disabled() {}\n          disabled.enabled = false;\n\n          // define the `enabled` version\n          function enabled() {\n\n            var self = enabled;\n\n            // set `diff` timestamp\n            var curr = +new Date();\n            var ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n\n            // add the `color` if not set\n            if (null == self.useColors) self.useColors = exports.useColors();\n            if (null == self.color && self.useColors) self.color = selectColor();\n\n            var args = Array.prototype.slice.call(arguments);\n\n            args[0] = exports.coerce(args[0]);\n\n            if ('string' !== typeof args[0]) {\n              // anything else let's inspect with %o\n              args = ['%o'].concat(args);\n            }\n\n            // apply any `formatters` transformations\n            var index = 0;\n            args[0] = args[0].replace(/%([a-z%])/g, function (match, format) {\n              // if we encounter an escaped % then don't increase the array index\n              if (match === '%%') return match;\n              index++;\n              var formatter = exports.formatters[format];\n              if ('function' === typeof formatter) {\n                var val = args[index];\n                match = formatter.call(self, val);\n\n                // now we need to remove `args[index]` since it's inlined in the `format`\n                args.splice(index, 1);\n                index--;\n              }\n              return match;\n            });\n\n            if ('function' === typeof exports.formatArgs) {\n              args = exports.formatArgs.apply(self, args);\n            }\n            var logFn = enabled.log || exports.log || console.log.bind(console);\n            logFn.apply(self, args);\n          }\n          enabled.enabled = true;\n\n          var fn = exports.enabled(namespace) ? enabled : disabled;\n\n          fn.namespace = namespace;\n\n          return fn;\n        }\n\n        /**\n         * Enables a debug mode by namespaces. This can include modes\n         * separated by a colon and wildcards.\n         *\n         * @param {String} namespaces\n         * @api public\n         */\n\n        function enable(namespaces) {\n          exports.save(namespaces);\n\n          var split = (namespaces || '').split(/[\\s,]+/);\n          var len = split.length;\n\n          for (var i = 0; i < len; i++) {\n            if (!split[i]) continue; // ignore empty strings\n            namespaces = split[i].replace(/\\*/g, '.*?');\n            if (namespaces[0] === '-') {\n              exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n            } else {\n              exports.names.push(new RegExp('^' + namespaces + '$'));\n            }\n          }\n        }\n\n        /**\n         * Disable debug output.\n         *\n         * @api public\n         */\n\n        function disable() {\n          exports.enable('');\n        }\n\n        /**\n         * Returns true if the given mode name is enabled, false otherwise.\n         *\n         * @param {String} name\n         * @return {Boolean}\n         * @api public\n         */\n\n        function enabled(name) {\n          var i, len;\n          for (i = 0, len = exports.skips.length; i < len; i++) {\n            if (exports.skips[i].test(name)) {\n              return false;\n            }\n          }\n          for (i = 0, len = exports.names.length; i < len; i++) {\n            if (exports.names[i].test(name)) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        /**\n         * Coerce `val`.\n         *\n         * @param {Mixed} val\n         * @return {Mixed}\n         * @api private\n         */\n\n        function coerce(val) {\n          if (val instanceof Error) return val.stack || val.message;\n          return val;\n        }\n      }, { \"ms\": 35 }], 16: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./lib/');\n      }, { \"./lib/\": 17 }], 17: [function (_dereq_, module, exports) {\n\n        module.exports = _dereq_('./socket');\n\n        /**\n         * Exports parser\n         *\n         * @api public\n         *\n         */\n        module.exports.parser = _dereq_('engine.io-parser');\n      }, { \"./socket\": 18, \"engine.io-parser\": 27 }], 18: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var transports = _dereq_('./transports');\n          var Emitter = _dereq_('component-emitter');\n          var debug = _dereq_('debug')('engine.io-client:socket');\n          var index = _dereq_('indexof');\n          var parser = _dereq_('engine.io-parser');\n          var parseuri = _dereq_('parseuri');\n          var parsejson = _dereq_('parsejson');\n          var parseqs = _dereq_('parseqs');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = Socket;\n\n          /**\n           * Noop function.\n           *\n           * @api private\n           */\n\n          function noop() {}\n\n          /**\n           * Socket constructor.\n           *\n           * @param {String|Object} uri or options\n           * @param {Object} options\n           * @api public\n           */\n\n          function Socket(uri, opts) {\n            if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n            opts = opts || {};\n\n            if (uri && 'object' == typeof uri) {\n              opts = uri;\n              uri = null;\n            }\n\n            if (uri) {\n              uri = parseuri(uri);\n              opts.hostname = uri.host;\n              opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n              opts.port = uri.port;\n              if (uri.query) opts.query = uri.query;\n            } else if (opts.host) {\n              opts.hostname = parseuri(opts.host).host;\n            }\n\n            this.secure = null != opts.secure ? opts.secure : global.location && 'https:' == location.protocol;\n\n            if (opts.hostname && !opts.port) {\n              // if no port is specified manually, use the protocol default\n              opts.port = this.secure ? '443' : '80';\n            }\n\n            this.agent = opts.agent || false;\n            this.hostname = opts.hostname || (global.location ? location.hostname : 'localhost');\n            this.port = opts.port || (global.location && location.port ? location.port : this.secure ? 443 : 80);\n            this.query = opts.query || {};\n            if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n            this.upgrade = false !== opts.upgrade;\n            this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n            this.forceJSONP = !!opts.forceJSONP;\n            this.jsonp = false !== opts.jsonp;\n            this.forceBase64 = !!opts.forceBase64;\n            this.enablesXDR = !!opts.enablesXDR;\n            this.timestampParam = opts.timestampParam || 't';\n            this.timestampRequests = opts.timestampRequests;\n            this.transports = opts.transports || ['polling', 'websocket'];\n            this.readyState = '';\n            this.writeBuffer = [];\n            this.policyPort = opts.policyPort || 843;\n            this.rememberUpgrade = opts.rememberUpgrade || false;\n            this.binaryType = null;\n            this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n            this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n\n            if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n            if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n              this.perMessageDeflate.threshold = 1024;\n            }\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx || null;\n            this.key = opts.key || null;\n            this.passphrase = opts.passphrase || null;\n            this.cert = opts.cert || null;\n            this.ca = opts.ca || null;\n            this.ciphers = opts.ciphers || null;\n            this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal) {\n              if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n                this.extraHeaders = opts.extraHeaders;\n              }\n            }\n\n            this.open();\n          }\n\n          Socket.priorWebsocketSuccess = false;\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Socket.prototype);\n\n          /**\n           * Protocol version.\n           *\n           * @api public\n           */\n\n          Socket.protocol = parser.protocol; // this is an int\n\n          /**\n           * Expose deps for legacy compatibility\n           * and standalone browser access.\n           */\n\n          Socket.Socket = Socket;\n          Socket.Transport = _dereq_('./transport');\n          Socket.transports = _dereq_('./transports');\n          Socket.parser = _dereq_('engine.io-parser');\n\n          /**\n           * Creates transport of the given type.\n           *\n           * @param {String} transport name\n           * @return {Transport}\n           * @api private\n           */\n\n          Socket.prototype.createTransport = function (name) {\n            debug('creating transport \"%s\"', name);\n            var query = clone(this.query);\n\n            // append engine.io protocol identifier\n            query.EIO = parser.protocol;\n\n            // transport name\n            query.transport = name;\n\n            // session id if we already have one\n            if (this.id) query.sid = this.id;\n\n            var transport = new transports[name]({\n              agent: this.agent,\n              hostname: this.hostname,\n              port: this.port,\n              secure: this.secure,\n              path: this.path,\n              query: query,\n              forceJSONP: this.forceJSONP,\n              jsonp: this.jsonp,\n              forceBase64: this.forceBase64,\n              enablesXDR: this.enablesXDR,\n              timestampRequests: this.timestampRequests,\n              timestampParam: this.timestampParam,\n              policyPort: this.policyPort,\n              socket: this,\n              pfx: this.pfx,\n              key: this.key,\n              passphrase: this.passphrase,\n              cert: this.cert,\n              ca: this.ca,\n              ciphers: this.ciphers,\n              rejectUnauthorized: this.rejectUnauthorized,\n              perMessageDeflate: this.perMessageDeflate,\n              extraHeaders: this.extraHeaders\n            });\n\n            return transport;\n          };\n\n          function clone(obj) {\n            var o = {};\n            for (var i in obj) {\n              if (obj.hasOwnProperty(i)) {\n                o[i] = obj[i];\n              }\n            }\n            return o;\n          }\n\n          /**\n           * Initializes transport to use and starts probe.\n           *\n           * @api private\n           */\n          Socket.prototype.open = function () {\n            var transport;\n            if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n              transport = 'websocket';\n            } else if (0 === this.transports.length) {\n              // Emit error on next tick so it can be listened to\n              var self = this;\n              setTimeout(function () {\n                self.emit('error', 'No transports available');\n              }, 0);\n              return;\n            } else {\n              transport = this.transports[0];\n            }\n            this.readyState = 'opening';\n\n            // Retry with the next transport if the transport is disabled (jsonp: false)\n            try {\n              transport = this.createTransport(transport);\n            } catch (e) {\n              this.transports.shift();\n              this.open();\n              return;\n            }\n\n            transport.open();\n            this.setTransport(transport);\n          };\n\n          /**\n           * Sets the current transport. Disables the existing one (if any).\n           *\n           * @api private\n           */\n\n          Socket.prototype.setTransport = function (transport) {\n            debug('setting transport %s', transport.name);\n            var self = this;\n\n            if (this.transport) {\n              debug('clearing existing transport %s', this.transport.name);\n              this.transport.removeAllListeners();\n            }\n\n            // set up transport\n            this.transport = transport;\n\n            // set up transport listeners\n            transport.on('drain', function () {\n              self.onDrain();\n            }).on('packet', function (packet) {\n              self.onPacket(packet);\n            }).on('error', function (e) {\n              self.onError(e);\n            }).on('close', function () {\n              self.onClose('transport close');\n            });\n          };\n\n          /**\n           * Probes a transport.\n           *\n           * @param {String} transport name\n           * @api private\n           */\n\n          Socket.prototype.probe = function (name) {\n            debug('probing transport \"%s\"', name);\n            var transport = this.createTransport(name, { probe: 1 }),\n                failed = false,\n                self = this;\n\n            Socket.priorWebsocketSuccess = false;\n\n            function onTransportOpen() {\n              if (self.onlyBinaryUpgrades) {\n                var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n                failed = failed || upgradeLosesBinary;\n              }\n              if (failed) return;\n\n              debug('probe transport \"%s\" opened', name);\n              transport.send([{ type: 'ping', data: 'probe' }]);\n              transport.once('packet', function (msg) {\n                if (failed) return;\n                if ('pong' == msg.type && 'probe' == msg.data) {\n                  debug('probe transport \"%s\" pong', name);\n                  self.upgrading = true;\n                  self.emit('upgrading', transport);\n                  if (!transport) return;\n                  Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n                  debug('pausing current transport \"%s\"', self.transport.name);\n                  self.transport.pause(function () {\n                    if (failed) return;\n                    if ('closed' == self.readyState) return;\n                    debug('changing transport and sending upgrade packet');\n\n                    cleanup();\n\n                    self.setTransport(transport);\n                    transport.send([{ type: 'upgrade' }]);\n                    self.emit('upgrade', transport);\n                    transport = null;\n                    self.upgrading = false;\n                    self.flush();\n                  });\n                } else {\n                  debug('probe transport \"%s\" failed', name);\n                  var err = new Error('probe error');\n                  err.transport = transport.name;\n                  self.emit('upgradeError', err);\n                }\n              });\n            }\n\n            function freezeTransport() {\n              if (failed) return;\n\n              // Any callback called by transport should be ignored since now\n              failed = true;\n\n              cleanup();\n\n              transport.close();\n              transport = null;\n            }\n\n            //Handle any error that happens while probing\n            function onerror(err) {\n              var error = new Error('probe error: ' + err);\n              error.transport = transport.name;\n\n              freezeTransport();\n\n              debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n              self.emit('upgradeError', error);\n            }\n\n            function onTransportClose() {\n              onerror(\"transport closed\");\n            }\n\n            //When the socket is closed while we're probing\n            function onclose() {\n              onerror(\"socket closed\");\n            }\n\n            //When the socket is upgraded while we're probing\n            function onupgrade(to) {\n              if (transport && to.name != transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n              }\n            }\n\n            //Remove all listeners on the transport and on self\n            function cleanup() {\n              transport.removeListener('open', onTransportOpen);\n              transport.removeListener('error', onerror);\n              transport.removeListener('close', onTransportClose);\n              self.removeListener('close', onclose);\n              self.removeListener('upgrading', onupgrade);\n            }\n\n            transport.once('open', onTransportOpen);\n            transport.once('error', onerror);\n            transport.once('close', onTransportClose);\n\n            this.once('close', onclose);\n            this.once('upgrading', onupgrade);\n\n            transport.open();\n          };\n\n          /**\n           * Called when connection is deemed open.\n           *\n           * @api public\n           */\n\n          Socket.prototype.onOpen = function () {\n            debug('socket open');\n            this.readyState = 'open';\n            Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n            this.emit('open');\n            this.flush();\n\n            // we check for `readyState` in case an `open`\n            // listener already closed the socket\n            if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n              debug('starting upgrade probes');\n              for (var i = 0, l = this.upgrades.length; i < l; i++) {\n                this.probe(this.upgrades[i]);\n              }\n            }\n          };\n\n          /**\n           * Handles a packet.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onPacket = function (packet) {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n              this.emit('packet', packet);\n\n              // Socket is live - any packet counts\n              this.emit('heartbeat');\n\n              switch (packet.type) {\n                case 'open':\n                  this.onHandshake(parsejson(packet.data));\n                  break;\n\n                case 'pong':\n                  this.setPing();\n                  this.emit('pong');\n                  break;\n\n                case 'error':\n                  var err = new Error('server error');\n                  err.code = packet.data;\n                  this.onError(err);\n                  break;\n\n                case 'message':\n                  this.emit('data', packet.data);\n                  this.emit('message', packet.data);\n                  break;\n              }\n            } else {\n              debug('packet received with socket readyState \"%s\"', this.readyState);\n            }\n          };\n\n          /**\n           * Called upon handshake completion.\n           *\n           * @param {Object} handshake obj\n           * @api private\n           */\n\n          Socket.prototype.onHandshake = function (data) {\n            this.emit('handshake', data);\n            this.id = data.sid;\n            this.transport.query.sid = data.sid;\n            this.upgrades = this.filterUpgrades(data.upgrades);\n            this.pingInterval = data.pingInterval;\n            this.pingTimeout = data.pingTimeout;\n            this.onOpen();\n            // In case open handler closes socket\n            if ('closed' == this.readyState) return;\n            this.setPing();\n\n            // Prolong liveness of socket on heartbeat\n            this.removeListener('heartbeat', this.onHeartbeat);\n            this.on('heartbeat', this.onHeartbeat);\n          };\n\n          /**\n           * Resets ping timeout.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onHeartbeat = function (timeout) {\n            clearTimeout(this.pingTimeoutTimer);\n            var self = this;\n            self.pingTimeoutTimer = setTimeout(function () {\n              if ('closed' == self.readyState) return;\n              self.onClose('ping timeout');\n            }, timeout || self.pingInterval + self.pingTimeout);\n          };\n\n          /**\n           * Pings server every `this.pingInterval` and expects response\n           * within `this.pingTimeout` or closes connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.setPing = function () {\n            var self = this;\n            clearTimeout(self.pingIntervalTimer);\n            self.pingIntervalTimer = setTimeout(function () {\n              debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n              self.ping();\n              self.onHeartbeat(self.pingTimeout);\n            }, self.pingInterval);\n          };\n\n          /**\n          * Sends a ping packet.\n          *\n          * @api private\n          */\n\n          Socket.prototype.ping = function () {\n            var self = this;\n            this.sendPacket('ping', function () {\n              self.emit('ping');\n            });\n          };\n\n          /**\n           * Called on `drain` event\n           *\n           * @api private\n           */\n\n          Socket.prototype.onDrain = function () {\n            this.writeBuffer.splice(0, this.prevBufferLen);\n\n            // setting prevBufferLen = 0 is very important\n            // for example, when upgrading, upgrade packet is sent over,\n            // and a nonzero prevBufferLen could cause problems on `drain`\n            this.prevBufferLen = 0;\n\n            if (0 === this.writeBuffer.length) {\n              this.emit('drain');\n            } else {\n              this.flush();\n            }\n          };\n\n          /**\n           * Flush write buffers.\n           *\n           * @api private\n           */\n\n          Socket.prototype.flush = function () {\n            if ('closed' != this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n              debug('flushing %d packets in socket', this.writeBuffer.length);\n              this.transport.send(this.writeBuffer);\n              // keep track of current length of writeBuffer\n              // splice writeBuffer and callbackBuffer on `drain`\n              this.prevBufferLen = this.writeBuffer.length;\n              this.emit('flush');\n            }\n          };\n\n          /**\n           * Sends a message.\n           *\n           * @param {String} message.\n           * @param {Function} callback function.\n           * @param {Object} options.\n           * @return {Socket} for chaining.\n           * @api public\n           */\n\n          Socket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n            this.sendPacket('message', msg, options, fn);\n            return this;\n          };\n\n          /**\n           * Sends a packet.\n           *\n           * @param {String} packet type.\n           * @param {String} data.\n           * @param {Object} options.\n           * @param {Function} callback function.\n           * @api private\n           */\n\n          Socket.prototype.sendPacket = function (type, data, options, fn) {\n            if ('function' == typeof data) {\n              fn = data;\n              data = undefined;\n            }\n\n            if ('function' == typeof options) {\n              fn = options;\n              options = null;\n            }\n\n            if ('closing' == this.readyState || 'closed' == this.readyState) {\n              return;\n            }\n\n            options = options || {};\n            options.compress = false !== options.compress;\n\n            var packet = {\n              type: type,\n              data: data,\n              options: options\n            };\n            this.emit('packetCreate', packet);\n            this.writeBuffer.push(packet);\n            if (fn) this.once('flush', fn);\n            this.flush();\n          };\n\n          /**\n           * Closes the connection.\n           *\n           * @api private\n           */\n\n          Socket.prototype.close = function () {\n            if ('opening' == this.readyState || 'open' == this.readyState) {\n              this.readyState = 'closing';\n\n              var self = this;\n\n              if (this.writeBuffer.length) {\n                this.once('drain', function () {\n                  if (this.upgrading) {\n                    waitForUpgrade();\n                  } else {\n                    close();\n                  }\n                });\n              } else if (this.upgrading) {\n                waitForUpgrade();\n              } else {\n                close();\n              }\n            }\n\n            function close() {\n              self.onClose('forced close');\n              debug('socket closing - telling transport to close');\n              self.transport.close();\n            }\n\n            function cleanupAndClose() {\n              self.removeListener('upgrade', cleanupAndClose);\n              self.removeListener('upgradeError', cleanupAndClose);\n              close();\n            }\n\n            function waitForUpgrade() {\n              // wait for upgrade to finish since we can't send packets while pausing a transport\n              self.once('upgrade', cleanupAndClose);\n              self.once('upgradeError', cleanupAndClose);\n            }\n\n            return this;\n          };\n\n          /**\n           * Called upon transport error\n           *\n           * @api private\n           */\n\n          Socket.prototype.onError = function (err) {\n            debug('socket error %j', err);\n            Socket.priorWebsocketSuccess = false;\n            this.emit('error', err);\n            this.onClose('transport error', err);\n          };\n\n          /**\n           * Called upon transport close.\n           *\n           * @api private\n           */\n\n          Socket.prototype.onClose = function (reason, desc) {\n            if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n              debug('socket close with reason: \"%s\"', reason);\n              var self = this;\n\n              // clear timers\n              clearTimeout(this.pingIntervalTimer);\n              clearTimeout(this.pingTimeoutTimer);\n\n              // stop event from firing again for transport\n              this.transport.removeAllListeners('close');\n\n              // ensure transport won't stay open\n              this.transport.close();\n\n              // ignore further transport communication\n              this.transport.removeAllListeners();\n\n              // set ready state\n              this.readyState = 'closed';\n\n              // clear session id\n              this.id = null;\n\n              // emit close event\n              this.emit('close', reason, desc);\n\n              // clean buffers after, so users can still\n              // grab the buffers on `close` event\n              self.writeBuffer = [];\n              self.prevBufferLen = 0;\n            }\n          };\n\n          /**\n           * Filters upgrades, returning only those matching client transports.\n           *\n           * @param {Array} server upgrades\n           * @api private\n           *\n           */\n\n          Socket.prototype.filterUpgrades = function (upgrades) {\n            var filteredUpgrades = [];\n            for (var i = 0, j = upgrades.length; i < j; i++) {\n              if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n            }\n            return filteredUpgrades;\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./transport\": 19, \"./transports\": 20, \"component-emitter\": 26, \"debug\": 14, \"engine.io-parser\": 27, \"indexof\": 32, \"parsejson\": 36, \"parseqs\": 37, \"parseuri\": 38 }], 19: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var parser = _dereq_('engine.io-parser');\n        var Emitter = _dereq_('component-emitter');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Transport;\n\n        /**\n         * Transport abstract constructor.\n         *\n         * @param {Object} options.\n         * @api private\n         */\n\n        function Transport(opts) {\n          this.path = opts.path;\n          this.hostname = opts.hostname;\n          this.port = opts.port;\n          this.secure = opts.secure;\n          this.query = opts.query;\n          this.timestampParam = opts.timestampParam;\n          this.timestampRequests = opts.timestampRequests;\n          this.readyState = '';\n          this.agent = opts.agent || false;\n          this.socket = opts.socket;\n          this.enablesXDR = opts.enablesXDR;\n\n          // SSL options for Node.js client\n          this.pfx = opts.pfx;\n          this.key = opts.key;\n          this.passphrase = opts.passphrase;\n          this.cert = opts.cert;\n          this.ca = opts.ca;\n          this.ciphers = opts.ciphers;\n          this.rejectUnauthorized = opts.rejectUnauthorized;\n\n          // other options for Node.js client\n          this.extraHeaders = opts.extraHeaders;\n        }\n\n        /**\n         * Mix in `Emitter`.\n         */\n\n        Emitter(Transport.prototype);\n\n        /**\n         * Emits an error.\n         *\n         * @param {String} str\n         * @return {Transport} for chaining\n         * @api public\n         */\n\n        Transport.prototype.onError = function (msg, desc) {\n          var err = new Error(msg);\n          err.type = 'TransportError';\n          err.description = desc;\n          this.emit('error', err);\n          return this;\n        };\n\n        /**\n         * Opens the transport.\n         *\n         * @api public\n         */\n\n        Transport.prototype.open = function () {\n          if ('closed' == this.readyState || '' == this.readyState) {\n            this.readyState = 'opening';\n            this.doOpen();\n          }\n\n          return this;\n        };\n\n        /**\n         * Closes the transport.\n         *\n         * @api private\n         */\n\n        Transport.prototype.close = function () {\n          if ('opening' == this.readyState || 'open' == this.readyState) {\n            this.doClose();\n            this.onClose();\n          }\n\n          return this;\n        };\n\n        /**\n         * Sends multiple packets.\n         *\n         * @param {Array} packets\n         * @api private\n         */\n\n        Transport.prototype.send = function (packets) {\n          if ('open' == this.readyState) {\n            this.write(packets);\n          } else {\n            throw new Error('Transport not open');\n          }\n        };\n\n        /**\n         * Called upon open\n         *\n         * @api private\n         */\n\n        Transport.prototype.onOpen = function () {\n          this.readyState = 'open';\n          this.writable = true;\n          this.emit('open');\n        };\n\n        /**\n         * Called with data.\n         *\n         * @param {String} data\n         * @api private\n         */\n\n        Transport.prototype.onData = function (data) {\n          var packet = parser.decodePacket(data, this.socket.binaryType);\n          this.onPacket(packet);\n        };\n\n        /**\n         * Called with a decoded packet.\n         */\n\n        Transport.prototype.onPacket = function (packet) {\n          this.emit('packet', packet);\n        };\n\n        /**\n         * Called upon close.\n         *\n         * @api private\n         */\n\n        Transport.prototype.onClose = function () {\n          this.readyState = 'closed';\n          this.emit('close');\n        };\n      }, { \"component-emitter\": 26, \"engine.io-parser\": 27 }], 20: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var XHR = _dereq_('./polling-xhr');\n          var JSONP = _dereq_('./polling-jsonp');\n          var websocket = _dereq_('./websocket');\n\n          /**\n           * Export transports.\n           */\n\n          exports.polling = polling;\n          exports.websocket = websocket;\n\n          /**\n           * Polling transport polymorphic constructor.\n           * Decides on xhr vs jsonp based on feature detection.\n           *\n           * @api private\n           */\n\n          function polling(opts) {\n            var xhr;\n            var xd = false;\n            var xs = false;\n            var jsonp = false !== opts.jsonp;\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              xd = opts.hostname != location.hostname || port != opts.port;\n              xs = opts.secure != isSSL;\n            }\n\n            opts.xdomain = xd;\n            opts.xscheme = xs;\n            xhr = new XMLHttpRequest(opts);\n\n            if ('open' in xhr && !opts.forceJSONP) {\n              return new XHR(opts);\n            } else {\n              if (!jsonp) throw new Error('JSONP disabled');\n              return new JSONP(opts);\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling-jsonp\": 21, \"./polling-xhr\": 22, \"./websocket\": 24, \"xmlhttprequest-ssl\": 25 }], 21: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /**\n           * Module requirements.\n           */\n\n          var Polling = _dereq_('./polling');\n          var inherit = _dereq_('component-inherit');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = JSONPPolling;\n\n          /**\n           * Cached regular expressions.\n           */\n\n          var rNewline = /\\n/g;\n          var rEscapedNewline = /\\\\n/g;\n\n          /**\n           * Global JSONP callbacks.\n           */\n\n          var callbacks;\n\n          /**\n           * Callbacks count.\n           */\n\n          var index = 0;\n\n          /**\n           * Noop.\n           */\n\n          function empty() {}\n\n          /**\n           * JSONP Polling constructor.\n           *\n           * @param {Object} opts.\n           * @api public\n           */\n\n          function JSONPPolling(opts) {\n            Polling.call(this, opts);\n\n            this.query = this.query || {};\n\n            // define global callbacks array if not present\n            // we do this here (lazily) to avoid unneeded global pollution\n            if (!callbacks) {\n              // we need to consider multiple engines in the same page\n              if (!global.___eio) global.___eio = [];\n              callbacks = global.___eio;\n            }\n\n            // callback identifier\n            this.index = callbacks.length;\n\n            // add callback to jsonp global\n            var self = this;\n            callbacks.push(function (msg) {\n              self.onData(msg);\n            });\n\n            // append to query string\n            this.query.j = this.index;\n\n            // prevent spurious errors from being emitted when the window is unloaded\n            if (global.document && global.addEventListener) {\n              global.addEventListener('beforeunload', function () {\n                if (self.script) self.script.onerror = empty;\n              }, false);\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(JSONPPolling, Polling);\n\n          /*\n           * JSONP only supports binary as base64 encoded strings\n           */\n\n          JSONPPolling.prototype.supportsBinary = false;\n\n          /**\n           * Closes the socket.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doClose = function () {\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            if (this.form) {\n              this.form.parentNode.removeChild(this.form);\n              this.form = null;\n              this.iframe = null;\n            }\n\n            Polling.prototype.doClose.call(this);\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          JSONPPolling.prototype.doPoll = function () {\n            var self = this;\n            var script = document.createElement('script');\n\n            if (this.script) {\n              this.script.parentNode.removeChild(this.script);\n              this.script = null;\n            }\n\n            script.async = true;\n            script.src = this.uri();\n            script.onerror = function (e) {\n              self.onError('jsonp poll error', e);\n            };\n\n            var insertAt = document.getElementsByTagName('script')[0];\n            if (insertAt) {\n              insertAt.parentNode.insertBefore(script, insertAt);\n            } else {\n              (document.head || document.body).appendChild(script);\n            }\n            this.script = script;\n\n            var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n\n            if (isUAgecko) {\n              setTimeout(function () {\n                var iframe = document.createElement('iframe');\n                document.body.appendChild(iframe);\n                document.body.removeChild(iframe);\n              }, 100);\n            }\n          };\n\n          /**\n           * Writes with a hidden iframe.\n           *\n           * @param {String} data to send\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          JSONPPolling.prototype.doWrite = function (data, fn) {\n            var self = this;\n\n            if (!this.form) {\n              var form = document.createElement('form');\n              var area = document.createElement('textarea');\n              var id = this.iframeId = 'eio_iframe_' + this.index;\n              var iframe;\n\n              form.className = 'socketio';\n              form.style.position = 'absolute';\n              form.style.top = '-1000px';\n              form.style.left = '-1000px';\n              form.target = id;\n              form.method = 'POST';\n              form.setAttribute('accept-charset', 'utf-8');\n              area.name = 'd';\n              form.appendChild(area);\n              document.body.appendChild(form);\n\n              this.form = form;\n              this.area = area;\n            }\n\n            this.form.action = this.uri();\n\n            function complete() {\n              initIframe();\n              fn();\n            }\n\n            function initIframe() {\n              if (self.iframe) {\n                try {\n                  self.form.removeChild(self.iframe);\n                } catch (e) {\n                  self.onError('jsonp polling iframe removal error', e);\n                }\n              }\n\n              try {\n                // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n                var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n                iframe = document.createElement(html);\n              } catch (e) {\n                iframe = document.createElement('iframe');\n                iframe.name = self.iframeId;\n                iframe.src = 'javascript:0';\n              }\n\n              iframe.id = self.iframeId;\n\n              self.form.appendChild(iframe);\n              self.iframe = iframe;\n            }\n\n            initIframe();\n\n            // escape \\n to prevent it from being converted into \\r\\n by some UAs\n            // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n            data = data.replace(rEscapedNewline, '\\\\\\n');\n            this.area.value = data.replace(rNewline, '\\\\n');\n\n            try {\n              this.form.submit();\n            } catch (e) {}\n\n            if (this.iframe.attachEvent) {\n              this.iframe.onreadystatechange = function () {\n                if (self.iframe.readyState == 'complete') {\n                  complete();\n                }\n              };\n            } else {\n              this.iframe.onload = complete;\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 23, \"component-inherit\": 13 }], 22: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module requirements.\n           */\n\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var Polling = _dereq_('./polling');\n          var Emitter = _dereq_('component-emitter');\n          var inherit = _dereq_('component-inherit');\n          var debug = _dereq_('debug')('engine.io-client:polling-xhr');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = XHR;\n          module.exports.Request = Request;\n\n          /**\n           * Empty function\n           */\n\n          function empty() {}\n\n          /**\n           * XHR Polling constructor.\n           *\n           * @param {Object} opts\n           * @api public\n           */\n\n          function XHR(opts) {\n            Polling.call(this, opts);\n\n            if (global.location) {\n              var isSSL = 'https:' == location.protocol;\n              var port = location.port;\n\n              // some user agents have empty `location.port`\n              if (!port) {\n                port = isSSL ? 443 : 80;\n              }\n\n              this.xd = opts.hostname != global.location.hostname || port != opts.port;\n              this.xs = opts.secure != isSSL;\n            } else {\n              this.extraHeaders = opts.extraHeaders;\n            }\n          }\n\n          /**\n           * Inherits from Polling.\n           */\n\n          inherit(XHR, Polling);\n\n          /**\n           * XHR supports binary\n           */\n\n          XHR.prototype.supportsBinary = true;\n\n          /**\n           * Creates a request.\n           *\n           * @param {String} method\n           * @api private\n           */\n\n          XHR.prototype.request = function (opts) {\n            opts = opts || {};\n            opts.uri = this.uri();\n            opts.xd = this.xd;\n            opts.xs = this.xs;\n            opts.agent = this.agent || false;\n            opts.supportsBinary = this.supportsBinary;\n            opts.enablesXDR = this.enablesXDR;\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            // other options for Node.js client\n            opts.extraHeaders = this.extraHeaders;\n\n            return new Request(opts);\n          };\n\n          /**\n           * Sends data.\n           *\n           * @param {String} data to send.\n           * @param {Function} called upon flush.\n           * @api private\n           */\n\n          XHR.prototype.doWrite = function (data, fn) {\n            var isBinary = typeof data !== 'string' && data !== undefined;\n            var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n            var self = this;\n            req.on('success', fn);\n            req.on('error', function (err) {\n              self.onError('xhr post error', err);\n            });\n            this.sendXhr = req;\n          };\n\n          /**\n           * Starts a poll cycle.\n           *\n           * @api private\n           */\n\n          XHR.prototype.doPoll = function () {\n            debug('xhr poll');\n            var req = this.request();\n            var self = this;\n            req.on('data', function (data) {\n              self.onData(data);\n            });\n            req.on('error', function (err) {\n              self.onError('xhr poll error', err);\n            });\n            this.pollXhr = req;\n          };\n\n          /**\n           * Request constructor\n           *\n           * @param {Object} options\n           * @api public\n           */\n\n          function Request(opts) {\n            this.method = opts.method || 'GET';\n            this.uri = opts.uri;\n            this.xd = !!opts.xd;\n            this.xs = !!opts.xs;\n            this.async = false !== opts.async;\n            this.data = undefined != opts.data ? opts.data : null;\n            this.agent = opts.agent;\n            this.isBinary = opts.isBinary;\n            this.supportsBinary = opts.supportsBinary;\n            this.enablesXDR = opts.enablesXDR;\n\n            // SSL options for Node.js client\n            this.pfx = opts.pfx;\n            this.key = opts.key;\n            this.passphrase = opts.passphrase;\n            this.cert = opts.cert;\n            this.ca = opts.ca;\n            this.ciphers = opts.ciphers;\n            this.rejectUnauthorized = opts.rejectUnauthorized;\n\n            // other options for Node.js client\n            this.extraHeaders = opts.extraHeaders;\n\n            this.create();\n          }\n\n          /**\n           * Mix in `Emitter`.\n           */\n\n          Emitter(Request.prototype);\n\n          /**\n           * Creates the XHR object and sends the request.\n           *\n           * @api private\n           */\n\n          Request.prototype.create = function () {\n            var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n\n            var xhr = this.xhr = new XMLHttpRequest(opts);\n            var self = this;\n\n            try {\n              debug('xhr open %s: %s', this.method, this.uri);\n              xhr.open(this.method, this.uri, this.async);\n              try {\n                if (this.extraHeaders) {\n                  xhr.setDisableHeaderCheck(true);\n                  for (var i in this.extraHeaders) {\n                    if (this.extraHeaders.hasOwnProperty(i)) {\n                      xhr.setRequestHeader(i, this.extraHeaders[i]);\n                    }\n                  }\n                }\n              } catch (e) {}\n              if (this.supportsBinary) {\n                // This has to be done after open because Firefox is stupid\n                // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n                xhr.responseType = 'arraybuffer';\n              }\n\n              if ('POST' == this.method) {\n                try {\n                  if (this.isBinary) {\n                    xhr.setRequestHeader('Content-type', 'application/octet-stream');\n                  } else {\n                    xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n                  }\n                } catch (e) {}\n              }\n\n              // ie6 check\n              if ('withCredentials' in xhr) {\n                xhr.withCredentials = true;\n              }\n\n              if (this.hasXDR()) {\n                xhr.onload = function () {\n                  self.onLoad();\n                };\n                xhr.onerror = function () {\n                  self.onError(xhr.responseText);\n                };\n              } else {\n                xhr.onreadystatechange = function () {\n                  if (4 != xhr.readyState) return;\n                  if (200 == xhr.status || 1223 == xhr.status) {\n                    self.onLoad();\n                  } else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    setTimeout(function () {\n                      self.onError(xhr.status);\n                    }, 0);\n                  }\n                };\n              }\n\n              debug('xhr data %s', this.data);\n              xhr.send(this.data);\n            } catch (e) {\n              // Need to defer since .create() is called directly fhrom the constructor\n              // and thus the 'error' event can only be only bound *after* this exception\n              // occurs.  Therefore, also, we cannot throw here at all.\n              setTimeout(function () {\n                self.onError(e);\n              }, 0);\n              return;\n            }\n\n            if (global.document) {\n              this.index = Request.requestsCount++;\n              Request.requests[this.index] = this;\n            }\n          };\n\n          /**\n           * Called upon successful response.\n           *\n           * @api private\n           */\n\n          Request.prototype.onSuccess = function () {\n            this.emit('success');\n            this.cleanup();\n          };\n\n          /**\n           * Called if we have data.\n           *\n           * @api private\n           */\n\n          Request.prototype.onData = function (data) {\n            this.emit('data', data);\n            this.onSuccess();\n          };\n\n          /**\n           * Called upon error.\n           *\n           * @api private\n           */\n\n          Request.prototype.onError = function (err) {\n            this.emit('error', err);\n            this.cleanup(true);\n          };\n\n          /**\n           * Cleans up house.\n           *\n           * @api private\n           */\n\n          Request.prototype.cleanup = function (fromError) {\n            if ('undefined' == typeof this.xhr || null === this.xhr) {\n              return;\n            }\n            // xmlhttprequest\n            if (this.hasXDR()) {\n              this.xhr.onload = this.xhr.onerror = empty;\n            } else {\n              this.xhr.onreadystatechange = empty;\n            }\n\n            if (fromError) {\n              try {\n                this.xhr.abort();\n              } catch (e) {}\n            }\n\n            if (global.document) {\n              delete Request.requests[this.index];\n            }\n\n            this.xhr = null;\n          };\n\n          /**\n           * Called upon load.\n           *\n           * @api private\n           */\n\n          Request.prototype.onLoad = function () {\n            var data;\n            try {\n              var contentType;\n              try {\n                contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n              } catch (e) {}\n              if (contentType === 'application/octet-stream') {\n                data = this.xhr.response;\n              } else {\n                if (!this.supportsBinary) {\n                  data = this.xhr.responseText;\n                } else {\n                  try {\n                    data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n                  } catch (e) {\n                    var ui8Arr = new Uint8Array(this.xhr.response);\n                    var dataArray = [];\n                    for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n                      dataArray.push(ui8Arr[idx]);\n                    }\n\n                    data = String.fromCharCode.apply(null, dataArray);\n                  }\n                }\n              }\n            } catch (e) {\n              this.onError(e);\n            }\n            if (null != data) {\n              this.onData(data);\n            }\n          };\n\n          /**\n           * Check if it has XDomainRequest.\n           *\n           * @api private\n           */\n\n          Request.prototype.hasXDR = function () {\n            return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n          };\n\n          /**\n           * Aborts the request.\n           *\n           * @api public\n           */\n\n          Request.prototype.abort = function () {\n            this.cleanup();\n          };\n\n          /**\n           * Aborts pending requests when unloading the window. This is needed to prevent\n           * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n           * emitted.\n           */\n\n          if (global.document) {\n            Request.requestsCount = 0;\n            Request.requests = {};\n            if (global.attachEvent) {\n              global.attachEvent('onunload', unloadHandler);\n            } else if (global.addEventListener) {\n              global.addEventListener('beforeunload', unloadHandler, false);\n            }\n          }\n\n          function unloadHandler() {\n            for (var i in Request.requests) {\n              if (Request.requests.hasOwnProperty(i)) {\n                Request.requests[i].abort();\n              }\n            }\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./polling\": 23, \"component-emitter\": 26, \"component-inherit\": 13, \"debug\": 14, \"xmlhttprequest-ssl\": 25 }], 23: [function (_dereq_, module, exports) {\n        /**\n         * Module dependencies.\n         */\n\n        var Transport = _dereq_('../transport');\n        var parseqs = _dereq_('parseqs');\n        var parser = _dereq_('engine.io-parser');\n        var inherit = _dereq_('component-inherit');\n        var yeast = _dereq_('yeast');\n        var debug = _dereq_('debug')('engine.io-client:polling');\n\n        /**\n         * Module exports.\n         */\n\n        module.exports = Polling;\n\n        /**\n         * Is XHR2 supported?\n         */\n\n        var hasXHR2 = (function () {\n          var XMLHttpRequest = _dereq_('xmlhttprequest-ssl');\n          var xhr = new XMLHttpRequest({ xdomain: false });\n          return null != xhr.responseType;\n        })();\n\n        /**\n         * Polling interface.\n         *\n         * @param {Object} opts\n         * @api private\n         */\n\n        function Polling(opts) {\n          var forceBase64 = opts && opts.forceBase64;\n          if (!hasXHR2 || forceBase64) {\n            this.supportsBinary = false;\n          }\n          Transport.call(this, opts);\n        }\n\n        /**\n         * Inherits from Transport.\n         */\n\n        inherit(Polling, Transport);\n\n        /**\n         * Transport name.\n         */\n\n        Polling.prototype.name = 'polling';\n\n        /**\n         * Opens the socket (triggers polling). We write a PING message to determine\n         * when the transport is open.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doOpen = function () {\n          this.poll();\n        };\n\n        /**\n         * Pauses polling.\n         *\n         * @param {Function} callback upon buffers are flushed and transport is paused\n         * @api private\n         */\n\n        Polling.prototype.pause = function (onPause) {\n          var pending = 0;\n          var self = this;\n\n          this.readyState = 'pausing';\n\n          function pause() {\n            debug('paused');\n            self.readyState = 'paused';\n            onPause();\n          }\n\n          if (this.polling || !this.writable) {\n            var total = 0;\n\n            if (this.polling) {\n              debug('we are currently polling - waiting to pause');\n              total++;\n              this.once('pollComplete', function () {\n                debug('pre-pause polling complete');\n                --total || pause();\n              });\n            }\n\n            if (!this.writable) {\n              debug('we are currently writing - waiting to pause');\n              total++;\n              this.once('drain', function () {\n                debug('pre-pause writing complete');\n                --total || pause();\n              });\n            }\n          } else {\n            pause();\n          }\n        };\n\n        /**\n         * Starts polling cycle.\n         *\n         * @api public\n         */\n\n        Polling.prototype.poll = function () {\n          debug('polling');\n          this.polling = true;\n          this.doPoll();\n          this.emit('poll');\n        };\n\n        /**\n         * Overloads onData to detect payloads.\n         *\n         * @api private\n         */\n\n        Polling.prototype.onData = function (data) {\n          var self = this;\n          debug('polling got data %s', data);\n          var callback = function callback(packet, index, total) {\n            // if its the first message we consider the transport open\n            if ('opening' == self.readyState) {\n              self.onOpen();\n            }\n\n            // if its a close packet, we close the ongoing requests\n            if ('close' == packet.type) {\n              self.onClose();\n              return false;\n            }\n\n            // otherwise bypass onData and handle the message\n            self.onPacket(packet);\n          };\n\n          // decode payload\n          parser.decodePayload(data, this.socket.binaryType, callback);\n\n          // if an event did not trigger closing\n          if ('closed' != this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit('pollComplete');\n\n            if ('open' == this.readyState) {\n              this.poll();\n            } else {\n              debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n          }\n        };\n\n        /**\n         * For polling, send a close packet.\n         *\n         * @api private\n         */\n\n        Polling.prototype.doClose = function () {\n          var self = this;\n\n          function close() {\n            debug('writing close packet');\n            self.write([{ type: 'close' }]);\n          }\n\n          if ('open' == this.readyState) {\n            debug('transport open - closing');\n            close();\n          } else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug('transport not open - deferring close');\n            this.once('open', close);\n          }\n        };\n\n        /**\n         * Writes a packets payload.\n         *\n         * @param {Array} data packets\n         * @param {Function} drain callback\n         * @api private\n         */\n\n        Polling.prototype.write = function (packets) {\n          var self = this;\n          this.writable = false;\n          var callbackfn = function callbackfn() {\n            self.writable = true;\n            self.emit('drain');\n          };\n\n          var self = this;\n          parser.encodePayload(packets, this.supportsBinary, function (data) {\n            self.doWrite(data, callbackfn);\n          });\n        };\n\n        /**\n         * Generates uri for connection.\n         *\n         * @api private\n         */\n\n        Polling.prototype.uri = function () {\n          var query = this.query || {};\n          var schema = this.secure ? 'https' : 'http';\n          var port = '';\n\n          // cache busting is forced\n          if (false !== this.timestampRequests) {\n            query[this.timestampParam] = yeast();\n          }\n\n          if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n          }\n\n          query = parseqs.encode(query);\n\n          // avoid port if default for schema\n          if (this.port && ('https' == schema && this.port != 443 || 'http' == schema && this.port != 80)) {\n            port = ':' + this.port;\n          }\n\n          // prepend ? to query\n          if (query.length) {\n            query = '?' + query;\n          }\n\n          var ipv6 = this.hostname.indexOf(':') !== -1;\n          return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n        };\n      }, { \"../transport\": 19, \"component-inherit\": 13, \"debug\": 14, \"engine.io-parser\": 27, \"parseqs\": 37, \"xmlhttprequest-ssl\": 25, \"yeast\": 45 }], 24: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var Transport = _dereq_('../transport');\n          var parser = _dereq_('engine.io-parser');\n          var parseqs = _dereq_('parseqs');\n          var inherit = _dereq_('component-inherit');\n          var yeast = _dereq_('yeast');\n          var debug = _dereq_('debug')('engine.io-client:websocket');\n          var BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n          /**\n           * Get either the `WebSocket` or `MozWebSocket` globals\n           * in the browser or try to resolve WebSocket-compatible\n           * interface exposed by `ws` for Node-like environment.\n           */\n\n          var WebSocket = BrowserWebSocket;\n          if (!WebSocket && typeof window === 'undefined') {\n            try {\n              WebSocket = _dereq_('ws');\n            } catch (e) {}\n          }\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = WS;\n\n          /**\n           * WebSocket transport constructor.\n           *\n           * @api {Object} connection options\n           * @api public\n           */\n\n          function WS(opts) {\n            var forceBase64 = opts && opts.forceBase64;\n            if (forceBase64) {\n              this.supportsBinary = false;\n            }\n            this.perMessageDeflate = opts.perMessageDeflate;\n            Transport.call(this, opts);\n          }\n\n          /**\n           * Inherits from Transport.\n           */\n\n          inherit(WS, Transport);\n\n          /**\n           * Transport name.\n           *\n           * @api public\n           */\n\n          WS.prototype.name = 'websocket';\n\n          /*\n           * WebSockets support binary\n           */\n\n          WS.prototype.supportsBinary = true;\n\n          /**\n           * Opens socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doOpen = function () {\n            if (!this.check()) {\n              // let probe timeout\n              return;\n            }\n\n            var self = this;\n            var uri = this.uri();\n            var protocols = void 0;\n            var opts = {\n              agent: this.agent,\n              perMessageDeflate: this.perMessageDeflate\n            };\n\n            // SSL options for Node.js client\n            opts.pfx = this.pfx;\n            opts.key = this.key;\n            opts.passphrase = this.passphrase;\n            opts.cert = this.cert;\n            opts.ca = this.ca;\n            opts.ciphers = this.ciphers;\n            opts.rejectUnauthorized = this.rejectUnauthorized;\n            if (this.extraHeaders) {\n              opts.headers = this.extraHeaders;\n            }\n\n            this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n            if (this.ws.binaryType === undefined) {\n              this.supportsBinary = false;\n            }\n\n            if (this.ws.supports && this.ws.supports.binary) {\n              this.supportsBinary = true;\n              this.ws.binaryType = 'buffer';\n            } else {\n              this.ws.binaryType = 'arraybuffer';\n            }\n\n            this.addEventListeners();\n          };\n\n          /**\n           * Adds event listeners to the socket\n           *\n           * @api private\n           */\n\n          WS.prototype.addEventListeners = function () {\n            var self = this;\n\n            this.ws.onopen = function () {\n              self.onOpen();\n            };\n            this.ws.onclose = function () {\n              self.onClose();\n            };\n            this.ws.onmessage = function (ev) {\n              self.onData(ev.data);\n            };\n            this.ws.onerror = function (e) {\n              self.onError('websocket error', e);\n            };\n          };\n\n          /**\n           * Override `onData` to use a timer on iOS.\n           * See: https://gist.github.com/mloughran/2052006\n           *\n           * @api private\n           */\n\n          if ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n            WS.prototype.onData = function (data) {\n              var self = this;\n              setTimeout(function () {\n                Transport.prototype.onData.call(self, data);\n              }, 0);\n            };\n          }\n\n          /**\n           * Writes data to socket.\n           *\n           * @param {Array} array of packets.\n           * @api private\n           */\n\n          WS.prototype.write = function (packets) {\n            var self = this;\n            this.writable = false;\n\n            // encodePacket efficient as it uses WS framing\n            // no need for encodePayload\n            var total = packets.length;\n            for (var i = 0, l = total; i < l; i++) {\n              (function (packet) {\n                parser.encodePacket(packet, self.supportsBinary, function (data) {\n                  if (!BrowserWebSocket) {\n                    // always create a new object (GH-437)\n                    var opts = {};\n                    if (packet.options) {\n                      opts.compress = packet.options.compress;\n                    }\n\n                    if (self.perMessageDeflate) {\n                      var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n                      if (len < self.perMessageDeflate.threshold) {\n                        opts.compress = false;\n                      }\n                    }\n                  }\n\n                  //Sometimes the websocket has already been closed but the browser didn't\n                  //have a chance of informing us about it yet, in that case send will\n                  //throw an error\n                  try {\n                    if (BrowserWebSocket) {\n                      // TypeError is thrown when passing the second argument on Safari\n                      self.ws.send(data);\n                    } else {\n                      self.ws.send(data, opts);\n                    }\n                  } catch (e) {\n                    debug('websocket closed before onclose event');\n                  }\n\n                  --total || done();\n                });\n              })(packets[i]);\n            }\n\n            function done() {\n              self.emit('flush');\n\n              // fake drain\n              // defer to next tick to allow Socket to clear writeBuffer\n              setTimeout(function () {\n                self.writable = true;\n                self.emit('drain');\n              }, 0);\n            }\n          };\n\n          /**\n           * Called upon close\n           *\n           * @api private\n           */\n\n          WS.prototype.onClose = function () {\n            Transport.prototype.onClose.call(this);\n          };\n\n          /**\n           * Closes socket.\n           *\n           * @api private\n           */\n\n          WS.prototype.doClose = function () {\n            if (typeof this.ws !== 'undefined') {\n              this.ws.close();\n            }\n          };\n\n          /**\n           * Generates uri for connection.\n           *\n           * @api private\n           */\n\n          WS.prototype.uri = function () {\n            var query = this.query || {};\n            var schema = this.secure ? 'wss' : 'ws';\n            var port = '';\n\n            // avoid port if default for schema\n            if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {\n              port = ':' + this.port;\n            }\n\n            // append timestamp to URI\n            if (this.timestampRequests) {\n              query[this.timestampParam] = yeast();\n            }\n\n            // communicate binary support capabilities\n            if (!this.supportsBinary) {\n              query.b64 = 1;\n            }\n\n            query = parseqs.encode(query);\n\n            // prepend ? to query\n            if (query.length) {\n              query = '?' + query;\n            }\n\n            var ipv6 = this.hostname.indexOf(':') !== -1;\n            return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n          };\n\n          /**\n           * Feature detection for WebSocket.\n           *\n           * @return {Boolean} whether this transport is available.\n           * @api public\n           */\n\n          WS.prototype.check = function () {\n            return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"../transport\": 19, \"component-inherit\": 13, \"debug\": 14, \"engine.io-parser\": 27, \"parseqs\": 37, \"ws\": undefined, \"yeast\": 45 }], 25: [function (_dereq_, module, exports) {\n        // browser shim for xmlhttprequest module\n        var hasCORS = _dereq_('has-cors');\n\n        module.exports = function (opts) {\n          var xdomain = opts.xdomain;\n\n          // scheme must be same when usign XDomainRequest\n          // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n          var xscheme = opts.xscheme;\n\n          // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n          // https://github.com/Automattic/engine.io-client/pull/217\n          var enablesXDR = opts.enablesXDR;\n\n          // XMLHttpRequest can be disabled on IE\n          try {\n            if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n              return new XMLHttpRequest();\n            }\n          } catch (e) {}\n\n          // Use XDomainRequest for IE8 if enablesXDR is true\n          // because loading bar keeps flashing when using jsonp-polling\n          // https://github.com/yujiosaka/socke.io-ie8-loading-example\n          try {\n            if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n              return new XDomainRequest();\n            }\n          } catch (e) {}\n\n          if (!xdomain) {\n            try {\n              return new ActiveXObject('Microsoft.XMLHTTP');\n            } catch (e) {}\n          }\n        };\n      }, { \"has-cors\": 31 }], 26: [function (_dereq_, module, exports) {\n\n        /**\n         * Expose `Emitter`.\n         */\n\n        module.exports = Emitter;\n\n        /**\n         * Initialize a new `Emitter`.\n         *\n         * @api public\n         */\n\n        function Emitter(obj) {\n          if (obj) return mixin(obj);\n        };\n\n        /**\n         * Mixin the emitter properties.\n         *\n         * @param {Object} obj\n         * @return {Object}\n         * @api private\n         */\n\n        function mixin(obj) {\n          for (var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n          }\n          return obj;\n        }\n\n        /**\n         * Listen on the given `event` with `fn`.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n          (this._callbacks[event] = this._callbacks[event] || []).push(fn);\n          return this;\n        };\n\n        /**\n         * Adds an `event` listener that will be invoked a single\n         * time then automatically removed.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.once = function (event, fn) {\n          var self = this;\n          this._callbacks = this._callbacks || {};\n\n          function on() {\n            self.off(event, on);\n            fn.apply(this, arguments);\n          }\n\n          on.fn = fn;\n          this.on(event, on);\n          return this;\n        };\n\n        /**\n         * Remove the given callback for `event` or all\n         * registered callbacks.\n         *\n         * @param {String} event\n         * @param {Function} fn\n         * @return {Emitter}\n         * @api public\n         */\n\n        Emitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n          this._callbacks = this._callbacks || {};\n\n          // all\n          if (0 == arguments.length) {\n            this._callbacks = {};\n            return this;\n          }\n\n          // specific event\n          var callbacks = this._callbacks[event];\n          if (!callbacks) return this;\n\n          // remove all handlers\n          if (1 == arguments.length) {\n            delete this._callbacks[event];\n            return this;\n          }\n\n          // remove specific handler\n          var cb;\n          for (var i = 0; i < callbacks.length; i++) {\n            cb = callbacks[i];\n            if (cb === fn || cb.fn === fn) {\n              callbacks.splice(i, 1);\n              break;\n            }\n          }\n          return this;\n        };\n\n        /**\n         * Emit `event` with the given args.\n         *\n         * @param {String} event\n         * @param {Mixed} ...\n         * @return {Emitter}\n         */\n\n        Emitter.prototype.emit = function (event) {\n          this._callbacks = this._callbacks || {};\n          var args = [].slice.call(arguments, 1),\n              callbacks = this._callbacks[event];\n\n          if (callbacks) {\n            callbacks = callbacks.slice(0);\n            for (var i = 0, len = callbacks.length; i < len; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n\n          return this;\n        };\n\n        /**\n         * Return array of callbacks for `event`.\n         *\n         * @param {String} event\n         * @return {Array}\n         * @api public\n         */\n\n        Emitter.prototype.listeners = function (event) {\n          this._callbacks = this._callbacks || {};\n          return this._callbacks[event] || [];\n        };\n\n        /**\n         * Check if this emitter has `event` handlers.\n         *\n         * @param {String} event\n         * @return {Boolean}\n         * @api public\n         */\n\n        Emitter.prototype.hasListeners = function (event) {\n          return !!this.listeners(event).length;\n        };\n      }, {}], 27: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * Module dependencies.\n           */\n\n          var keys = _dereq_('./keys');\n          var hasBinary = _dereq_('has-binary');\n          var sliceBuffer = _dereq_('arraybuffer.slice');\n          var base64encoder = _dereq_('base64-arraybuffer');\n          var after = _dereq_('after');\n          var utf8 = _dereq_('utf8');\n\n          /**\n           * Check if we are running an android browser. That requires us to use\n           * ArrayBuffer with polling transports...\n           *\n           * http://ghinda.net/jpeg-blob-ajax-android/\n           */\n\n          var isAndroid = navigator.userAgent.match(/Android/i);\n\n          /**\n           * Check if we are running in PhantomJS.\n           * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n           * https://github.com/ariya/phantomjs/issues/11395\n           * @type boolean\n           */\n          var isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n          /**\n           * When true, avoids using Blobs to encode payloads.\n           * @type boolean\n           */\n          var dontSendBlobs = isAndroid || isPhantomJS;\n\n          /**\n           * Current protocol version.\n           */\n\n          exports.protocol = 3;\n\n          /**\n           * Packet types.\n           */\n\n          var packets = exports.packets = {\n            open: 0, // non-ws\n            close: 1, // non-ws\n            ping: 2,\n            pong: 3,\n            message: 4,\n            upgrade: 5,\n            noop: 6\n          };\n\n          var packetslist = keys(packets);\n\n          /**\n           * Premade error packet.\n           */\n\n          var err = { type: 'error', data: 'parser error' };\n\n          /**\n           * Create a blob api even for blob builder when vendor prefixes exist\n           */\n\n          var Blob = _dereq_('blob');\n\n          /**\n           * Encodes a packet.\n           *\n           *     <packet type id> [ <data> ]\n           *\n           * Example:\n           *\n           *     5hello world\n           *     3\n           *     4\n           *\n           * Binary is encoded in an identical principle\n           *\n           * @api private\n           */\n\n          exports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n            if ('function' == typeof supportsBinary) {\n              callback = supportsBinary;\n              supportsBinary = false;\n            }\n\n            if ('function' == typeof utf8encode) {\n              callback = utf8encode;\n              utf8encode = null;\n            }\n\n            var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n            if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n              return encodeArrayBuffer(packet, supportsBinary, callback);\n            } else if (Blob && data instanceof global.Blob) {\n              return encodeBlob(packet, supportsBinary, callback);\n            }\n\n            // might be an object with { base64: true, data: dataAsBase64String }\n            if (data && data.base64) {\n              return encodeBase64Object(packet, callback);\n            }\n\n            // Sending data as a utf-8 string\n            var encoded = packets[packet.type];\n\n            // data fragment is optional\n            if (undefined !== packet.data) {\n              encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n            }\n\n            return callback('' + encoded);\n          };\n\n          function encodeBase64Object(packet, callback) {\n            // packet data is an object { base64: true, data: dataAsBase64String }\n            var message = 'b' + exports.packets[packet.type] + packet.data.data;\n            return callback(message);\n          }\n\n          /**\n           * Encode packet helpers for binary types\n           */\n\n          function encodeArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var data = packet.data;\n            var contentArray = new Uint8Array(data);\n            var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n            resultBuffer[0] = packets[packet.type];\n            for (var i = 0; i < contentArray.length; i++) {\n              resultBuffer[i + 1] = contentArray[i];\n            }\n\n            return callback(resultBuffer.buffer);\n          }\n\n          function encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            var fr = new FileReader();\n            fr.onload = function () {\n              packet.data = fr.result;\n              exports.encodePacket(packet, supportsBinary, true, callback);\n            };\n            return fr.readAsArrayBuffer(packet.data);\n          }\n\n          function encodeBlob(packet, supportsBinary, callback) {\n            if (!supportsBinary) {\n              return exports.encodeBase64Packet(packet, callback);\n            }\n\n            if (dontSendBlobs) {\n              return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n            }\n\n            var length = new Uint8Array(1);\n            length[0] = packets[packet.type];\n            var blob = new Blob([length.buffer, packet.data]);\n\n            return callback(blob);\n          }\n\n          /**\n           * Encodes a packet with binary data in a base64 string\n           *\n           * @param {Object} packet, has `type` and `data`\n           * @return {String} base64 encoded message\n           */\n\n          exports.encodeBase64Packet = function (packet, callback) {\n            var message = 'b' + exports.packets[packet.type];\n            if (Blob && packet.data instanceof global.Blob) {\n              var fr = new FileReader();\n              fr.onload = function () {\n                var b64 = fr.result.split(',')[1];\n                callback(message + b64);\n              };\n              return fr.readAsDataURL(packet.data);\n            }\n\n            var b64data;\n            try {\n              b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n            } catch (e) {\n              // iPhone Safari doesn't let you apply with typed arrays\n              var typed = new Uint8Array(packet.data);\n              var basic = new Array(typed.length);\n              for (var i = 0; i < typed.length; i++) {\n                basic[i] = typed[i];\n              }\n              b64data = String.fromCharCode.apply(null, basic);\n            }\n            message += global.btoa(b64data);\n            return callback(message);\n          };\n\n          /**\n           * Decodes a packet. Changes format to Blob if requested.\n           *\n           * @return {Object} with `type` and `data` (if any)\n           * @api private\n           */\n\n          exports.decodePacket = function (data, binaryType, utf8decode) {\n            // String data\n            if (typeof data == 'string' || data === undefined) {\n              if (data.charAt(0) == 'b') {\n                return exports.decodeBase64Packet(data.substr(1), binaryType);\n              }\n\n              if (utf8decode) {\n                try {\n                  data = utf8.decode(data);\n                } catch (e) {\n                  return err;\n                }\n              }\n              var type = data.charAt(0);\n\n              if (Number(type) != type || !packetslist[type]) {\n                return err;\n              }\n\n              if (data.length > 1) {\n                return { type: packetslist[type], data: data.substring(1) };\n              } else {\n                return { type: packetslist[type] };\n              }\n            }\n\n            var asArray = new Uint8Array(data);\n            var type = asArray[0];\n            var rest = sliceBuffer(data, 1);\n            if (Blob && binaryType === 'blob') {\n              rest = new Blob([rest]);\n            }\n            return { type: packetslist[type], data: rest };\n          };\n\n          /**\n           * Decodes a packet encoded in a base64 string\n           *\n           * @param {String} base64 encoded message\n           * @return {Object} with `type` and `data` (if any)\n           */\n\n          exports.decodeBase64Packet = function (msg, binaryType) {\n            var type = packetslist[msg.charAt(0)];\n            if (!global.ArrayBuffer) {\n              return { type: type, data: { base64: true, data: msg.substr(1) } };\n            }\n\n            var data = base64encoder.decode(msg.substr(1));\n\n            if (binaryType === 'blob' && Blob) {\n              data = new Blob([data]);\n            }\n\n            return { type: type, data: data };\n          };\n\n          /**\n           * Encodes multiple messages (payload).\n           *\n           *     <length>:data\n           *\n           * Example:\n           *\n           *     11:hello world2:hi\n           *\n           * If any contents are binary, they will be encoded as base64 strings. Base64\n           * encoded strings are marked with a b before the length specifier\n           *\n           * @param {Array} packets\n           * @api private\n           */\n\n          exports.encodePayload = function (packets, supportsBinary, callback) {\n            if (typeof supportsBinary == 'function') {\n              callback = supportsBinary;\n              supportsBinary = null;\n            }\n\n            var isBinary = hasBinary(packets);\n\n            if (supportsBinary && isBinary) {\n              if (Blob && !dontSendBlobs) {\n                return exports.encodePayloadAsBlob(packets, callback);\n              }\n\n              return exports.encodePayloadAsArrayBuffer(packets, callback);\n            }\n\n            if (!packets.length) {\n              return callback('0:');\n            }\n\n            function setLengthHeader(message) {\n              return message.length + ':' + message;\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function (message) {\n                doneCallback(null, setLengthHeader(message));\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(results.join(''));\n            });\n          };\n\n          /**\n           * Async array map using after\n           */\n\n          function map(ary, each, done) {\n            var result = new Array(ary.length);\n            var next = after(ary.length, done);\n\n            var eachWithIndex = function eachWithIndex(i, el, cb) {\n              each(el, function (error, msg) {\n                result[i] = msg;\n                cb(error, result);\n              });\n            };\n\n            for (var i = 0; i < ary.length; i++) {\n              eachWithIndex(i, ary[i], next);\n            }\n          }\n\n          /*\n           * Decodes data when a payload is maybe expected. Possible binary contents are\n           * decoded from their base64 representation\n           *\n           * @param {String} data, callback method\n           * @api public\n           */\n\n          exports.decodePayload = function (data, binaryType, callback) {\n            if (typeof data != 'string') {\n              return exports.decodePayloadAsBinary(data, binaryType, callback);\n            }\n\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var packet;\n            if (data == '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n\n            var length = '',\n                n,\n                msg;\n\n            for (var i = 0, l = data.length; i < l; i++) {\n              var chr = data.charAt(i);\n\n              if (':' != chr) {\n                length += chr;\n              } else {\n                if ('' == length || length != (n = Number(length))) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                msg = data.substr(i + 1, n);\n\n                if (length != msg.length) {\n                  // parser error - ignoring payload\n                  return callback(err, 0, 1);\n                }\n\n                if (msg.length) {\n                  packet = exports.decodePacket(msg, binaryType, true);\n\n                  if (err.type == packet.type && err.data == packet.data) {\n                    // parser error in individual packet - ignoring payload\n                    return callback(err, 0, 1);\n                  }\n\n                  var ret = callback(packet, i + n, l);\n                  if (false === ret) return;\n                }\n\n                // advance cursor\n                i += n;\n                length = '';\n              }\n            }\n\n            if (length != '') {\n              // parser error - ignoring payload\n              return callback(err, 0, 1);\n            }\n          };\n\n          /**\n           * Encodes multiple messages (payload) as binary.\n           *\n           * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n           * 255><data>\n           *\n           * Example:\n           * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n           *\n           * @param {Array} packets\n           * @return {ArrayBuffer} encoded payload\n           * @api private\n           */\n\n          exports.encodePayloadAsArrayBuffer = function (packets, callback) {\n            if (!packets.length) {\n              return callback(new ArrayBuffer(0));\n            }\n\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (data) {\n                return doneCallback(null, data);\n              });\n            }\n\n            map(packets, encodeOne, function (err, encodedPackets) {\n              var totalLength = encodedPackets.reduce(function (acc, p) {\n                var len;\n                if (typeof p === 'string') {\n                  len = p.length;\n                } else {\n                  len = p.byteLength;\n                }\n                return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n              }, 0);\n\n              var resultArray = new Uint8Array(totalLength);\n\n              var bufferIndex = 0;\n              encodedPackets.forEach(function (p) {\n                var isString = typeof p === 'string';\n                var ab = p;\n                if (isString) {\n                  var view = new Uint8Array(p.length);\n                  for (var i = 0; i < p.length; i++) {\n                    view[i] = p.charCodeAt(i);\n                  }\n                  ab = view.buffer;\n                }\n\n                if (isString) {\n                  // not true binary\n                  resultArray[bufferIndex++] = 0;\n                } else {\n                  // true binary\n                  resultArray[bufferIndex++] = 1;\n                }\n\n                var lenStr = ab.byteLength.toString();\n                for (var i = 0; i < lenStr.length; i++) {\n                  resultArray[bufferIndex++] = parseInt(lenStr[i]);\n                }\n                resultArray[bufferIndex++] = 255;\n\n                var view = new Uint8Array(ab);\n                for (var i = 0; i < view.length; i++) {\n                  resultArray[bufferIndex++] = view[i];\n                }\n              });\n\n              return callback(resultArray.buffer);\n            });\n          };\n\n          /**\n           * Encode as Blob\n           */\n\n          exports.encodePayloadAsBlob = function (packets, callback) {\n            function encodeOne(packet, doneCallback) {\n              exports.encodePacket(packet, true, true, function (encoded) {\n                var binaryIdentifier = new Uint8Array(1);\n                binaryIdentifier[0] = 1;\n                if (typeof encoded === 'string') {\n                  var view = new Uint8Array(encoded.length);\n                  for (var i = 0; i < encoded.length; i++) {\n                    view[i] = encoded.charCodeAt(i);\n                  }\n                  encoded = view.buffer;\n                  binaryIdentifier[0] = 0;\n                }\n\n                var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n\n                var lenStr = len.toString();\n                var lengthAry = new Uint8Array(lenStr.length + 1);\n                for (var i = 0; i < lenStr.length; i++) {\n                  lengthAry[i] = parseInt(lenStr[i]);\n                }\n                lengthAry[lenStr.length] = 255;\n\n                if (Blob) {\n                  var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n                  doneCallback(null, blob);\n                }\n              });\n            }\n\n            map(packets, encodeOne, function (err, results) {\n              return callback(new Blob(results));\n            });\n          };\n\n          /*\n           * Decodes data when a payload is maybe expected. Strings are decoded by\n           * interpreting each byte as a key code for entries marked to start with 0. See\n           * description of encodePayloadAsBinary\n           *\n           * @param {ArrayBuffer} data, callback method\n           * @api public\n           */\n\n          exports.decodePayloadAsBinary = function (data, binaryType, callback) {\n            if (typeof binaryType === 'function') {\n              callback = binaryType;\n              binaryType = null;\n            }\n\n            var bufferTail = data;\n            var buffers = [];\n\n            var numberTooLong = false;\n            while (bufferTail.byteLength > 0) {\n              var tailArray = new Uint8Array(bufferTail);\n              var isString = tailArray[0] === 0;\n              var msgLength = '';\n\n              for (var i = 1;; i++) {\n                if (tailArray[i] == 255) break;\n\n                if (msgLength.length > 310) {\n                  numberTooLong = true;\n                  break;\n                }\n\n                msgLength += tailArray[i];\n              }\n\n              if (numberTooLong) return callback(err, 0, 1);\n\n              bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n              msgLength = parseInt(msgLength);\n\n              var msg = sliceBuffer(bufferTail, 0, msgLength);\n              if (isString) {\n                try {\n                  msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n                } catch (e) {\n                  // iPhone Safari doesn't let you apply to typed arrays\n                  var typed = new Uint8Array(msg);\n                  msg = '';\n                  for (var i = 0; i < typed.length; i++) {\n                    msg += String.fromCharCode(typed[i]);\n                  }\n                }\n              }\n\n              buffers.push(msg);\n              bufferTail = sliceBuffer(bufferTail, msgLength);\n            }\n\n            var total = buffers.length;\n            buffers.forEach(function (buffer, i) {\n              callback(exports.decodePacket(buffer, binaryType, true), i, total);\n            });\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./keys\": 28, \"after\": 6, \"arraybuffer.slice\": 7, \"base64-arraybuffer\": 9, \"blob\": 10, \"has-binary\": 29, \"utf8\": 44 }], 28: [function (_dereq_, module, exports) {\n\n        /**\n         * Gets the keys for an object.\n         *\n         * @return {Array} keys\n         * @api private\n         */\n\n        module.exports = Object.keys || function keys(obj) {\n          var arr = [];\n          var has = Object.prototype.hasOwnProperty;\n\n          for (var i in obj) {\n            if (has.call(obj, i)) {\n              arr.push(i);\n            }\n          }\n          return arr;\n        };\n      }, {}], 29: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                if (obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 33 }], 30: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          /*\n           * Module requirements.\n           */\n\n          var isArray = _dereq_('isarray');\n\n          /**\n           * Module exports.\n           */\n\n          module.exports = hasBinary;\n\n          /**\n           * Checks for binary data.\n           *\n           * Right now only Buffer and ArrayBuffer are supported..\n           *\n           * @param {Object} anything\n           * @api public\n           */\n\n          function hasBinary(data) {\n\n            function _hasBinary(obj) {\n              if (!obj) return false;\n\n              if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                return true;\n              }\n\n              if (isArray(obj)) {\n                for (var i = 0; i < obj.length; i++) {\n                  if (_hasBinary(obj[i])) {\n                    return true;\n                  }\n                }\n              } else if (obj && 'object' == typeof obj) {\n                // see: https://github.com/Automattic/has-binary/pull/4\n                if (obj.toJSON && 'function' == typeof obj.toJSON) {\n                  obj = obj.toJSON();\n                }\n\n                for (var key in obj) {\n                  if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n                    return true;\n                  }\n                }\n              }\n\n              return false;\n            }\n\n            return _hasBinary(data);\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"isarray\": 33 }], 31: [function (_dereq_, module, exports) {\n\n        /**\n         * Module exports.\n         *\n         * Logic borrowed from Modernizr:\n         *\n         *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n         */\n\n        try {\n          module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n        } catch (err) {\n          // if XMLHttp support is disabled in IE then it will throw\n          // when trying to create\n          module.exports = false;\n        }\n      }, {}], 32: [function (_dereq_, module, exports) {\n\n        var indexOf = [].indexOf;\n\n        module.exports = function (arr, obj) {\n          if (indexOf) return arr.indexOf(obj);\n          for (var i = 0; i < arr.length; ++i) {\n            if (arr[i] === obj) return i;\n          }\n          return -1;\n        };\n      }, {}], 33: [function (_dereq_, module, exports) {\n        module.exports = Array.isArray || function (arr) {\n          return Object.prototype.toString.call(arr) == '[object Array]';\n        };\n      }, {}], 34: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n          ;(function () {\n            // Detect the `define` function exposed by asynchronous module loaders. The\n            // strict `define` check is necessary for compatibility with `r.js`.\n            var isLoader = typeof define === \"function\" && define.amd;\n\n            // A set of types used to distinguish objects from primitives.\n            var objectTypes = {\n              \"function\": true,\n              \"object\": true\n            };\n\n            // Detect the `exports` object exposed by CommonJS implementations.\n            var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n            // Use the `global` object exposed by Node (including Browserify via\n            // `insert-module-globals`), Narwhal, and Ringo as the default context,\n            // and the `window` object in browsers. Rhino exports a `global` function\n            // instead.\n            var root = objectTypes[typeof window] && window || this,\n                freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n            if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n              root = freeGlobal;\n            }\n\n            // Public: Initializes JSON 3 using the given `context` object, attaching the\n            // `stringify` and `parse` functions to the specified `exports` object.\n            function runInContext(context, exports) {\n              context || (context = root[\"Object\"]());\n              exports || (exports = root[\"Object\"]());\n\n              // Native constructor aliases.\n              var Number = context[\"Number\"] || root[\"Number\"],\n                  String = context[\"String\"] || root[\"String\"],\n                  Object = context[\"Object\"] || root[\"Object\"],\n                  Date = context[\"Date\"] || root[\"Date\"],\n                  SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n                  TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n                  Math = context[\"Math\"] || root[\"Math\"],\n                  nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n              // Delegate to the native `stringify` and `parse` implementations.\n              if (typeof nativeJSON == \"object\" && nativeJSON) {\n                exports.stringify = nativeJSON.stringify;\n                exports.parse = nativeJSON.parse;\n              }\n\n              // Convenience aliases.\n              var objectProto = Object.prototype,\n                  getClass = objectProto.toString,\n                  isProperty,\n                  forEach,\n                  undef;\n\n              // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n              var isExtended = new Date(-3509827334573292);\n              try {\n                // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n                // results for certain dates in Opera >= 10.53.\n                isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n                // Safari < 2.0.2 stores the internal millisecond time value correctly,\n                // but clips the values returned by the date methods to the range of\n                // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n                isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n              } catch (exception) {}\n\n              // Internal: Determines whether the native `JSON.stringify` and `parse`\n              // implementations are spec-compliant. Based on work by Ken Snyder.\n              function has(name) {\n                if (has[name] !== undef) {\n                  // Return cached feature test result.\n                  return has[name];\n                }\n                var isSupported;\n                if (name == \"bug-string-char-index\") {\n                  // IE <= 7 doesn't support accessing string characters using square\n                  // bracket notation. IE 8 only supports this for primitives.\n                  isSupported = \"a\"[0] != \"a\";\n                } else if (name == \"json\") {\n                  // Indicates whether both `JSON.stringify` and `JSON.parse` are\n                  // supported.\n                  isSupported = has(\"json-stringify\") && has(\"json-parse\");\n                } else {\n                  var value,\n                      serialized = \"{\\\"a\\\":[1,true,false,null,\\\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\\\"]}\";\n                  // Test `JSON.stringify`.\n                  if (name == \"json-stringify\") {\n                    var stringify = exports.stringify,\n                        stringifySupported = typeof stringify == \"function\" && isExtended;\n                    if (stringifySupported) {\n                      // A test function object with a custom `toJSON` method.\n                      (value = function () {\n                        return 1;\n                      }).toJSON = value;\n                      try {\n                        stringifySupported =\n                        // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                        // primitives as object literals.\n                        stringify(0) === \"0\" &&\n                        // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                        // literals.\n                        stringify(new Number()) === \"0\" && stringify(new String()) == '\"\"' &&\n                        // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                        // does not define a canonical JSON representation (this applies to\n                        // objects with `toJSON` properties as well, *unless* they are nested\n                        // within an object or array).\n                        stringify(getClass) === undef &&\n                        // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                        // FF 3.1b3 pass this test.\n                        stringify(undef) === undef &&\n                        // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                        // respectively, if the value is omitted entirely.\n                        stringify() === undef &&\n                        // FF 3.1b1, 2 throw an error if the given value is not a number,\n                        // string, array, object, Boolean, or `null` literal. This applies to\n                        // objects with custom `toJSON` methods as well, unless they are nested\n                        // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                        // methods entirely.\n                        stringify(value) === \"1\" && stringify([value]) == \"[1]\" &&\n                        // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                        // `\"[null]\"`.\n                        stringify([undef]) == \"[null]\" &&\n                        // YUI 3.0.0b1 fails to serialize `null` literals.\n                        stringify(null) == \"null\" &&\n                        // FF 3.1b1, 2 halts serialization if an array contains a function:\n                        // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                        // elides non-JSON values from objects and arrays, unless they\n                        // define custom `toJSON` methods.\n                        stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                        // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                        // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                        stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                        // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                        stringify(null, value) === \"1\" && stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                        // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                        // serialize extended years.\n                        stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                        // The milliseconds are optional in ES 5, but required in 5.1.\n                        stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                        // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                        // four-digit years instead of six-digit years. Credits: @Yaffle.\n                        stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                        // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                        // values less than 1000. Credits: @Yaffle.\n                        stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n                      } catch (exception) {\n                        stringifySupported = false;\n                      }\n                    }\n                    isSupported = stringifySupported;\n                  }\n                  // Test `JSON.parse`.\n                  if (name == \"json-parse\") {\n                    var parse = exports.parse;\n                    if (typeof parse == \"function\") {\n                      try {\n                        // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n                        // Conforming implementations should also coerce the initial argument to\n                        // a string prior to parsing.\n                        if (parse(\"0\") === 0 && !parse(false)) {\n                          // Simple parsing test.\n                          value = parse(serialized);\n                          var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                          if (parseSupported) {\n                            try {\n                              // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                              parseSupported = !parse('\"\\t\"');\n                            } catch (exception) {}\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                                // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                                // certain octal literals.\n                                parseSupported = parse(\"01\") !== 1;\n                              } catch (exception) {}\n                            }\n                            if (parseSupported) {\n                              try {\n                                // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                                // points. These environments, along with FF 3.1b1 and 2,\n                                // also allow trailing commas in JSON objects and arrays.\n                                parseSupported = parse(\"1.\") !== 1;\n                              } catch (exception) {}\n                            }\n                          }\n                        }\n                      } catch (exception) {\n                        parseSupported = false;\n                      }\n                    }\n                    isSupported = parseSupported;\n                  }\n                }\n                return has[name] = !!isSupported;\n              }\n\n              if (!has(\"json\")) {\n                // Common `[[Class]]` name aliases.\n                var functionClass = \"[object Function]\",\n                    dateClass = \"[object Date]\",\n                    numberClass = \"[object Number]\",\n                    stringClass = \"[object String]\",\n                    arrayClass = \"[object Array]\",\n                    booleanClass = \"[object Boolean]\";\n\n                // Detect incomplete support for accessing string characters by index.\n                var charIndexBuggy = has(\"bug-string-char-index\");\n\n                // Define additional utility methods if the `Date` methods are buggy.\n                if (!isExtended) {\n                  var floor = Math.floor;\n                  // A mapping between the months of the year and the number of days between\n                  // January 1st and the first of the respective month.\n                  var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n                  // Internal: Calculates the number of days between the Unix epoch and the\n                  // first day of the given month.\n                  var getDay = function getDay(year, month) {\n                    return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n                  };\n                }\n\n                // Internal: Determines if a property is a direct property of the given\n                // object. Delegates to the native `Object#hasOwnProperty` method.\n                if (!(isProperty = objectProto.hasOwnProperty)) {\n                  isProperty = function (property) {\n                    var members = {},\n                        constructor;\n                    if ((members.__proto__ = null, members.__proto__ = {\n                      // The *proto* property cannot be set multiple times in recent\n                      // versions of Firefox and SeaMonkey.\n                      \"toString\": 1\n                    }, members).toString != getClass) {\n                      // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n                      // supports the mutable *proto* property.\n                      isProperty = function (property) {\n                        // Capture and break the object's prototype chain (see section 8.6.2\n                        // of the ES 5.1 spec). The parenthesized expression prevents an\n                        // unsafe transformation by the Closure Compiler.\n                        var original = this.__proto__,\n                            result = (property in (this.__proto__ = null, this));\n                        // Restore the original prototype chain.\n                        this.__proto__ = original;\n                        return result;\n                      };\n                    } else {\n                      // Capture a reference to the top-level `Object` constructor.\n                      constructor = members.constructor;\n                      // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n                      // other environments.\n                      isProperty = function (property) {\n                        var parent = (this.constructor || constructor).prototype;\n                        return property in this && !(property in parent && this[property] === parent[property]);\n                      };\n                    }\n                    members = null;\n                    return isProperty.call(this, property);\n                  };\n                }\n\n                // Internal: Normalizes the `for...in` iteration algorithm across\n                // environments. Each enumerated key is yielded to a `callback` function.\n                forEach = function (object, callback) {\n                  var size = 0,\n                      Properties,\n                      members,\n                      property;\n\n                  // Tests for bugs in the current environment's `for...in` algorithm. The\n                  // `valueOf` property inherits the non-enumerable flag from\n                  // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n                  (Properties = function () {\n                    this.valueOf = 0;\n                  }).prototype.valueOf = 0;\n\n                  // Iterate over a new instance of the `Properties` class.\n                  members = new Properties();\n                  for (property in members) {\n                    // Ignore all properties inherited from `Object.prototype`.\n                    if (isProperty.call(members, property)) {\n                      size++;\n                    }\n                  }\n                  Properties = members = null;\n\n                  // Normalize the iteration algorithm.\n                  if (!size) {\n                    // A list of non-enumerable properties inherited from `Object.prototype`.\n                    members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n                    // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n                    // properties.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          length;\n                      var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n                      for (property in object) {\n                        // Gecko <= 1.0 enumerates the `prototype` property of functions under\n                        // certain conditions; IE does not.\n                        if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for each non-enumerable property.\n                      for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n                    };\n                  } else if (size == 2) {\n                    // Safari <= 2.0.4 enumerates shadowed properties twice.\n                    forEach = function (object, callback) {\n                      // Create a set of iterated properties.\n                      var members = {},\n                          isFunction = getClass.call(object) == functionClass,\n                          property;\n                      for (property in object) {\n                        // Store each property name to prevent double enumeration. The\n                        // `prototype` property of functions is not enumerated due to cross-\n                        // environment inconsistencies.\n                        if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                          callback(property);\n                        }\n                      }\n                    };\n                  } else {\n                    // No bugs detected; use the standard `for...in` algorithm.\n                    forEach = function (object, callback) {\n                      var isFunction = getClass.call(object) == functionClass,\n                          property,\n                          isConstructor;\n                      for (property in object) {\n                        if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                          callback(property);\n                        }\n                      }\n                      // Manually invoke the callback for the `constructor` property due to\n                      // cross-environment inconsistencies.\n                      if (isConstructor || isProperty.call(object, property = \"constructor\")) {\n                        callback(property);\n                      }\n                    };\n                  }\n                  return forEach(object, callback);\n                };\n\n                // Public: Serializes a JavaScript `value` as a JSON string. The optional\n                // `filter` argument may specify either a function that alters how object and\n                // array members are serialized, or an array of strings and numbers that\n                // indicates which properties should be serialized. The optional `width`\n                // argument may be either a string or number that specifies the indentation\n                // level of the output.\n                if (!has(\"json-stringify\")) {\n                  // Internal: A map of control characters and their escaped equivalents.\n                  var Escapes = {\n                    92: \"\\\\\\\\\",\n                    34: '\\\\\"',\n                    8: \"\\\\b\",\n                    12: \"\\\\f\",\n                    10: \"\\\\n\",\n                    13: \"\\\\r\",\n                    9: \"\\\\t\"\n                  };\n\n                  // Internal: Converts `value` into a zero-padded string such that its\n                  // length is at least equal to `width`. The `width` must be <= 6.\n                  var leadingZeroes = \"000000\";\n                  var toPaddedString = function toPaddedString(width, value) {\n                    // The `|| 0` expression is necessary to work around a bug in\n                    // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n                    return (leadingZeroes + (value || 0)).slice(-width);\n                  };\n\n                  // Internal: Double-quotes a string `value`, replacing all ASCII control\n                  // characters (characters with code unit values between 0 and 31) with\n                  // their escaped equivalents. This is an implementation of the\n                  // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n                  var unicodePrefix = \"\\\\u00\";\n                  var quote = function quote(value) {\n                    var result = '\"',\n                        index = 0,\n                        length = value.length,\n                        useCharIndex = !charIndexBuggy || length > 10;\n                    var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n                    for (; index < length; index++) {\n                      var charCode = value.charCodeAt(index);\n                      // If the character is a control character, append its Unicode or\n                      // shorthand escape sequence; otherwise, append the character as-is.\n                      switch (charCode) {\n                        case 8:case 9:case 10:case 12:case 13:case 34:case 92:\n                          result += Escapes[charCode];\n                          break;\n                        default:\n                          if (charCode < 32) {\n                            result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                            break;\n                          }\n                          result += useCharIndex ? symbols[index] : value.charAt(index);\n                      }\n                    }\n                    return result + '\"';\n                  };\n\n                  // Internal: Recursively serializes an object. Implements the\n                  // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n                  var serialize = function serialize(property, object, callback, properties, whitespace, indentation, stack) {\n                    var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n                    try {\n                      // Necessary for host object support.\n                      value = object[property];\n                    } catch (exception) {}\n                    if (typeof value == \"object\" && value) {\n                      className = getClass.call(value);\n                      if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n                        if (value > -1 / 0 && value < 1 / 0) {\n                          // Dates are serialized according to the `Date#toJSON` method\n                          // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                          // for the ISO 8601 date time string format.\n                          if (getDay) {\n                            // Manually compute the year, month, date, hours, minutes,\n                            // seconds, and milliseconds if the `getUTC*` methods are\n                            // buggy. Adapted from @Yaffle's `date-shim` project.\n                            date = floor(value / 864e5);\n                            for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                            for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                            date = 1 + date - getDay(year, month);\n                            // The `time` value specifies the time within the day (see ES\n                            // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                            // to compute `A modulo B`, as the `%` operator does not\n                            // correspond to the `modulo` operation for negative numbers.\n                            time = (value % 864e5 + 864e5) % 864e5;\n                            // The hours, minutes, seconds, and milliseconds are obtained by\n                            // decomposing the time within the day. See section 15.9.1.10.\n                            hours = floor(time / 36e5) % 24;\n                            minutes = floor(time / 6e4) % 60;\n                            seconds = floor(time / 1e3) % 60;\n                            milliseconds = time % 1e3;\n                          } else {\n                            year = value.getUTCFullYear();\n                            month = value.getUTCMonth();\n                            date = value.getUTCDate();\n                            hours = value.getUTCHours();\n                            minutes = value.getUTCMinutes();\n                            seconds = value.getUTCSeconds();\n                            milliseconds = value.getUTCMilliseconds();\n                          }\n                          // Serialize extended years correctly.\n                          value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                          // Months, dates, hours, minutes, and seconds should have two\n                          // digits; milliseconds should have three.\n                          \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                          // Milliseconds are optional in ES 5.0, but required in 5.1.\n                          \".\" + toPaddedString(3, milliseconds) + \"Z\";\n                        } else {\n                          value = null;\n                        }\n                      } else if (typeof value.toJSON == \"function\" && (className != numberClass && className != stringClass && className != arrayClass || isProperty.call(value, \"toJSON\"))) {\n                        // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n                        // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n                        // ignores all `toJSON` methods on these objects unless they are\n                        // defined directly on an instance.\n                        value = value.toJSON(property);\n                      }\n                    }\n                    if (callback) {\n                      // If a replacement function was provided, call it to obtain the value\n                      // for serialization.\n                      value = callback.call(object, property, value);\n                    }\n                    if (value === null) {\n                      return \"null\";\n                    }\n                    className = getClass.call(value);\n                    if (className == booleanClass) {\n                      // Booleans are represented literally.\n                      return \"\" + value;\n                    } else if (className == numberClass) {\n                      // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n                      // `\"null\"`.\n                      return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n                    } else if (className == stringClass) {\n                      // Strings are double-quoted and escaped.\n                      return quote(\"\" + value);\n                    }\n                    // Recursively serialize objects and arrays.\n                    if (typeof value == \"object\") {\n                      // Check for cyclic structures. This is a linear search; performance\n                      // is inversely proportional to the number of unique nested objects.\n                      for (length = stack.length; length--;) {\n                        if (stack[length] === value) {\n                          // Cyclic structures cannot be serialized by `JSON.stringify`.\n                          throw TypeError();\n                        }\n                      }\n                      // Add the object to the stack of traversed objects.\n                      stack.push(value);\n                      results = [];\n                      // Save the current indentation level and indent one additional level.\n                      prefix = indentation;\n                      indentation += whitespace;\n                      if (className == arrayClass) {\n                        // Recursively serialize array elements.\n                        for (index = 0, length = value.length; index < length; index++) {\n                          element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                          results.push(element === undef ? \"null\" : element);\n                        }\n                        result = results.length ? whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : \"[\" + results.join(\",\") + \"]\" : \"[]\";\n                      } else {\n                        // Recursively serialize object members. Members are selected from\n                        // either a user-specified list of property names, or the object\n                        // itself.\n                        forEach(properties || value, function (property) {\n                          var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                          if (element !== undef) {\n                            // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                            // is not the empty string, let `member` {quote(property) + \":\"}\n                            // be the concatenation of `member` and the `space` character.\"\n                            // The \"`space` character\" refers to the literal space\n                            // character, not the `space` {width} argument provided to\n                            // `JSON.stringify`.\n                            results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                          }\n                        });\n                        result = results.length ? whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : \"{\" + results.join(\",\") + \"}\" : \"{}\";\n                      }\n                      // Remove the object from the traversed object stack.\n                      stack.pop();\n                      return result;\n                    }\n                  };\n\n                  // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n                  exports.stringify = function (source, filter, width) {\n                    var whitespace, callback, properties, className;\n                    if (objectTypes[typeof filter] && filter) {\n                      if ((className = getClass.call(filter)) == functionClass) {\n                        callback = filter;\n                      } else if (className == arrayClass) {\n                        // Convert the property names array into a makeshift set.\n                        properties = {};\n                        for (var index = 0, length = filter.length, value; index < length; value = filter[index++], (className = getClass.call(value), className == stringClass || className == numberClass) && (properties[value] = 1));\n                      }\n                    }\n                    if (width) {\n                      if ((className = getClass.call(width)) == numberClass) {\n                        // Convert the `width` to an integer and create a string containing\n                        // `width` number of space characters.\n                        if ((width -= width % 1) > 0) {\n                          for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n                        }\n                      } else if (className == stringClass) {\n                        whitespace = width.length <= 10 ? width : width.slice(0, 10);\n                      }\n                    }\n                    // Opera <= 7.54u2 discards the values associated with empty string keys\n                    // (`\"\"`) only if they are used directly within an object member list\n                    // (e.g., `!(\"\" in { \"\": 1})`).\n                    return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n                  };\n                }\n\n                // Public: Parses a JSON source string.\n                if (!has(\"json-parse\")) {\n                  var fromCharCode = String.fromCharCode;\n\n                  // Internal: A map of escaped control characters and their unescaped\n                  // equivalents.\n                  var Unescapes = {\n                    92: \"\\\\\",\n                    34: '\"',\n                    47: \"/\",\n                    98: \"\\b\",\n                    116: \"\\t\",\n                    110: \"\\n\",\n                    102: \"\\f\",\n                    114: \"\\r\"\n                  };\n\n                  // Internal: Stores the parser state.\n                  var Index, Source;\n\n                  // Internal: Resets the parser state and throws a `SyntaxError`.\n                  var abort = function abort() {\n                    Index = Source = null;\n                    throw SyntaxError();\n                  };\n\n                  // Internal: Returns the next token, or `\"$\"` if the parser has reached\n                  // the end of the source string. A token may be a string, number, `null`\n                  // literal, or Boolean literal.\n                  var lex = function lex() {\n                    var source = Source,\n                        length = source.length,\n                        value,\n                        begin,\n                        position,\n                        isSigned,\n                        charCode;\n                    while (Index < length) {\n                      charCode = source.charCodeAt(Index);\n                      switch (charCode) {\n                        case 9:case 10:case 13:case 32:\n                          // Skip whitespace tokens, including tabs, carriage returns, line\n                          // feeds, and space characters.\n                          Index++;\n                          break;\n                        case 123:case 125:case 91:case 93:case 58:case 44:\n                          // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                          // the current position.\n                          value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                          Index++;\n                          return value;\n                        case 34:\n                          // `\"` delimits a JSON string; advance to the next character and\n                          // begin parsing the string. String tokens are prefixed with the\n                          // sentinel `@` character to distinguish them from punctuators and\n                          // end-of-string tokens.\n                          for (value = \"@\", Index++; Index < length;) {\n                            charCode = source.charCodeAt(Index);\n                            if (charCode < 32) {\n                              // Unescaped ASCII control characters (those with a code unit\n                              // less than the space character) are not permitted.\n                              abort();\n                            } else if (charCode == 92) {\n                              // A reverse solidus (`\\`) marks the beginning of an escaped\n                              // control character (including `\"`, `\\`, and `/`) or Unicode\n                              // escape sequence.\n                              charCode = source.charCodeAt(++Index);\n                              switch (charCode) {\n                                case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:\n                                  // Revive escaped control characters.\n                                  value += Unescapes[charCode];\n                                  Index++;\n                                  break;\n                                case 117:\n                                  // `\\u` marks the beginning of a Unicode escape sequence.\n                                  // Advance to the first character and validate the\n                                  // four-digit code point.\n                                  begin = ++Index;\n                                  for (position = Index + 4; Index < position; Index++) {\n                                    charCode = source.charCodeAt(Index);\n                                    // A valid sequence comprises four hexdigits (case-\n                                    // insensitive) that form a single hexadecimal value.\n                                    if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                                      // Invalid Unicode escape sequence.\n                                      abort();\n                                    }\n                                  }\n                                  // Revive the escaped character.\n                                  value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                                  break;\n                                default:\n                                  // Invalid escape sequence.\n                                  abort();\n                              }\n                            } else {\n                              if (charCode == 34) {\n                                // An unescaped double-quote character marks the end of the\n                                // string.\n                                break;\n                              }\n                              charCode = source.charCodeAt(Index);\n                              begin = Index;\n                              // Optimize for the common case where a string is valid.\n                              while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                                charCode = source.charCodeAt(++Index);\n                              }\n                              // Append the string as-is.\n                              value += source.slice(begin, Index);\n                            }\n                          }\n                          if (source.charCodeAt(Index) == 34) {\n                            // Advance to the next character and return the revived string.\n                            Index++;\n                            return value;\n                          }\n                          // Unterminated string.\n                          abort();\n                        default:\n                          // Parse numbers and literals.\n                          begin = Index;\n                          // Advance past the negative sign, if one is specified.\n                          if (charCode == 45) {\n                            isSigned = true;\n                            charCode = source.charCodeAt(++Index);\n                          }\n                          // Parse an integer or floating-point value.\n                          if (charCode >= 48 && charCode <= 57) {\n                            // Leading zeroes are interpreted as octal literals.\n                            if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {\n                              // Illegal octal literal.\n                              abort();\n                            }\n                            isSigned = false;\n                            // Parse the integer component.\n                            for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++);\n                            // Floats cannot contain a leading decimal point; however, this\n                            // case is already accounted for by the parser.\n                            if (source.charCodeAt(Index) == 46) {\n                              position = ++Index;\n                              // Parse the decimal component.\n                              for (; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal trailing decimal.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Parse exponents. The `e` denoting the exponent is\n                            // case-insensitive.\n                            charCode = source.charCodeAt(Index);\n                            if (charCode == 101 || charCode == 69) {\n                              charCode = source.charCodeAt(++Index);\n                              // Skip past the sign following the exponent, if one is\n                              // specified.\n                              if (charCode == 43 || charCode == 45) {\n                                Index++;\n                              }\n                              // Parse the exponential component.\n                              for (position = Index; position < length && (charCode = source.charCodeAt(position), charCode >= 48 && charCode <= 57); position++);\n                              if (position == Index) {\n                                // Illegal empty exponent.\n                                abort();\n                              }\n                              Index = position;\n                            }\n                            // Coerce the parsed value to a JavaScript number.\n                            return +source.slice(begin, Index);\n                          }\n                          // A negative sign may only precede numbers.\n                          if (isSigned) {\n                            abort();\n                          }\n                          // `true`, `false`, and `null` literals.\n                          if (source.slice(Index, Index + 4) == \"true\") {\n                            Index += 4;\n                            return true;\n                          } else if (source.slice(Index, Index + 5) == \"false\") {\n                            Index += 5;\n                            return false;\n                          } else if (source.slice(Index, Index + 4) == \"null\") {\n                            Index += 4;\n                            return null;\n                          }\n                          // Unrecognized token.\n                          abort();\n                      }\n                    }\n                    // Return the sentinel `$` character if the parser has reached the end\n                    // of the source string.\n                    return \"$\";\n                  };\n\n                  // Internal: Parses a JSON `value` token.\n                  var get = function get(value) {\n                    var results, hasMembers;\n                    if (value == \"$\") {\n                      // Unexpected end of input.\n                      abort();\n                    }\n                    if (typeof value == \"string\") {\n                      if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n                        // Remove the sentinel `@` character.\n                        return value.slice(1);\n                      }\n                      // Parse object and array literals.\n                      if (value == \"[\") {\n                        // Parses a JSON array, returning a new JavaScript array.\n                        results = [];\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing square bracket marks the end of the array literal.\n                          if (value == \"]\") {\n                            break;\n                          }\n                          // If the array literal contains elements, the current token\n                          // should be a comma separating the previous element from the\n                          // next.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"]\") {\n                                // Unexpected trailing `,` in array literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each array element.\n                              abort();\n                            }\n                          }\n                          // Elisions and leading commas are not permitted.\n                          if (value == \",\") {\n                            abort();\n                          }\n                          results.push(get(value));\n                        }\n                        return results;\n                      } else if (value == \"{\") {\n                        // Parses a JSON object, returning a new JavaScript object.\n                        results = {};\n                        for (;; hasMembers || (hasMembers = true)) {\n                          value = lex();\n                          // A closing curly brace marks the end of the object literal.\n                          if (value == \"}\") {\n                            break;\n                          }\n                          // If the object literal contains members, the current token\n                          // should be a comma separator.\n                          if (hasMembers) {\n                            if (value == \",\") {\n                              value = lex();\n                              if (value == \"}\") {\n                                // Unexpected trailing `,` in object literal.\n                                abort();\n                              }\n                            } else {\n                              // A `,` must separate each object member.\n                              abort();\n                            }\n                          }\n                          // Leading commas are not permitted, object property names must be\n                          // double-quoted strings, and a `:` must separate each property\n                          // name and value.\n                          if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                            abort();\n                          }\n                          results[value.slice(1)] = get(lex());\n                        }\n                        return results;\n                      }\n                      // Unexpected token encountered.\n                      abort();\n                    }\n                    return value;\n                  };\n\n                  // Internal: Updates a traversed object member.\n                  var update = function update(source, property, callback) {\n                    var element = walk(source, property, callback);\n                    if (element === undef) {\n                      delete source[property];\n                    } else {\n                      source[property] = element;\n                    }\n                  };\n\n                  // Internal: Recursively traverses a parsed JSON object, invoking the\n                  // `callback` function for each value. This is an implementation of the\n                  // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n                  var walk = function walk(source, property, callback) {\n                    var value = source[property],\n                        length;\n                    if (typeof value == \"object\" && value) {\n                      // `forEach` can't be used to traverse an array in Opera <= 8.54\n                      // because its `Object#hasOwnProperty` implementation returns `false`\n                      // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n                      if (getClass.call(value) == arrayClass) {\n                        for (length = value.length; length--;) {\n                          update(value, length, callback);\n                        }\n                      } else {\n                        forEach(value, function (property) {\n                          update(value, property, callback);\n                        });\n                      }\n                    }\n                    return callback.call(source, property, value);\n                  };\n\n                  // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n                  exports.parse = function (source, callback) {\n                    var result, value;\n                    Index = 0;\n                    Source = \"\" + source;\n                    result = get(lex());\n                    // If a JSON string contains multiple tokens, it is invalid.\n                    if (lex() != \"$\") {\n                      abort();\n                    }\n                    // Reset the parser state.\n                    Index = Source = null;\n                    return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n                  };\n                }\n              }\n\n              exports[\"runInContext\"] = runInContext;\n              return exports;\n            }\n\n            if (freeExports && !isLoader) {\n              // Export for CommonJS environments.\n              runInContext(root, freeExports);\n            } else {\n              // Export for web browsers and JavaScript engines.\n              var nativeJSON = root.JSON,\n                  previousJSON = root[\"JSON3\"],\n                  isRestored = false;\n\n              var JSON3 = runInContext(root, root[\"JSON3\"] = {\n                // Public: Restores the original value of the global `JSON` object and\n                // returns a reference to the `JSON3` object.\n                \"noConflict\": function noConflict() {\n                  if (!isRestored) {\n                    isRestored = true;\n                    root.JSON = nativeJSON;\n                    root[\"JSON3\"] = previousJSON;\n                    nativeJSON = previousJSON = null;\n                  }\n                  return JSON3;\n                }\n              });\n\n              root.JSON = {\n                \"parse\": JSON3.parse,\n                \"stringify\": JSON3.stringify\n              };\n            }\n\n            // Export for asynchronous module loaders.\n            if (isLoader) {\n              define(function () {\n                return JSON3;\n              });\n            }\n          }).call(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 35: [function (_dereq_, module, exports) {\n        /**\n         * Helpers.\n         */\n\n        var s = 1000;\n        var m = s * 60;\n        var h = m * 60;\n        var d = h * 24;\n        var y = d * 365.25;\n\n        /**\n         * Parse or format the given `val`.\n         *\n         * Options:\n         *\n         *  - `long` verbose formatting [false]\n         *\n         * @param {String|Number} val\n         * @param {Object} options\n         * @return {String|Number}\n         * @api public\n         */\n\n        module.exports = function (val, options) {\n          options = options || {};\n          if ('string' == typeof val) return parse(val);\n          return options.long ? long(val) : short(val);\n        };\n\n        /**\n         * Parse the given `str` and return milliseconds.\n         *\n         * @param {String} str\n         * @return {Number}\n         * @api private\n         */\n\n        function parse(str) {\n          str = '' + str;\n          if (str.length > 10000) return;\n          var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n          if (!match) return;\n          var n = parseFloat(match[1]);\n          var type = (match[2] || 'ms').toLowerCase();\n          switch (type) {\n            case 'years':\n            case 'year':\n            case 'yrs':\n            case 'yr':\n            case 'y':\n              return n * y;\n            case 'days':\n            case 'day':\n            case 'd':\n              return n * d;\n            case 'hours':\n            case 'hour':\n            case 'hrs':\n            case 'hr':\n            case 'h':\n              return n * h;\n            case 'minutes':\n            case 'minute':\n            case 'mins':\n            case 'min':\n            case 'm':\n              return n * m;\n            case 'seconds':\n            case 'second':\n            case 'secs':\n            case 'sec':\n            case 's':\n              return n * s;\n            case 'milliseconds':\n            case 'millisecond':\n            case 'msecs':\n            case 'msec':\n            case 'ms':\n              return n;\n          }\n        }\n\n        /**\n         * Short format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function short(ms) {\n          if (ms >= d) return Math.round(ms / d) + 'd';\n          if (ms >= h) return Math.round(ms / h) + 'h';\n          if (ms >= m) return Math.round(ms / m) + 'm';\n          if (ms >= s) return Math.round(ms / s) + 's';\n          return ms + 'ms';\n        }\n\n        /**\n         * Long format for `ms`.\n         *\n         * @param {Number} ms\n         * @return {String}\n         * @api private\n         */\n\n        function long(ms) {\n          return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n        }\n\n        /**\n         * Pluralization helper.\n         */\n\n        function plural(ms, n, name) {\n          if (ms < n) return;\n          if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n          return Math.ceil(ms / n) + ' ' + name + 's';\n        }\n      }, {}], 36: [function (_dereq_, module, exports) {\n        (function (global) {\n          /**\n           * JSON parse.\n           *\n           * @see Based on jQuery#parseJSON (MIT) and JSON2\n           * @api private\n           */\n\n          var rvalidchars = /^[\\],:{}\\s]*$/;\n          var rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n          var rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n          var rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\n          var rtrimLeft = /^\\s+/;\n          var rtrimRight = /\\s+$/;\n\n          module.exports = function parsejson(data) {\n            if ('string' != typeof data || !data) {\n              return null;\n            }\n\n            data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n            // Attempt to parse using the native JSON parser first\n            if (global.JSON && JSON.parse) {\n              return JSON.parse(data);\n            }\n\n            if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n              return new Function('return ' + data)();\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 37: [function (_dereq_, module, exports) {\n        /**\n         * Compiles a querystring\n         * Returns string representation of the object\n         *\n         * @param {Object}\n         * @api private\n         */\n\n        exports.encode = function (obj) {\n          var str = '';\n\n          for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n              if (str.length) str += '&';\n              str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n            }\n          }\n\n          return str;\n        };\n\n        /**\n         * Parses a simple querystring into an object\n         *\n         * @param {String} qs\n         * @api private\n         */\n\n        exports.decode = function (qs) {\n          var qry = {};\n          var pairs = qs.split('&');\n          for (var i = 0, l = pairs.length; i < l; i++) {\n            var pair = pairs[i].split('=');\n            qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n          }\n          return qry;\n        };\n      }, {}], 38: [function (_dereq_, module, exports) {\n        /**\n         * Parses an URI\n         *\n         * @author Steven Levithan <stevenlevithan.com> (MIT license)\n         * @api private\n         */\n\n        var re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\n        var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\n        module.exports = function parseuri(str) {\n          var src = str,\n              b = str.indexOf('['),\n              e = str.indexOf(']');\n\n          if (b != -1 && e != -1) {\n            str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n          }\n\n          var m = re.exec(str || ''),\n              uri = {},\n              i = 14;\n\n          while (i--) {\n            uri[parts[i]] = m[i] || '';\n          }\n\n          if (b != -1 && e != -1) {\n            uri.source = src;\n            uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n            uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n            uri.ipv6uri = true;\n          }\n\n          return uri;\n        };\n      }, {}], 39: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*global Blob,File*/\n\n          /**\n           * Module requirements\n           */\n\n          var isArray = _dereq_('isarray');\n          var isBuf = _dereq_('./is-buffer');\n\n          /**\n           * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n           * Anything with blobs or files should be fed through removeBlobs before coming\n           * here.\n           *\n           * @param {Object} packet - socket.io event packet\n           * @return {Object} with deconstructed packet and list of buffers\n           * @api public\n           */\n\n          exports.deconstructPacket = function (packet) {\n            var buffers = [];\n            var packetData = packet.data;\n\n            function _deconstructPacket(data) {\n              if (!data) return data;\n\n              if (isBuf(data)) {\n                var placeholder = { _placeholder: true, num: buffers.length };\n                buffers.push(data);\n                return placeholder;\n              } else if (isArray(data)) {\n                var newData = new Array(data.length);\n                for (var i = 0; i < data.length; i++) {\n                  newData[i] = _deconstructPacket(data[i]);\n                }\n                return newData;\n              } else if ('object' == typeof data && !(data instanceof Date)) {\n                var newData = {};\n                for (var key in data) {\n                  newData[key] = _deconstructPacket(data[key]);\n                }\n                return newData;\n              }\n              return data;\n            }\n\n            var pack = packet;\n            pack.data = _deconstructPacket(packetData);\n            pack.attachments = buffers.length; // number of binary 'attachments'\n            return { packet: pack, buffers: buffers };\n          };\n\n          /**\n           * Reconstructs a binary packet from its placeholder packet and buffers\n           *\n           * @param {Object} packet - event packet with placeholders\n           * @param {Array} buffers - binary buffers to put in placeholder positions\n           * @return {Object} reconstructed packet\n           * @api public\n           */\n\n          exports.reconstructPacket = function (packet, buffers) {\n            var curPlaceHolder = 0;\n\n            function _reconstructPacket(data) {\n              if (data && data._placeholder) {\n                var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n                return buf;\n              } else if (isArray(data)) {\n                for (var i = 0; i < data.length; i++) {\n                  data[i] = _reconstructPacket(data[i]);\n                }\n                return data;\n              } else if (data && 'object' == typeof data) {\n                for (var key in data) {\n                  data[key] = _reconstructPacket(data[key]);\n                }\n                return data;\n              }\n              return data;\n            }\n\n            packet.data = _reconstructPacket(packet.data);\n            packet.attachments = undefined; // no longer useful\n            return packet;\n          };\n\n          /**\n           * Asynchronously removes Blobs or Files from data via\n           * FileReader's readAsArrayBuffer method. Used before encoding\n           * data as msgpack. Calls callback with the blobless data.\n           *\n           * @param {Object} data\n           * @param {Function} callback\n           * @api private\n           */\n\n          exports.removeBlobs = function (data, callback) {\n            function _removeBlobs(obj, curKey, containingObject) {\n              if (!obj) return obj;\n\n              // convert any blob\n              if (global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n                pendingBlobs++;\n\n                // async filereader\n                var fileReader = new FileReader();\n                fileReader.onload = function () {\n                  // this.result == arraybuffer\n                  if (containingObject) {\n                    containingObject[curKey] = this.result;\n                  } else {\n                    bloblessData = this.result;\n                  }\n\n                  // if nothing pending its callback time\n                  if (! --pendingBlobs) {\n                    callback(bloblessData);\n                  }\n                };\n\n                fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n              } else if (isArray(obj)) {\n                  // handle array\n                  for (var i = 0; i < obj.length; i++) {\n                    _removeBlobs(obj[i], i, obj);\n                  }\n                } else if (obj && 'object' == typeof obj && !isBuf(obj)) {\n                  // and object\n                  for (var key in obj) {\n                    _removeBlobs(obj[key], key, obj);\n                  }\n                }\n            }\n\n            var pendingBlobs = 0;\n            var bloblessData = data;\n            _removeBlobs(bloblessData);\n            if (!pendingBlobs) {\n              callback(bloblessData);\n            }\n          };\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, { \"./is-buffer\": 41, \"isarray\": 33 }], 40: [function (_dereq_, module, exports) {\n\n        /**\n         * Module dependencies.\n         */\n\n        var debug = _dereq_('debug')('socket.io-parser');\n        var json = _dereq_('json3');\n        var isArray = _dereq_('isarray');\n        var Emitter = _dereq_('component-emitter');\n        var binary = _dereq_('./binary');\n        var isBuf = _dereq_('./is-buffer');\n\n        /**\n         * Protocol version.\n         *\n         * @api public\n         */\n\n        exports.protocol = 4;\n\n        /**\n         * Packet types.\n         *\n         * @api public\n         */\n\n        exports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n\n        /**\n         * Packet type `connect`.\n         *\n         * @api public\n         */\n\n        exports.CONNECT = 0;\n\n        /**\n         * Packet type `disconnect`.\n         *\n         * @api public\n         */\n\n        exports.DISCONNECT = 1;\n\n        /**\n         * Packet type `event`.\n         *\n         * @api public\n         */\n\n        exports.EVENT = 2;\n\n        /**\n         * Packet type `ack`.\n         *\n         * @api public\n         */\n\n        exports.ACK = 3;\n\n        /**\n         * Packet type `error`.\n         *\n         * @api public\n         */\n\n        exports.ERROR = 4;\n\n        /**\n         * Packet type 'binary event'\n         *\n         * @api public\n         */\n\n        exports.BINARY_EVENT = 5;\n\n        /**\n         * Packet type `binary ack`. For acks with binary arguments.\n         *\n         * @api public\n         */\n\n        exports.BINARY_ACK = 6;\n\n        /**\n         * Encoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Encoder = Encoder;\n\n        /**\n         * Decoder constructor.\n         *\n         * @api public\n         */\n\n        exports.Decoder = Decoder;\n\n        /**\n         * A socket.io Encoder instance\n         *\n         * @api public\n         */\n\n        function Encoder() {}\n\n        /**\n         * Encode a packet as a single string if non-binary, or as a\n         * buffer sequence, depending on packet type.\n         *\n         * @param {Object} obj - packet object\n         * @param {Function} callback - function to handle encodings (likely engine.write)\n         * @return Calls callback with Array of encodings\n         * @api public\n         */\n\n        Encoder.prototype.encode = function (obj, callback) {\n          debug('encoding packet %j', obj);\n\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            encodeAsBinary(obj, callback);\n          } else {\n            var encoding = encodeAsString(obj);\n            callback([encoding]);\n          }\n        };\n\n        /**\n         * Encode packet as string.\n         *\n         * @param {Object} packet\n         * @return {String} encoded\n         * @api private\n         */\n\n        function encodeAsString(obj) {\n          var str = '';\n          var nsp = false;\n\n          // first is type\n          str += obj.type;\n\n          // attachments if we have them\n          if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n            str += obj.attachments;\n            str += '-';\n          }\n\n          // if we have a namespace other than `/`\n          // we append it followed by a comma `,`\n          if (obj.nsp && '/' != obj.nsp) {\n            nsp = true;\n            str += obj.nsp;\n          }\n\n          // immediately followed by the id\n          if (null != obj.id) {\n            if (nsp) {\n              str += ',';\n              nsp = false;\n            }\n            str += obj.id;\n          }\n\n          // json data\n          if (null != obj.data) {\n            if (nsp) str += ',';\n            str += json.stringify(obj.data);\n          }\n\n          debug('encoded %j as %s', obj, str);\n          return str;\n        }\n\n        /**\n         * Encode packet as 'buffer sequence' by removing blobs, and\n         * deconstructing packet into object with placeholders and\n         * a list of buffers.\n         *\n         * @param {Object} packet\n         * @return {Buffer} encoded\n         * @api private\n         */\n\n        function encodeAsBinary(obj, callback) {\n\n          function writeEncoding(bloblessData) {\n            var deconstruction = binary.deconstructPacket(bloblessData);\n            var pack = encodeAsString(deconstruction.packet);\n            var buffers = deconstruction.buffers;\n\n            buffers.unshift(pack); // add packet info to beginning of data list\n            callback(buffers); // write all the buffers\n          }\n\n          binary.removeBlobs(obj, writeEncoding);\n        }\n\n        /**\n         * A socket.io Decoder instance\n         *\n         * @return {Object} decoder\n         * @api public\n         */\n\n        function Decoder() {\n          this.reconstructor = null;\n        }\n\n        /**\n         * Mix in `Emitter` with Decoder.\n         */\n\n        Emitter(Decoder.prototype);\n\n        /**\n         * Decodes an ecoded packet string into packet JSON.\n         *\n         * @param {String} obj - encoded packet\n         * @return {Object} packet\n         * @api public\n         */\n\n        Decoder.prototype.add = function (obj) {\n          var packet;\n          if ('string' == typeof obj) {\n            packet = decodeString(obj);\n            if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) {\n              // binary packet's json\n              this.reconstructor = new BinaryReconstructor(packet);\n\n              // no attachments, labeled binary but no binary data to follow\n              if (this.reconstructor.reconPack.attachments === 0) {\n                this.emit('decoded', packet);\n              }\n            } else {\n              // non-binary full packet\n              this.emit('decoded', packet);\n            }\n          } else if (isBuf(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n              throw new Error('got binary data when not reconstructing a packet');\n            } else {\n              packet = this.reconstructor.takeBinaryData(obj);\n              if (packet) {\n                // received final buffer\n                this.reconstructor = null;\n                this.emit('decoded', packet);\n              }\n            }\n          } else {\n            throw new Error('Unknown type: ' + obj);\n          }\n        };\n\n        /**\n         * Decode a packet String (JSON data)\n         *\n         * @param {String} str\n         * @return {Object} packet\n         * @api private\n         */\n\n        function decodeString(str) {\n          var p = {};\n          var i = 0;\n\n          // look up type\n          p.type = Number(str.charAt(0));\n          if (null == exports.types[p.type]) return error();\n\n          // look up attachments if type binary\n          if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n            var buf = '';\n            while (str.charAt(++i) != '-') {\n              buf += str.charAt(i);\n              if (i == str.length) break;\n            }\n            if (buf != Number(buf) || str.charAt(i) != '-') {\n              throw new Error('Illegal attachments');\n            }\n            p.attachments = Number(buf);\n          }\n\n          // look up namespace (if any)\n          if ('/' == str.charAt(i + 1)) {\n            p.nsp = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (',' == c) break;\n              p.nsp += c;\n              if (i == str.length) break;\n            }\n          } else {\n            p.nsp = '/';\n          }\n\n          // look up id\n          var next = str.charAt(i + 1);\n          if ('' !== next && Number(next) == next) {\n            p.id = '';\n            while (++i) {\n              var c = str.charAt(i);\n              if (null == c || Number(c) != c) {\n                --i;\n                break;\n              }\n              p.id += str.charAt(i);\n              if (i == str.length) break;\n            }\n            p.id = Number(p.id);\n          }\n\n          // look up json data\n          if (str.charAt(++i)) {\n            try {\n              p.data = json.parse(str.substr(i));\n            } catch (e) {\n              return error();\n            }\n          }\n\n          debug('decoded %s as %j', str, p);\n          return p;\n        }\n\n        /**\n         * Deallocates a parser's resources\n         *\n         * @api public\n         */\n\n        Decoder.prototype.destroy = function () {\n          if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n          }\n        };\n\n        /**\n         * A manager of a binary event's 'buffer sequence'. Should\n         * be constructed whenever a packet of type BINARY_EVENT is\n         * decoded.\n         *\n         * @param {Object} packet\n         * @return {BinaryReconstructor} initialized reconstructor\n         * @api private\n         */\n\n        function BinaryReconstructor(packet) {\n          this.reconPack = packet;\n          this.buffers = [];\n        }\n\n        /**\n         * Method to be called when binary data received from connection\n         * after a BINARY_EVENT packet.\n         *\n         * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n         * @return {null | Object} returns null if more binary data is expected or\n         *   a reconstructed packet object if all buffers have been received.\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.takeBinaryData = function (binData) {\n          this.buffers.push(binData);\n          if (this.buffers.length == this.reconPack.attachments) {\n            // done with buffer list\n            var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n          }\n          return null;\n        };\n\n        /**\n         * Cleans up binary packet reconstruction variables.\n         *\n         * @api private\n         */\n\n        BinaryReconstructor.prototype.finishedReconstruction = function () {\n          this.reconPack = null;\n          this.buffers = [];\n        };\n\n        function error(data) {\n          return {\n            type: exports.ERROR,\n            data: 'parser error'\n          };\n        }\n      }, { \"./binary\": 39, \"./is-buffer\": 41, \"component-emitter\": 42, \"debug\": 14, \"isarray\": 33, \"json3\": 34 }], 41: [function (_dereq_, module, exports) {\n        (function (global) {\n\n          module.exports = isBuf;\n\n          /**\n           * Returns true if obj is a buffer or an arraybuffer.\n           *\n           * @api private\n           */\n\n          function isBuf(obj) {\n            return global.Buffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer;\n          }\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 42: [function (_dereq_, module, exports) {\n        arguments[4][26][0].apply(exports, arguments);\n      }, { \"dup\": 26 }], 43: [function (_dereq_, module, exports) {\n        module.exports = toArray;\n\n        function toArray(list, index) {\n          var array = [];\n\n          index = index || 0;\n\n          for (var i = index || 0; i < list.length; i++) {\n            array[i - index] = list[i];\n          }\n\n          return array;\n        }\n      }, {}], 44: [function (_dereq_, module, exports) {\n        (function (global) {\n          /*! https://mths.be/utf8js v2.0.0 by @mathias */\n          ;(function (root) {\n\n            // Detect free variables `exports`\n            var freeExports = typeof exports == 'object' && exports;\n\n            // Detect free variable `module`\n            var freeModule = typeof module == 'object' && module && module.exports == freeExports && module;\n\n            // Detect free variable `global`, from Node.js or Browserified code,\n            // and use it as `root`\n            var freeGlobal = typeof global == 'object' && global;\n            if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n              root = freeGlobal;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var stringFromCharCode = String.fromCharCode;\n\n            // Taken from https://mths.be/punycode\n            function ucs2decode(string) {\n              var output = [];\n              var counter = 0;\n              var length = string.length;\n              var value;\n              var extra;\n              while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n                  // high surrogate, and there is a next character\n                  extra = string.charCodeAt(counter++);\n                  if ((extra & 0xFC00) == 0xDC00) {\n                    // low surrogate\n                    output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n                  } else {\n                    // unmatched surrogate; only append this code unit, in case the next\n                    // code unit is the high surrogate of a surrogate pair\n                    output.push(value);\n                    counter--;\n                  }\n                } else {\n                  output.push(value);\n                }\n              }\n              return output;\n            }\n\n            // Taken from https://mths.be/punycode\n            function ucs2encode(array) {\n              var length = array.length;\n              var index = -1;\n              var value;\n              var output = '';\n              while (++index < length) {\n                value = array[index];\n                if (value > 0xFFFF) {\n                  value -= 0x10000;\n                  output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n                  value = 0xDC00 | value & 0x3FF;\n                }\n                output += stringFromCharCode(value);\n              }\n              return output;\n            }\n\n            function checkScalarValue(codePoint) {\n              if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n                throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n              }\n            }\n            /*--------------------------------------------------------------------------*/\n\n            function createByte(codePoint, shift) {\n              return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n            }\n\n            function encodeCodePoint(codePoint) {\n              if ((codePoint & 0xFFFFFF80) == 0) {\n                // 1-byte sequence\n                return stringFromCharCode(codePoint);\n              }\n              var symbol = '';\n              if ((codePoint & 0xFFFFF800) == 0) {\n                // 2-byte sequence\n                symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n              } else if ((codePoint & 0xFFFF0000) == 0) {\n                // 3-byte sequence\n                checkScalarValue(codePoint);\n                symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n                symbol += createByte(codePoint, 6);\n              } else if ((codePoint & 0xFFE00000) == 0) {\n                // 4-byte sequence\n                symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n                symbol += createByte(codePoint, 12);\n                symbol += createByte(codePoint, 6);\n              }\n              symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n              return symbol;\n            }\n\n            function utf8encode(string) {\n              var codePoints = ucs2decode(string);\n              var length = codePoints.length;\n              var index = -1;\n              var codePoint;\n              var byteString = '';\n              while (++index < length) {\n                codePoint = codePoints[index];\n                byteString += encodeCodePoint(codePoint);\n              }\n              return byteString;\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            function readContinuationByte() {\n              if (byteIndex >= byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              var continuationByte = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              if ((continuationByte & 0xC0) == 0x80) {\n                return continuationByte & 0x3F;\n              }\n\n              // If we end up here, it’s not a continuation byte\n              throw Error('Invalid continuation byte');\n            }\n\n            function decodeSymbol() {\n              var byte1;\n              var byte2;\n              var byte3;\n              var byte4;\n              var codePoint;\n\n              if (byteIndex > byteCount) {\n                throw Error('Invalid byte index');\n              }\n\n              if (byteIndex == byteCount) {\n                return false;\n              }\n\n              // Read first byte\n              byte1 = byteArray[byteIndex] & 0xFF;\n              byteIndex++;\n\n              // 1-byte sequence (no continuation bytes)\n              if ((byte1 & 0x80) == 0) {\n                return byte1;\n              }\n\n              // 2-byte sequence\n              if ((byte1 & 0xE0) == 0xC0) {\n                var byte2 = readContinuationByte();\n                codePoint = (byte1 & 0x1F) << 6 | byte2;\n                if (codePoint >= 0x80) {\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 3-byte sequence (may include unpaired surrogates)\n              if ((byte1 & 0xF0) == 0xE0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n                if (codePoint >= 0x0800) {\n                  checkScalarValue(codePoint);\n                  return codePoint;\n                } else {\n                  throw Error('Invalid continuation byte');\n                }\n              }\n\n              // 4-byte sequence\n              if ((byte1 & 0xF8) == 0xF0) {\n                byte2 = readContinuationByte();\n                byte3 = readContinuationByte();\n                byte4 = readContinuationByte();\n                codePoint = (byte1 & 0x0F) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n                if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n                  return codePoint;\n                }\n              }\n\n              throw Error('Invalid UTF-8 detected');\n            }\n\n            var byteArray;\n            var byteCount;\n            var byteIndex;\n            function utf8decode(byteString) {\n              byteArray = ucs2decode(byteString);\n              byteCount = byteArray.length;\n              byteIndex = 0;\n              var codePoints = [];\n              var tmp;\n              while ((tmp = decodeSymbol()) !== false) {\n                codePoints.push(tmp);\n              }\n              return ucs2encode(codePoints);\n            }\n\n            /*--------------------------------------------------------------------------*/\n\n            var utf8 = {\n              'version': '2.0.0',\n              'encode': utf8encode,\n              'decode': utf8decode\n            };\n\n            // Some AMD build optimizers, like r.js, check for specific condition patterns\n            // like the following:\n            if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n              define(function () {\n                return utf8;\n              });\n            } else if (freeExports && !freeExports.nodeType) {\n              if (freeModule) {\n                // in Node.js or RingoJS v0.8.0+\n                freeModule.exports = utf8;\n              } else {\n                // in Narwhal or RingoJS v0.7.0-\n                var object = {};\n                var hasOwnProperty = object.hasOwnProperty;\n                for (var key in utf8) {\n                  hasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n                }\n              }\n            } else {\n              // in Rhino or a web browser\n              root.utf8 = utf8;\n            }\n          })(this);\n        }).call(this, typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : {});\n      }, {}], 45: [function (_dereq_, module, exports) {\n        'use strict';\n\n        var alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n            length = 64,\n            map = {},\n            seed = 0,\n            i = 0,\n            prev;\n\n        /**\n         * Return a string representing the specified number.\n         *\n         * @param {Number} num The number to convert.\n         * @returns {String} The string representation of the number.\n         * @api public\n         */\n        function encode(num) {\n          var encoded = '';\n\n          do {\n            encoded = alphabet[num % length] + encoded;\n            num = Math.floor(num / length);\n          } while (num > 0);\n\n          return encoded;\n        }\n\n        /**\n         * Return the integer value specified by the given string.\n         *\n         * @param {String} str The string to convert.\n         * @returns {Number} The integer value represented by the string.\n         * @api public\n         */\n        function decode(str) {\n          var decoded = 0;\n\n          for (i = 0; i < str.length; i++) {\n            decoded = decoded * length + map[str.charAt(i)];\n          }\n\n          return decoded;\n        }\n\n        /**\n         * Yeast: A tiny growing id generator.\n         *\n         * @returns {String} A unique id.\n         * @api public\n         */\n        function yeast() {\n          var now = encode(+new Date());\n\n          if (now !== prev) return seed = 0, prev = now;\n          return now + '.' + encode(seed++);\n        }\n\n        //\n        // Map each character to its index.\n        //\n        for (; i < length; i++) map[alphabet[i]] = i;\n\n        //\n        // Expose the `yeast`, `encode` and `decode` functions.\n        //\n        yeast.encode = encode;\n        yeast.decode = decode;\n        module.exports = yeast;\n      }, {}] }, {}, [1])(1);\n  });\n}\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '708e5HzkuhMPpWIbCOFS54R', 'string-format.js');\n// scripts/libs/string-format.js.js\n\n/**\n * 扩展了 String 类型，给其添加格式化的功能，替换字符串中 {placeholder} 或者 {0}, {1} 等模式部分为参数中传入的字符串\n * 使用方法:\n *     'I can speak {language} since I was {age}'.format({language: 'Javascript', age: 10})\n *     'I can speak {0} since I was {1}'.format('Javascript', 10)\n * 输出都为:\n *     I can speak Javascript since I was 10\n *\n * @param replacements 用来替换 placeholder 的 JSON 对象或者数组\n */\nString.prototype.format = function (replacements) {\n    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 0);\n    return formatString(this, replacements);\n};\n\n/**\n * 替换字符串中 {placeholder} 或者 {0}, {1} 等模式部分为参数中传入的字符串\n * 使用方法:\n *     formatString('I can speak {language} since I was {age}', {language: 'Javascript', age: 10})\n *     formatString('I can speak {0} since I was {1}', 'Javascript', 10)\n * 输出都为:\n *     I can speak Javascript since I was 10\n *\n * @param str 带有 placeholder 的字符串\n * @param replacements 用来替换 placeholder 的 JSON 对象或者数组\n */\nvar formatString = function formatString(str, replacements) {\n    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 1);\n\n    return str.replace(/\\{\\{|\\}\\}|\\{(\\w+)\\}/g, function (m, n) {\n        if (m == '{{') {\n            return '{';\n        }\n        if (m == '}}') {\n            return '}';\n        }\n        return replacements[n];\n    });\n};\n\ncc._RFpop();"],"sourceRoot":"/source/"}